name: Golang and Npm Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

defaults:
  run:
    working-directory: .

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - run: go test -v ./...

  release-golang:
    needs: test
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-file: CHANGELOG.md
          update-file: pkg/version/version.go
          dry: true

  release-component-library:
    needs: release-golang
    name: npm-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: "https://registry.npmjs.org"
      - name: Install Dependencies
        working-directory: ./component-library
        run: npm ci
      - name: Release
        working-directory: ./component-library
        env:
          HUSKY: 0
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release

  publish-npm-library:
    needs: ['release-component-library']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        working-directory: ./component-library
        run: npm install
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Unarchive build
        working-directory: ./component-library
        run: tar -xzf ./lib.tar.gz
      - name: Publish
        working-directory: ./component-library
        run: npm publish --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Create a repository secret named NPM_TOKEN containing an npm access token