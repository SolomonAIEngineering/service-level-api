{
  "swagger": "2.0",
  "info": {
    "title": "Accounting Service",
    "description": "The accounting service for the solomon-ai backend",
    "version": "0.1",
    "contact": {
      "name": "YoanYomba",
      "url": "https://solomon-ai.ip",
      "email": "yoanyomba@solomon-ai.co"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "https://github.com/openfga/openfga/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "AccountingService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/health": {
      "get": {
        "summary": "Health Check",
        "description": "Performs a health check on the service.",
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.HealthCheckResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "service health"
        ]
      }
    },
    "/api/v1/merge/exchange-token": {
      "post": {
        "summary": "Exchange Link Token",
        "description": "Exchanges a public link token for an account token.",
        "operationId": "ExchangePublicLinkTokenForAccountTokenResponse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.ExchangePublicLinkTokenForAccountTokenResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Defines a message named ExchangePublicLinkTokenForAccountTokenRequest.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExchangePublicLinkTokenForAccountTokenRequest"
            }
          }
        ],
        "tags": [
          "Token Management"
        ]
      }
    },
    "/api/v1/merge/initiate-token-exchange": {
      "post": {
        "summary": "Get Link Token",
        "description": "Provides a link token to initialize a Link session for the user.",
        "operationId": "GetLinkToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.GetLinkTokenResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Defines a message named GetLinkTokenRequest.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetLinkTokenRequest"
            }
          }
        ],
        "tags": [
          "Token Management"
        ]
      }
    },
    "/api/v1/profile": {
      "post": {
        "summary": "Create Payroll Profile",
        "description": "Creates a payroll profile.",
        "operationId": "CreatePayrollProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.CreateBusinessPayrollProfileResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Defines a message named CreateProfileRequest.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProfileRequest"
            }
          }
        ],
        "tags": [
          "profile"
        ]
      },
      "put": {
        "summary": "Update Payroll Profile",
        "description": "Updates a payroll profile.",
        "operationId": "UpdatePayrollProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.UpdateProfileResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Defines a message named UpdateProfileRequest.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "tags": [
          "profile"
        ]
      }
    },
    "/api/v1/profile/{userId}": {
      "get": {
        "summary": "Get Business Account Profile",
        "description": "Retrieves a business account profile.",
        "operationId": "ReadProfileResponse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.ReadProfileResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "linkedAccountingAccountId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "profile"
        ]
      },
      "delete": {
        "summary": "Delete Payroll Profile",
        "description": "Deletes a business payroll profile.",
        "operationId": "DeleteProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.DeleteProfileResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "profile"
        ]
      }
    },
    "/api/v1/ready": {
      "get": {
        "summary": "Readiness Check",
        "description": "Performs a readiness check on the service.",
        "operationId": "ReadinessCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".api.v1.ReadynessCheckResponse"
            }
          },
          "400": {
            "description": "Request failed due to invalid input.",
            "schema": {
              "$ref": ".api.v1.ValidationErrorMessageResponse"
            }
          },
          "404": {
            "description": "Request failed due to incorrect path.",
            "schema": {
              "$ref": ".api.v1.PathUnknownErrorMessageResponse"
            }
          },
          "500": {
            "description": "Request failed due to internal server error.",
            "schema": {
              "$ref": ".api.v1.InternalErrorMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "Service Readiness"
        ]
      }
    }
  },
  "definitions": {
    "AccountingAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "fileName": {
          "type": "string",
          "description": "The attachment's name."
        },
        "fileUrl": {
          "type": "string",
          "description": "The attachment's url."
        },
        "company": {
          "type": "string",
          "description": "The company the accounting attachment belongs to."
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp if precise time manipulation is required",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The AccountingAttachment object is used to represent a company's attachments."
    },
    "AccountingIntegrationMergeLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "integration": {
          "type": "string"
        },
        "integrationSlug": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "endUserOriginId": {
          "type": "string"
        },
        "endUserOrganizationName": {
          "type": "string"
        },
        "endUserEmailAddress": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "webhookListenerUrl": {
          "type": "string"
        },
        "isDuplicate": {
          "type": "boolean"
        },
        "token": {
          "$ref": "#/definitions/MergeLinkedAccountToken"
        },
        "integrationName": {
          "type": "string"
        },
        "integrationImage": {
          "type": "string"
        },
        "integrationSquareImage": {
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/LinkedAccountingAccount",
          "description": "When you request a link token to initiate a Merge Link session, Merge determines whether to create a new linked account or modify\nan existing linked account based on a combination of the end_user_origin_id and the category. If you want to support multiple\nconnections, you simply need to provide a different end_user_origin_id for each company.\n\nThis approach enables you to link multiple instances of the same integration (like QuickBooks) for the same end user.\nIt also has the added security benefit of not exposing any internal end_user_origin_ids."
        },
        "mergeLinkedAccountId": {
          "type": "string"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "BalanceSheet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The balance sheet's name."
        },
        "currency": {
          "type": "string"
        },
        "company": {
          "type": "string",
          "title": "Company object for the given BalanceSheet object. May not necessarily be the compnay name but the \ncompany reference"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The balance sheet's date. The balance sheet data will\n reflect the company's financial position this point in time.\n\nConsider using google.protobuf.Timestamp"
        },
        "netAssets": {
          "type": "number",
          "format": "double",
          "description": "The balance sheet's net assets."
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "description": "The balance sheet's total assets."
        },
        "liabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "description": "The balance sheet's total liabilities."
        },
        "equity": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "description": "The balance sheet's total equity."
        },
        "remoteGeneratedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time that balance sheet was generated by the accounting system.\n\nConsider using google.protobuf.Timestamp"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the id as stored in merge"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "the time the record was created at"
        }
      },
      "description": "The BalanceSheet object shows a company’s assets, liabilities, and equity. Assets should be equal\nto liability and equity combined.  This shows the company’s financial health at a specific point in time."
    },
    "BankAccountType": {
      "type": "string",
      "enum": [
        "BANK_ACCOUNT_TYPE_UNSPECIFIED",
        "BANK_ACCOUNT_TYPE_CHECKING",
        "BANK_ACCOUNT_TYPE_SAVINGS"
      ],
      "default": "BANK_ACCOUNT_TYPE_UNSPECIFIED"
    },
    "BankInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "accountNumber": {
          "type": "string",
          "title": "The account number"
        },
        "routingNumber": {
          "type": "string",
          "title": "The routing number"
        },
        "bankName": {
          "type": "string",
          "title": "The bank name"
        },
        "accountType": {
          "$ref": "#/definitions/BankAccountType",
          "description": "The bank account type Possible values include: SAVINGS, CHECKING. \nIn cases where there is no clear mapping, the original value passed through will be returned."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the matching bank object was created in the third party system."
        },
        "mergeAccountId": {
          "type": "string",
          "title": "The record id as stored on the merge platform"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        }
      },
      "description": "The BankInfo object is used to represent the Bank Account information for an Employee."
    },
    "BenefitPlanType": {
      "type": "string",
      "enum": [
        "BENEFIT_PLAN_TYPE_UNSPECIFIED",
        "BENEFIT_PLAN_TYPE_MEDICAL",
        "BENEFIT_PLAN_TYPE_HEALTH_SAVINGS",
        "BENEFIT_PLAN_TYPE_INSURANCE",
        "BENEFIT_PLAN_TYPE_RETIREMENT",
        "BENEFIT_PLAN_TYPE_OTHER"
      ],
      "default": "BENEFIT_PLAN_TYPE_UNSPECIFIED",
      "description": "The type of benefit plan. Possible values include: MEDICAL, HEALTH_SAVINGS, \nINSURANCE, RETIREMENT, OTHER. In cases where there is no clear mapping, \nthe original value passed through will be returned."
    },
    "BusinessActionableInsight": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "example": "1234567890",
          "title": "Unique identifier for the insight"
        },
        "type": {
          "$ref": "#/definitions/BusinessActionableInsightType",
          "title": "Type of the actionable insight"
        },
        "description": {
          "type": "string",
          "example": "Reduce operating costs by optimizing energy usage.",
          "title": "Detailed description of the insight"
        },
        "takeaway": {
          "type": "string",
          "example": "Optimizing energy usage can lead to significant cost savings.",
          "title": "Key takeaway or summary of the insight"
        },
        "action": {
          "type": "string",
          "example": "Implement energy-efficient lighting and machinery.",
          "title": "Suggested action based on the insight"
        },
        "expectedBenefit": {
          "type": "string",
          "example": "Expected to reduce energy costs by up to 20% annually.",
          "title": "Expected benefit or outcome of taking the suggested action"
        },
        "tags": {
          "type": "array",
          "example": [
            "cost-saving",
            "energy-efficiency"
          ],
          "items": {
            "type": "string"
          },
          "title": "Tags associated with the insight for categorization"
        },
        "generatedTime": {
          "type": "string",
          "format": "date-time",
          "title": "Time when the insight was generated"
        },
        "metricsToOptimizeFor": {
          "type": "array",
          "example": [
            "operating costs",
            "energy consumption"
          ],
          "items": {
            "type": "string"
          },
          "title": "Specific business metrics that this insight aims to optimize"
        }
      }
    },
    "BusinessActionableInsightType": {
      "type": "string",
      "enum": [
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_UNSPECIFIED",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_OPERATING_EXPENSES",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_CASH_FLOW_MANAGEMENT",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_REVENUE_GROWTH",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_COST_REDUCTION",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_INVENTORY_MANAGEMENT",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_CAPITAL_ALLOCATION",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_INVESTMENT_OPPORTUNITIES",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_RISK_ASSESSMENT",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_TAX_PLANNING",
        "BUSINESS_ACTIONABLE_INSIGHT_TYPE_DEBT_MANAGEMENT"
      ],
      "default": "BUSINESS_ACTIONABLE_INSIGHT_TYPE_UNSPECIFIED",
      "description": "- BUSINESS_ACTIONABLE_INSIGHT_TYPE_OPERATING_EXPENSES: Operating Expenses: Insights on managing day-to-day operational costs.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_CASH_FLOW_MANAGEMENT: Cash Flow Management: Insights into cash inflows and outflows.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_REVENUE_GROWTH: Revenue Growth: Strategies or opportunities to increase revenue.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_COST_REDUCTION: Cost Reduction: Identifying areas where expenses can be minimized.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_INVENTORY_MANAGEMENT: Inventory Management: Insights on optimizing inventory levels and costs.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_CAPITAL_ALLOCATION: Capital Allocation: Guidance on efficient allocation of financial resources.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_INVESTMENT_OPPORTUNITIES: Investment Opportunities: Identifying potential profitable investments.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_RISK_ASSESSMENT: Risk Assessment: Insights into potential risks and mitigation strategies.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_TAX_PLANNING: Tax Planning: Suggestions for tax optimization.\n - BUSINESS_ACTIONABLE_INSIGHT_TYPE_DEBT_MANAGEMENT: Debt Management: Strategies for managing and reducing debt.",
      "title": "BusinessActionableInsightType is the type of actionable insight"
    },
    "BusinessChartOfAccounts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "the database record's id"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the account id as stored in merge-api. this is a required field"
        },
        "remoteId": {
          "type": "string",
          "title": "The third-party matching id for the object. For example, this field will be the id \nas seen in quickbooks for a sample remote connection against quickbookks"
        },
        "name": {
          "type": "string",
          "description": "The account's name."
        },
        "description": {
          "type": "string",
          "description": "The account's description."
        },
        "classification": {
          "type": "string",
          "description": "The account's broadest grouping. Possible values include: ASSET, EQUITY, EXPENSE, \nLIABILITY, REVENUE. In cases where there is no clear mapping, the original \nvalue passed through will be returned."
        },
        "type": {
          "type": "string",
          "description": "The account's type is a narrower and more specific grouping within the account's classification."
        },
        "status": {
          "type": "string",
          "description": "The account's status. Possible values include: ACTIVE, PENDING, INACTIVE. In cases where there is\n no clear mapping, the original value passed through will be returned."
        },
        "currentBalance": {
          "type": "number",
          "format": "double",
          "description": "The account's current balance."
        },
        "currency": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string",
          "description": "The account's number."
        },
        "parentAccountId": {
          "type": "string",
          "description": "ID of the parent account."
        },
        "company": {
          "type": "string",
          "description": "The company the account belongs to."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The Account object is what companies use to track transactions. \nThey can be both bank accounts or a general ledger account (also called a chart of accounts).\n\nNote: a company can have a multitude of these accounts",
      "required": [
        "mergeRecordId"
      ]
    },
    "BusinessTransaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "transactionType": {
          "type": "string",
          "description": "The type of transaction, which can by any transaction object not already included in Merge’s common model."
        },
        "number": {
          "type": "string",
          "description": "The transaction's number used for identifying purposes."
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date upon which the transaction occurred."
        },
        "account": {
          "type": "string",
          "description": "The transaction's account."
        },
        "contact": {
          "type": "string",
          "description": "The contact to whom the transaction relates to."
        },
        "totalAmount": {
          "type": "string",
          "description": "The total amount being paid after taxes.\n\nMight be better as double."
        },
        "currency": {
          "type": "string"
        },
        "exchangeRate": {
          "type": "string",
          "description": "The transaction's exchange rate.\n\nAssuming string, but might be better as float or double."
        },
        "company": {
          "type": "string",
          "description": "The company the transaction belongs to."
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TransactionLineItem"
          },
          "title": "The TransactionLineItem object is used to represent a transaction's line item"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "accountingPeriod": {
          "type": "string",
          "description": "The accounting period that the Transaction was generated in."
        },
        "mergeRecordId": {
          "type": "string"
        },
        "remoteId": {
          "type": "string"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "* Credit Notes\n* Expenses\n* Invoices\n* Journal Entries\n* Payments\n* Purchase Orders\n* Vendor Credits",
      "title": "The Transaction common model includes records of all types of transactions that do not appear in other common models.\nThe type of transaction can be identified through the type field. More specifically, \nit will contain all types of transactions outside of:"
    },
    "CashFlowStatements": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The cash flow statement's name."
        },
        "currency": {
          "type": "string",
          "title": "The cash flow statement's currency"
        },
        "company": {
          "type": "string",
          "description": "The company the cash flow statement belongs to."
        },
        "startPeriod": {
          "type": "string",
          "format": "date-time",
          "description": "The cash flow statement's start period.\n\nConsider using google.protobuf.Timestamp"
        },
        "endPeriod": {
          "type": "string",
          "format": "date-time",
          "description": "The cash flow statement's end period.\n\nConsider using google.protobuf.Timestamp"
        },
        "cashAtBeginningOfPeriod": {
          "type": "number",
          "format": "double",
          "description": "Cash and cash equivalents at the beginning of the cash flow statement's period."
        },
        "cashAtEndOfPeriod": {
          "type": "number",
          "format": "double",
          "description": "Cash and cash equivalents at the beginning of the cash flow statement's period."
        },
        "operatingActivities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "title": "Operating activities"
        },
        "investingActivities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "title": "Investing activities"
        },
        "financingActivities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "title": "Financing activities"
        },
        "remoteGeneratedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time that cash flow statement was generated by the accounting system.\n\nConsider using google.protobuf.Timestamp"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the cashflow statements id as stored in merge"
        }
      },
      "description": "The CashFlowStatement object shows operating activities, investing activities, and financing activities over a\nperiod of time (month, quarter, or year)."
    },
    "CompanyAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "the database record's id"
        },
        "type": {
          "type": "string"
        },
        "street1": {
          "type": "string",
          "description": "Line 1 of the address's street."
        },
        "street2": {
          "type": "string",
          "description": "Line 2 of the address's street."
        },
        "city": {
          "type": "string",
          "description": "The address's city."
        },
        "state": {
          "type": "string",
          "description": "The address's state or region."
        },
        "countrySubdivision": {
          "type": "string",
          "description": "Typically, this might just be 'state' but used your field name to keep it consistent with the JSON",
          "title": "country's subdivision"
        },
        "country": {
          "type": "string",
          "description": "The address's country."
        },
        "zipCode": {
          "type": "string",
          "description": "The address's zip code."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp if precise time manipulation is required",
          "title": "This is the datetime that this object was last updated by Merge"
        }
      },
      "description": "The CompanyAddress object is used to represent a contact's or company's address."
    },
    "CompanyInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "the id of the record in our system"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The company's name."
        },
        "legalName": {
          "type": "string",
          "description": "The company's legal name."
        },
        "taxNumber": {
          "type": "string",
          "description": "The company's tax number."
        },
        "fiscalYearEndMonth": {
          "type": "integer",
          "format": "int32",
          "description": "The company's fiscal year end month."
        },
        "fiscalYearEndDay": {
          "type": "integer",
          "format": "int32",
          "description": "The company's fiscal year end day."
        },
        "currency": {
          "type": "string",
          "description": "The currency set in the company's accounting platform."
        },
        "remoteCreatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the third party's company was created.\n\nConsider using google.protobuf.Timestamp"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The company's urls."
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CompanyAddress"
          },
          "title": "the company's addresses"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the company's phone numbers"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the id of the record as stored in merge"
        }
      },
      "description": "The CompanyInfo object is used to represent a company's information."
    },
    "CompanyProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "legalName": {
          "type": "string",
          "description": "The company's legal name."
        },
        "displayName": {
          "type": "string",
          "title": "The displayed name of the company"
        },
        "einNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The company's tax number."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was created"
        },
        "mergeAccountId": {
          "type": "string",
          "title": "The uuid of the object as stored in merge"
        }
      },
      "title": "The CompanyProfile object is used to represent a company within the HRIS / Payroll system.\nNOTE: a company can link multiple hris company profiles. This is important because a company can have multiple\nlocations and each location can have its own hris company profile"
    },
    "Contacts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The contact's name."
        },
        "isSupplier": {
          "type": "boolean",
          "description": "Whether the contact is a supplier."
        },
        "isCustomer": {
          "type": "boolean",
          "description": "Whether the contact is a customer."
        },
        "emailAddress": {
          "type": "string",
          "description": "The contact's email address."
        },
        "taxNumber": {
          "type": "string",
          "description": "The contact's tax number."
        },
        "status": {
          "type": "string",
          "title": "The contact's status"
        },
        "currency": {
          "type": "string",
          "description": "The currency the contact's transactions are in."
        },
        "remoteUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the third party's contact was updated.\n\nConsider using google.protobuf.Timestamp"
        },
        "company": {
          "type": "string",
          "description": "The company the contact belongs to."
        },
        "addressesIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Address object IDs for the given Contacts object.\n\nThese are IDs, not the Address structure itself"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Phone numbers of the contact"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "The account id as seen in merge"
        }
      },
      "description": "The Contact object refers to either a supplier or a customer."
    },
    "CreateProfileRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Defines a message named CreateProfileRequest.",
      "required": [
        "userId"
      ]
    },
    "CreateProfileResponse": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string",
          "format": "uint64",
          "title": "the profile identifier"
        }
      },
      "description": "Defines a message named CreatesProfileResponse."
    },
    "CreditNote": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "the database record id as stored in our systems"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The credit note's transaction date.\n\nConsider using google.protobuf.Timestamp"
        },
        "status": {
          "type": "string",
          "description": "The credit note's status."
        },
        "number": {
          "type": "string",
          "description": "The credit note's number."
        },
        "contact": {
          "type": "string",
          "description": "The credit note's contact."
        },
        "company": {
          "type": "string",
          "description": "The company the credit note belongs to."
        },
        "exchangeRate": {
          "type": "string",
          "description": "The credit note's exchange rate.\n\nConsider using double or float if this represents a number"
        },
        "totalAmount": {
          "type": "number",
          "format": "double",
          "description": "The credit note's total amount."
        },
        "remainingCredit": {
          "type": "number",
          "format": "double",
          "description": "The amount of value remaining in the credit note that the customer can use."
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CreditNoteLineItem"
          }
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "These are IDs"
        },
        "currency": {
          "type": "string"
        },
        "remoteCreatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Consider using google.protobuf.Timestamp"
        },
        "remoteUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Consider using google.protobuf.Timestamp"
        },
        "paymentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "These are IDs",
          "title": "Array of Payment object IDs"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "accountingPeriod": {
          "type": "string",
          "description": "The accounting period that the CreditNote was generated in."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Consider using google.protobuf.Timestamp"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the id as stored in merge"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "A CreditNote is transaction issued to a customer, indicating a reduction or cancellation of the amount owed by the customer. \nIt is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a sales transaction. \nA CreditNote can be applied to Accounts Receivable Invoices to decrease the overall amount of the Invoice."
    },
    "CreditNoteLineItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "unitPrice": {
          "type": "string",
          "title": "Consider using double or float if this represents a number"
        },
        "taxRate": {
          "type": "string",
          "title": "This seems to be an ID"
        },
        "totalLineAmount": {
          "type": "string",
          "title": "Consider using double or float"
        },
        "trackingCategory": {
          "type": "string",
          "title": "This seems to be an ID"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "These are IDs"
        },
        "account": {
          "type": "string",
          "title": "This seems to be an ID"
        },
        "company": {
          "type": "string"
        },
        "remoteId": {
          "type": "string"
        },
        "item": {
          "type": "string"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "memo": {
          "type": "string"
        }
      },
      "description": "CreditNoteLineItem is used to represent a credit note's line items."
    },
    "Deduction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The deduction's name."
        },
        "employeeDeduction": {
          "type": "number",
          "format": "double",
          "description": "The amount of money that is withheld from an employee's gross pay by the employee."
        },
        "companyDeduction": {
          "type": "number",
          "format": "double",
          "description": "The amount of money that is withheld on behalf of an employee by the company."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "payrollRunMergeAccountId": {
          "type": "string",
          "description": "The payroll being run."
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on the merge platform"
        }
      },
      "description": "The Deduction object is used to represent an array of the wages\nwithheld from total earnings for the purpose of paying taxes."
    },
    "DeleteProfileResponse": {
      "type": "object",
      "properties": {
        "isDeleted": {
          "type": "boolean",
          "description": "A boolean field named \"is_deleted\" with field number 1.",
          "title": "whether the profile is deleted"
        }
      },
      "description": "Defines a message named DeleteProfileResponse."
    },
    "DependentRelationship": {
      "type": "string",
      "enum": [
        "DEPENDENT_RELATIONSHIP_UNSPECIFIED",
        "DEPENDENT_RELATIONSHIP_CHILD",
        "DEPENDENT_RELATIONSHIP_SPOUSE",
        "DEPENDENT_RELATIONSHIP_DOMESTIC_PARTNER"
      ],
      "default": "DEPENDENT_RELATIONSHIP_UNSPECIFIED",
      "description": "The dependent's relationship to the employee. Possible values include: CHILD, \nSPOUSE, DOMESTIC_PARTNER. In cases where there is no clear mapping, \nthe original value passed through will be returned."
    },
    "Dependents": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "firstName": {
          "type": "string",
          "description": "The employee's first name."
        },
        "lastName": {
          "type": "string",
          "description": "The employee's last name."
        },
        "middleName": {
          "type": "string",
          "title": "The employee's middle name"
        },
        "dependentRelationshipToEmployee": {
          "$ref": "#/definitions/DependentRelationship",
          "description": "The relationship of the dependent to the employee. Possible values include: CHILD, SPOUSE, DOMESTIC_PARTNER, OTHER.\nIn cases where there is no clear mapping, the original value passed through will be returned."
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time",
          "description": "The dependent's date of birth."
        },
        "gender": {
          "$ref": "#/definitions/Gender",
          "title": "the gender of the dependent"
        },
        "phoneNumber": {
          "type": "string",
          "title": "the phone number of the dependent"
        },
        "homeLocation": {
          "$ref": "#/definitions/LocationAddress",
          "title": "The dependents home location"
        },
        "isStudent": {
          "type": "boolean",
          "title": "Whether or not the dependent is a student"
        },
        "ssn": {
          "type": "string",
          "description": "The dependents's social security number."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was created by Merge"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on the merge platform"
        }
      },
      "title": "Dependents object is used to represent a dependent (e.g. child, spouse, domestic partner, etc) of an Employee"
    },
    "Earning": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "$ref": "#/definitions/EarningType",
          "description": "The type of earning. Possible values include: SALARY, REIMBURSEMENT, OVERTIME, BONUS.\n In cases where there is no clear mapping, the original value passed through will be returned."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "payrollRunMergeAccountId": {
          "type": "string",
          "description": "The payroll being run."
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on the merge platform"
        }
      },
      "description": "The Earning object is used to represent an array of different compensations \nthat an employee receives within specific wage categories."
    },
    "EarningType": {
      "type": "string",
      "enum": [
        "EARNING_TYPE_UNSPECIFIED",
        "EARNING_TYPE_SALARY",
        "EARNING_TYPE_REIMBURSEMENT",
        "EARNING_TYPE_OVERTIME",
        "EARNING_TYPE_BONUS"
      ],
      "default": "EARNING_TYPE_UNSPECIFIED",
      "description": "The type of earning. Possible values include: SALARY, REIMBURSEMENT, OVERTIME, BONUS. \nIn cases where there is no clear mapping, the original value passed through will be returned."
    },
    "EmployeTimeOffBalance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "balance": {
          "type": "number",
          "format": "double",
          "title": "balance"
        },
        "used": {
          "type": "number",
          "format": "double",
          "title": "used"
        },
        "policyType": {
          "$ref": "#/definitions/PolicyType",
          "title": "policy type of the time off balance"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on the merge platform"
        }
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "employeeNumber": {
          "type": "string",
          "title": "The employee's number"
        },
        "companyId": {
          "type": "string",
          "description": "The ID of the employee's company."
        },
        "firstName": {
          "type": "string",
          "description": "The employee's first name."
        },
        "lastName": {
          "type": "string",
          "description": "The employee's last name."
        },
        "employeesPreferredName": {
          "type": "string",
          "description": "The employee's preferred name."
        },
        "displayFullName": {
          "type": "string",
          "title": "The employee's full name, to use for display purposes. \nIf a preferred first name is available, the full name \nwill include the preferred first name"
        },
        "employeeUserNameAsSeenInRemoteUi": {
          "type": "string",
          "description": "The employee's username that appears in the remote UI."
        },
        "workEmail": {
          "type": "string",
          "description": "The employee's work email."
        },
        "personalEmail": {
          "type": "string",
          "title": "the employee's personal email"
        },
        "mobilePhoneNumber": {
          "type": "string",
          "description": "The employee's mobile phone number."
        },
        "employments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmployeeJobPositionAtCompany"
          },
          "title": "The employee's various position at the company"
        },
        "employmentType": {
          "type": "string",
          "description": "UUID fields",
          "title": "the employment type"
        },
        "homeLocation": {
          "$ref": "#/definitions/LocationAddress",
          "title": "the employee's home location"
        },
        "workLocation": {
          "$ref": "#/definitions/LocationAddress",
          "title": "the employee's work location"
        },
        "manager": {
          "$ref": "#/definitions/Employee",
          "title": "the employee's manager"
        },
        "group": {
          "$ref": "#/definitions/Group",
          "title": "the employee's pay group"
        },
        "ssn": {
          "type": "string",
          "title": "Other fields\nthe employee's social security number"
        },
        "gender": {
          "$ref": "#/definitions/Gender",
          "description": "The employee's gender. Possible values include: MALE, FEMALE, NON-BINARY, OTHER, PREFER_NOT_TO_DISCLOSE.\nIn cases where there is no clear mapping, the original value passed through will be returned."
        },
        "ethnicity": {
          "$ref": "#/definitions/Ethnicity",
          "description": "The employee's ethnicity. Possible values include: AMERICAN_INDIAN_OR_ALASKA_NATIVE, ASIAN_OR_INDIAN_SUBCONTINENT, \nBLACK_OR_AFRICAN_AMERICAN, HISPANIC_OR_LATINO, NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER, \nTWO_OR_MORE_RACES, WHITE, PREFER_NOT_TO_DISCLOSE. In cases where there is no clear mapping, the original value passed through will be returned."
        },
        "maritalStatus": {
          "$ref": "#/definitions/MaritalStatus",
          "description": "The employee's filing status as related to marital status. Possible values include: SINGLE, MARRIED_FILING_JOINTLY,\nMARRIED_FILING_SEPARATELY, HEAD_OF_HOUSEHOLD, QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD.\nIn cases where there is no clear mapping, the original value passed through will be returned."
        },
        "dateOfBirth": {
          "type": "string",
          "description": "The employee's date of birth.\n\nUse string for ISO 8601 datetime"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the employee started working. \nIf an employee was rehired, the most recent start date will be returned."
        },
        "remoteCreatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the third party's employee was created."
        },
        "employmentStatus": {
          "$ref": "#/definitions/EmploymentStatus",
          "description": "The employment status of the employee. Possible values include: ACTIVE, PENDING, INACTIVE.\nIn cases where there is no clear mapping, the original value passed through will be returned."
        },
        "terminationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The employee's termination date."
        },
        "avatar": {
          "type": "string",
          "description": "The URL of the employee's avatar image."
        },
        "bankAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BankInfo"
          },
          "title": "The bank account information for an employee"
        },
        "dependents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Dependents"
          },
          "title": "The dependents of the employee"
        },
        "payrollRuns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmployeePayrollRun"
          },
          "description": "Represent an employee's pay statement for a specific payroll run."
        },
        "payTimeOffBalance": {
          "$ref": "#/definitions/EmployeTimeOffBalance",
          "title": "The time off balance for an employee"
        },
        "benefits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmployeeBenefits"
          },
          "description": "the benefits associated with the employee."
        },
        "mergeAccountId": {
          "type": "string",
          "title": "Merge record UUID"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        }
      },
      "description": "The Employee object is used to represent any person who has been employed by a company."
    },
    "EmployeeBenefits": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "providerName": {
          "type": "string",
          "description": "The name of the benefit provider."
        },
        "employeeMergeAccountId": {
          "type": "string",
          "description": "The ID of the employee."
        },
        "benefitPlanMergeAccountId": {
          "type": "string",
          "description": "The ID of the benefit plan."
        },
        "employeeContribution": {
          "type": "string",
          "format": "uint64",
          "description": "The employee's contribution."
        },
        "companyContribution": {
          "type": "string",
          "format": "uint64",
          "description": "The company's contribution."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The day and time the benefit started."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "The day and time the benefit ended."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This it the id of the record as seeon on the merge platform"
        }
      },
      "description": "The Benefit object is used to represent a benefit that an employee has enrolled in."
    },
    "EmployeeJobPositionAtCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "jobTitle": {
          "type": "string",
          "title": "The job title"
        },
        "payRate": {
          "type": "number",
          "format": "double",
          "title": "the pay rate"
        },
        "payPeriod": {
          "$ref": "#/definitions/PayPeriod",
          "title": "the pay period"
        },
        "payFrequency": {
          "$ref": "#/definitions/PayFrequency",
          "title": "the pay frequency"
        },
        "payCurrency": {
          "type": "string",
          "title": "the pay currency"
        },
        "flsaStatus": {
          "$ref": "#/definitions/FlsaStatus",
          "title": "the positions flsa status"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "title": "the positions effective date"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on merge"
        }
      },
      "description": "The Employment object is used to represent a job position at a company.\nNOTE: When there is a change in pay or title, integrations with historical \ndata will create new Employment objects while integrations without \nhistorical data will update existing ones."
    },
    "EmployeePayrollRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "grossPay": {
          "type": "number",
          "format": "double",
          "description": "The total earnings throughout a given period for an employee before any deductions are made."
        },
        "netPay": {
          "type": "number",
          "format": "double",
          "description": "The take-home pay throughout a given period for an employee after deductions are made."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The day and time the payroll run started."
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "checkDate": {
          "type": "string",
          "format": "date-time"
        },
        "earnings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Earning"
          },
          "title": "The Earning object is used to represent an array of different compensations\nthat an employee receives within specific wage categories"
        },
        "deductions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Deduction"
          },
          "description": "The Deduction object is used to represent an array of the wages withheld \nfrom total earnings for the purpose of paying taxes."
        },
        "taxes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Tax"
          },
          "description": "The Tax object is used to represent an array of the tax deductions \nfor a given employee's payroll run."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "payrollRunMergeAccountId": {
          "type": "string",
          "description": "The payroll being run."
        },
        "employeeMergeAccountId": {
          "type": "string",
          "description": "The employee whose payroll is being run."
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on the merge platform"
        }
      },
      "description": "The EmployeePayrollRun object is used to represent an employee's pay statement for a specific payroll run."
    },
    "EmployerBenefits": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object.\n\nExternal system identifier (integration)"
        },
        "benefitPlanType": {
          "$ref": "#/definitions/BenefitPlanType",
          "description": "The type of benefit plan. Possible values include: MEDICAL, HEALTH_SAVINGS, INSURANCE, RETIREMENT, OTHER. \nIn cases where there is no clear mapping, the original value passed through will be returned.\n\nType of benefit plan, e.g., \"MEDICAL\""
        },
        "name": {
          "type": "string",
          "description": "The employer benefit's name - typically the carrier or network name.\n\nName of the benefit plan"
        },
        "description": {
          "type": "string",
          "description": "The employer benefit's description.\n\nDescription of the plan"
        },
        "deductionCode": {
          "type": "string",
          "description": "The employer benefit's deduction code.\n\nCode for payroll deduction"
        },
        "remoteWasDeleted": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates whether or not this object has been deleted in the third party platform.\n\nFlag for deletion status"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Creation date in ISO 8601 format"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last modification date in ISO 8601 format",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeAccountId": {
          "type": "string",
          "description": "Merge record UUID",
          "title": "The id of the record as seen on the merge platform"
        },
        "employeeBenefits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmployeeBenefits"
          },
          "title": "The employee benefits tied to this provided record"
        }
      },
      "description": "EmployerBenefits is used to represent a benefit plan offered by a company."
    },
    "EmployerPayrollRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "runState": {
          "$ref": "#/definitions/PayrollRunState",
          "description": "The state of the payroll run Possible values include: PAID, DRAFT, APPROVED, FAILED, CLOSED.\nIn cases where there is no clear mapping, the original value passed through will be returned."
        },
        "runType": {
          "$ref": "#/definitions/PayrollRunType",
          "description": "The type of the payroll run Possible values include: REGULAR, OFF_CYCLE, \nCORRECTION, TERMINATION, SIGN_ON_BONUS. In cases where there is no clear mapping, the original value passed through will be returned."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The day and time the payroll run started."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "The day and time the payroll run ended."
        },
        "checkDate": {
          "type": "string",
          "format": "date-time",
          "description": "The day and time the payroll run was checked."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "title": "Indicates whether or not this object has been deleted in the third party platform"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was created by Merge"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "payrollRuns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmployeePayrollRun"
          },
          "title": "The set of payroll records for the payroll run"
        }
      },
      "description": "The EmployerPayrollRun object is used to represent a group of pay statements for a specific pay schedule."
    },
    "EmploymentStatus": {
      "type": "string",
      "enum": [
        "EMPLOYMENT_STATUS_UNSPECIFIED",
        "EMPLOYMENT_STATUS_ACTIVE",
        "EMPLOYMENT_STATUS_PENDING",
        "EMPLOYMENT_STATUS_INACTIVE"
      ],
      "default": "EMPLOYMENT_STATUS_UNSPECIFIED"
    },
    "Ethnicity": {
      "type": "string",
      "enum": [
        "ETHNICITY_UNSPECIFIED",
        "ETHNICITY_AMERICAN_INDIAN_OR_ALASKA_NATIVE",
        "ETHNICITY_ASIAN_OR_INDIAN_SUBCONTINENT",
        "ETHNICITY_BLACK_OR_AFRICAN_AMERICAN",
        "ETHNICITY_HISPANIC_OR_LATINO",
        "ETHNICITY_NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
        "ETHNICITY_TWO_OR_MORE_RACES",
        "ETHNICITY_WHITE",
        "ETHNICITY_PREFER_NOT_TO_DISCLOSE"
      ],
      "default": "ETHNICITY_UNSPECIFIED",
      "description": "The employee's ethnicity. Possible values include: AMERICAN_INDIAN_OR_ALASKA_NATIVE, ASIAN_OR_INDIAN_SUBCONTINENT, \nBLACK_OR_AFRICAN_AMERICAN, HISPANIC_OR_LATINO, NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER, \nTWO_OR_MORE_RACES, WHITE, PREFER_NOT_TO_DISCLOSE. In cases where there is no clear mapping, the original value passed through will be returned."
    },
    "ExchangePublicLinkTokenForAccountTokenRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uint64",
          "title": "The user id\nValidations:\n- user_id must be greater than 0"
        },
        "publicToken": {
          "type": "string",
          "title": "the public link token"
        },
        "endUserOriginId": {
          "type": "string",
          "title": "the end user's origin id"
        },
        "organizationName": {
          "type": "string",
          "title": "the organization name"
        }
      },
      "description": "Defines a message named ExchangePublicLinkTokenForAccountTokenRequest.",
      "required": [
        "userId",
        "publicToken",
        "endUserOriginId",
        "organizationName"
      ]
    },
    "ExchangePublicLinkTokenForAccountTokenResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "the status of the exchange token"
        }
      },
      "description": "Defines a message named ExchangePublicLinkTokenForAccountTokenResponse.",
      "required": [
        "success"
      ]
    },
    "Expense": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "When the transaction occurred.\n\nConsider using google.protobuf.Timestamp"
        },
        "remoteCreatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the expense was created.\n\nConsider using google.protobuf.Timestamp"
        },
        "account": {
          "type": "string",
          "description": "The expense's payment account."
        },
        "contact": {
          "type": "string",
          "description": "The expense's contact."
        },
        "totalAmount": {
          "type": "number",
          "format": "double",
          "description": "The expense's total amount."
        },
        "subTotal": {
          "type": "number",
          "format": "double",
          "description": "The expense's total amount before tax."
        },
        "totalTaxAmount": {
          "type": "number",
          "format": "double",
          "description": "The expense's total tax amount."
        },
        "currency": {
          "type": "string",
          "title": "The expense's currency"
        },
        "exchangeRate": {
          "type": "string",
          "description": "The expense's exchange rate.\n\nConsider using double or float if this represents a number"
        },
        "company": {
          "type": "string",
          "description": "The company the expense belongs to."
        },
        "memo": {
          "type": "string",
          "description": "The expense's private note."
        },
        "lines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ExpenseLine"
          },
          "description": "The ExpenseLine object is used to represent an expense's line items."
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "These are IDs"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "accountingPeriod": {
          "type": "string",
          "description": "The accounting period that the Expense was generated in."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string"
        }
      },
      "description": "The Expense object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. \nEach Expense object is dedicated to a grouping of expenses, with each expense recorded in the lines object.\n\nThe Expense object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases \nby the amount sign of the records. Expense objects with a negative amount are purchases and Expense objects \nwith a positive amount are refunds to those purchases."
    },
    "ExpenseLine": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "netAmount": {
          "type": "number",
          "format": "double",
          "description": "The line's net amount."
        },
        "trackingCategory": {
          "type": "string",
          "title": "This seems to be an ID"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "These are IDs"
        },
        "company": {
          "type": "string",
          "description": "The company the line belongs to."
        },
        "item": {
          "type": "string",
          "description": "The line's item.\n\nThis seems to be an ID"
        },
        "account": {
          "type": "string",
          "description": "The expense's payment account."
        },
        "contact": {
          "type": "string",
          "description": "The expense's contact.\n\nOptional based on provided JSON"
        },
        "description": {
          "type": "string",
          "description": "The description of the item that was purchased by the company."
        },
        "exchangeRate": {
          "type": "string",
          "description": "The expense line item's exchange rate.\n\nConsider using double or float if this represents a number"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "currency": {
          "type": "string",
          "title": "The expense line item's currency"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The ExpenseLine object is used to represent an expense's line items."
    },
    "FlsaStatus": {
      "type": "string",
      "enum": [
        "FLSA_STATUS_UNSPECIFIED",
        "FLSA_STATUS_EXEMPT",
        "FLSA_STATUS_NON_EXEMPT",
        "FLSA_STATUS_SALARIED_NON_EXEMPT",
        "FLSA_STATUS_OWNER"
      ],
      "default": "FLSA_STATUS_UNSPECIFIED",
      "description": "The position's FLSA status. Possible values include: EXEMPT, SALARIED_NONEXEMPT, \nNONEXEMPT, OWNER. In cases where there is no clear mapping, \nthe original value passed through will be returned."
    },
    "Gender": {
      "type": "string",
      "enum": [
        "GENDER_UNSPECIFIED",
        "GENDER_MALE",
        "GENDER_FEMALE",
        "GENDER_NON_BINARY",
        "GENDER_OTHER",
        "GENDER_PREFER_NOT_TO_DISCLOSE"
      ],
      "default": "GENDER_UNSPECIFIED",
      "description": "The employee's gender. Possible values include: MALE, FEMALE, NON-BINARY, OTHER,\nPREFER_NOT_TO_DISCLOSE. In cases where there is no clear mapping, \nthe original value passed through will be returned."
    },
    "GetLinkTokenRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uint64",
          "description": "The user id\nValidations:\n- user_id must be greater than 0\nThis unique identifier typically represents the ID for your end user in your product's database.\nThis value must be distinct from other Linked Accounts' unique identifiers."
        },
        "organizationName": {
          "type": "string",
          "description": "Your end user's organization."
        },
        "email": {
          "type": "string",
          "description": "Your end user's email address. This is purely for\nidentification purposes - setting this value will not cause any emails to be sent."
        }
      },
      "description": "Defines a message named GetLinkTokenRequest.",
      "required": [
        "userId",
        "organizationName",
        "email"
      ]
    },
    "GetLinkTokenResponse": {
      "type": "object",
      "properties": {
        "linkToken": {
          "type": "string",
          "description": "A string field named \"link_token\" with field number 1.",
          "title": "the link token"
        },
        "integrationName": {
          "type": "string",
          "description": "A string field named \"integration_name\" with field number 2.",
          "title": "the integration name"
        },
        "magicLinkUrl": {
          "type": "string",
          "description": "A string field named \"magic_link_url\" with field number 3.",
          "title": "the magic link URL"
        },
        "endUserOriginId": {
          "type": "string",
          "description": "A string field named \"end_user_origin_id\" with field number 4.",
          "title": "the end user origin id"
        },
        "organizationName": {
          "type": "string",
          "description": "A string field named \"organization_name\" with field number 5.",
          "title": "the organization name"
        }
      },
      "description": "Defines a message named GetLinkTokenResponse."
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "title": "the pay group's name"
        },
        "type": {
          "$ref": "#/definitions/PayGroupType",
          "title": "the pay group's type"
        },
        "parentGroupMergeAccountId": {
          "type": "string",
          "title": "the parent pay group merge record id"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on merge"
        }
      },
      "description": "The Group object is used to represent any subset of employees, such as PayGroup or Team. Employees can be in multiple Groups."
    },
    "HealthCheckResponse": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "title": "whether the service is healthy"
        }
      },
      "description": "Defines a message named HealthCheckResponse."
    },
    "HrisIntegrationMergeLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "integration": {
          "type": "string"
        },
        "integrationSlug": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "endUserOriginId": {
          "type": "string"
        },
        "endUserOrganizationName": {
          "type": "string"
        },
        "endUserEmailAddress": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "webhookListenerUrl": {
          "type": "string"
        },
        "isDuplicate": {
          "type": "boolean"
        },
        "token": {
          "$ref": "#/definitions/MergeLinkedAccountToken"
        },
        "integrationName": {
          "type": "string"
        },
        "integrationImage": {
          "type": "string"
        },
        "integrationSquareImage": {
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/HrisLinkedAccount",
          "description": "When you request a link token to initiate a Merge Link session, Merge determines whether to create a new linked account or modify\nan existing linked account based on a combination of the end_user_origin_id and the category. If you want to support multiple\nconnections, you simply need to provide a different end_user_origin_id for each company.\n\nThis approach enables you to link multiple instances of the same integration (like QuickBooks) for the same end user.\nIt also has the added security benefit of not exposing any internal end_user_origin_ids."
        },
        "mergeLinkedAccountId": {
          "type": "string"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HrisLinkedAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "profile": {
          "$ref": "#/definitions/CompanyProfile",
          "title": "the company profile of interest"
        },
        "benefitPlans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmployerBenefits"
          },
          "title": "the set of benefit plans offered by the company"
        },
        "employees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Employee"
          },
          "title": "the set of employees employed by the employer"
        },
        "payrollRuns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EmployerPayrollRun"
          },
          "title": "the set of payroll runs by the employer"
        }
      }
    },
    "IncomeStatement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The income statement's name."
        },
        "currency": {
          "type": "string",
          "description": "The income statement's currency."
        },
        "company": {
          "type": "string",
          "description": "The company the income statement belongs to."
        },
        "startPeriod": {
          "type": "string",
          "format": "date-time",
          "description": "The income statement's start period."
        },
        "endPeriod": {
          "type": "string",
          "format": "date-time",
          "description": "The income statement's end period."
        },
        "income": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "title": "income"
        },
        "costOfSales": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "title": "cost of sales"
        },
        "grossProfit": {
          "type": "number",
          "format": "double",
          "description": "The revenue minus the cost of sale."
        },
        "operatingExpenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          },
          "title": "operating expenses"
        },
        "netOperatingIncome": {
          "type": "number",
          "format": "double",
          "description": "The revenue minus the operating expenses."
        },
        "nonOperatingExpenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportItem"
          }
        },
        "netIncome": {
          "type": "number",
          "format": "double",
          "description": "The gross profit minus the total expenses."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The IncomeStatement object is used to represent a company’s income, the cost of sales, operating expenses, \nand other non-operating expenses. The object also includes other important values like gross profit, \ngross operating profit, and net income. This represents a period of time (month, quarter, or year)."
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "type": {
          "type": "string",
          "description": "Whether the invoice is an accounts receivable or accounts payable\n If type is accounts_payable, the invoice is a bill. If type is\n accounts_receivable, it is an invoice. Possible values include: ACCOUNTS_RECEIVABLE, ACCOUNTS_PAYABLE."
        },
        "contact": {
          "type": "string",
          "description": "The invoice's contact."
        },
        "number": {
          "type": "string",
          "description": "The invoice's number."
        },
        "issueDate": {
          "type": "string",
          "format": "date-time",
          "description": "The invoice's issue date."
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "description": "The invoice's due date."
        },
        "paidOnDate": {
          "type": "string",
          "format": "date-time",
          "description": "The invoice's paid date."
        },
        "memo": {
          "type": "string",
          "description": "The invoice's private note."
        },
        "company": {
          "type": "string",
          "description": "The company the invoice belongs to."
        },
        "currency": {
          "type": "string",
          "title": "The invoice's currency"
        },
        "exchangeRate": {
          "type": "string",
          "description": "The invoice's exchange rate."
        },
        "totalDiscount": {
          "type": "number",
          "format": "float",
          "description": "The total discounts applied to the total cost."
        },
        "subTotal": {
          "type": "number",
          "format": "float",
          "description": "The total amount being paid before taxes."
        },
        "status": {
          "type": "string"
        },
        "totalTaxAmount": {
          "type": "number",
          "format": "float",
          "description": "The total amount being paid in taxes."
        },
        "totalAmount": {
          "type": "number",
          "format": "float",
          "description": "The invoice's total amount."
        },
        "balance": {
          "type": "number",
          "format": "float",
          "description": "The invoice's remaining balance."
        },
        "remoteUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the third party's invoice entry was updated."
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "payments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of Payment object IDs."
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InvoiceLineItem"
          }
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "accountingPeriod": {
          "type": "string",
          "description": "The accounting period that the Invoice was generated in."
        },
        "purchaseOrders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the account id as stored in merge"
        }
      },
      "description": "The Invoice object represents an itemized record of goods and/or services sold to a customer."
    },
    "InvoiceLineItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "description": {
          "type": "string",
          "description": "The line item's description."
        },
        "unitPrice": {
          "type": "number",
          "format": "float",
          "description": "The line item's unit price."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The line item's quantity."
        },
        "totalAmount": {
          "type": "number",
          "format": "float",
          "description": "The line item's total amount."
        },
        "currency": {
          "type": "string",
          "title": "The line item's currency"
        },
        "exchangeRate": {
          "type": "string",
          "description": "The line item's exchange rate."
        },
        "item": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "trackingCategory": {
          "type": "string"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "company": {
          "type": "string",
          "description": "The company the line item belongs to."
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the id of the record as stored in merge"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp",
          "title": "This is the datetime that this object was last updated by Merge"
        }
      },
      "description": "The Invoice object represents an itemized record of goods and/or services sold to a customer."
    },
    "Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The item's name."
        },
        "status": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number",
          "format": "float",
          "description": "The item's unit price."
        },
        "purchasePrice": {
          "type": "number",
          "format": "float",
          "description": "The price at which the item is purchased from a vendor."
        },
        "purchaseAccount": {
          "type": "string",
          "description": "References the default account used to record a purchase of the item."
        },
        "salesAccount": {
          "type": "string",
          "description": "References the default account used to record a sale."
        },
        "company": {
          "type": "string",
          "description": "The company the item belongs to."
        },
        "remoteUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the third party's item note was updated."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted by third party webhooks."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The Item object refers to the goods involved in a transaction."
    },
    "JournalEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string"
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The journal entry's transaction date."
        },
        "remoteCreatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the third party's journal entry was created."
        },
        "remoteUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "payments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memo": {
          "type": "string",
          "description": "The journal entry's private note."
        },
        "currency": {
          "type": "string"
        },
        "exchangeRate": {
          "type": "string",
          "description": "The journal entry's exchange rate.\n\nAssuming string due to the example provided, but could be float or double."
        },
        "company": {
          "type": "string",
          "description": "The company the journal entry belongs to."
        },
        "lines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JournalLine"
          },
          "description": "The JournalLine object is used to represent a journal entry's line items."
        },
        "journalNumber": {
          "type": "string",
          "description": "Reference number for identifying journal entries."
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "postingStatus": {
          "type": "string"
        },
        "accountingPeriod": {
          "type": "string",
          "description": "The accounting period that the JournalEntry was generated in."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the id of the record as stored in merge"
        },
        "appliedPayments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Payment Applied to Lines common models \nrelated to a given Invoice, Credit Note, or Journal Entry."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "A JournalEntry is a record of a transaction or event that is entered into a company's accounting system.\n\nThe JournalEntry common model contains records that are automatically created as a result of a \ncertain type of transaction, like an Invoice, and records that are manually created against a company’s ledger.\n\nThe lines of a given JournalEntry object should always sum to 0. A positive net_amount means\nthe line represents a debit and a negative net_amount represents a credit."
    },
    "JournalLine": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "account": {
          "type": "string"
        },
        "netAmount": {
          "type": "number",
          "format": "float",
          "description": "The value of the line item including taxes and other fees.\n\nMight want to use double or a more precise type"
        },
        "trackingCategory": {
          "type": "string"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact": {
          "type": "string"
        },
        "company": {
          "type": "string",
          "description": "The company the journal entry belongs to."
        },
        "description": {
          "type": "string",
          "description": "The line's description."
        },
        "exchangeRate": {
          "type": "string",
          "description": "The journal line item's exchange rate.\n\nAssuming string due to the example provided, but could be float or double."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The JournalLine object is used to represent a journal entry's line items."
    },
    "LinkedAccountingAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AccountingAttachment"
          },
          "title": "Represent a company's attachments. a business can have many attachments"
        },
        "companyInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CompanyInfo"
          },
          "description": "The CompanyInfo object is used to represent a company's information."
        },
        "purchaseOrders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PurchaseOrder"
          },
          "title": "a business can have many purchase orders"
        },
        "balanceSheets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BalanceSheet"
          },
          "title": "The BalanceSheet object shows a company’s assets, liabilities, and equity. Assets should be equal to liability and equity combined. This shows the company’s financial health at a specific point in time.\na business can have many balance sheets"
        },
        "cashFlowStatements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CashFlowStatements"
          },
          "title": "The CashFlowStatement object shows operating activities, investing activities, and financing activities over a period of time (month, quarter, or year).\na company can have many cash flow statements"
        },
        "incomeStatements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/IncomeStatement"
          },
          "title": "a business can have many income statements"
        },
        "chartOfAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BusinessChartOfAccounts"
          },
          "description": "The Account object is what companies use to track transactions. They can be both bank accounts or a general ledger account (also called a chart of accounts)."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Item"
          },
          "title": "a business can have many items"
        },
        "taxRates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TaxRate"
          },
          "title": "a business can have many tax rates"
        },
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Contacts"
          },
          "description": "The Contact object refers to either a supplier or a customer."
        },
        "invoices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Invoice"
          },
          "title": "a business can have many invoices"
        },
        "payments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Payment"
          },
          "title": "a business can have many payments"
        },
        "expenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Expense"
          },
          "title": "a business can have many expenses"
        },
        "journalEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JournalEntry"
          },
          "title": "a business can have many journal entries"
        },
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BusinessTransaction"
          },
          "title": "a business can have many transactions"
        },
        "vendorCredits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VendorCredit"
          },
          "title": "a business can have many vendor credits"
        },
        "creditNotes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CreditNote"
          },
          "title": "a business can have many credit notes"
        }
      }
    },
    "LocationAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the record"
        },
        "remoteId": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The location's name."
        },
        "phoneNumber": {
          "type": "string",
          "description": "The location's phone number."
        },
        "street1": {
          "type": "string",
          "description": "Line 1 of the location's street address."
        },
        "street2": {
          "type": "string",
          "description": "Line 2 of the location's street address."
        },
        "city": {
          "type": "string",
          "description": "The location's city."
        },
        "state": {
          "type": "string",
          "description": "The location's state. Represents a region if outside of the US."
        },
        "zipCode": {
          "type": "string",
          "description": "The location's zip code or postal code."
        },
        "country": {
          "type": "string",
          "description": "The location's country."
        },
        "locationType": {
          "$ref": "#/definitions/LocationType",
          "description": "The location's type. Can be either WORK or HOME Possible values include: HOME, WORK. \nIn cases where there is no clear mapping, the original value passed through will be returned."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on merge"
        }
      },
      "description": "The Location object is used to represent an address that can be associated with an employee."
    },
    "LocationType": {
      "type": "string",
      "enum": [
        "LOCATION_TYPE_UNSPECIFIED",
        "LOCATION_TYPE_HOME",
        "LOCATION_TYPE_WORK"
      ],
      "default": "LOCATION_TYPE_UNSPECIFIED",
      "description": "The location's type. Can be either WORK or HOME Possible values include: HOME, WORK.\nIn cases where there is no clear mapping, the original value passed through will be returned."
    },
    "MaritalStatus": {
      "type": "string",
      "enum": [
        "MARITAL_STATUS_UNSPECIFIED",
        "MARITAL_STATUS_SINGLE",
        "MARITAL_STATUS_MARRIED_FILING_JOINTLY",
        "MARITAL_STATUS_MARRIED_FILING_SEPARATELY",
        "MARITAL_STATUS_HEAD_OF_HOUSEHOLD",
        "MARITAL_STATUS_QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD"
      ],
      "default": "MARITAL_STATUS_UNSPECIFIED",
      "description": "The employee's filing status as related to marital status. Possible values include: SINGLE, \nMARRIED_FILING_JOINTLY, MARRIED_FILING_SEPARATELY, HEAD_OF_HOUSEHOLD, QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD.\nIn cases where there is no clear mapping, the original value passed through will be returned."
    },
    "MergeBusinessProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "userId": {
          "type": "string",
          "format": "uint64",
          "title": "the user id tied to the profile"
        },
        "companyName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "title": "a user profile can have many links (connected institutions) of which finanical accounts are tied to (checking, savings, etc)"
        },
        "accountingIntegrationMergeLink": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AccountingIntegrationMergeLink"
          },
          "title": "this is the accounting integration the business has decided to authorize"
        },
        "payrollIntegrationMergeLink": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HrisIntegrationMergeLink"
          },
          "title": "this is the payroll integration the business has decided to authorize"
        },
        "actionablePersonalInsights": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BusinessActionableInsight"
          },
          "title": "ths is the actionable inisghts the business has be provided with"
        }
      },
      "title": "MergeBusinessProfile stores high level user profile details\nsuch as the id, user_id tied to the profile, and many more"
    },
    "MergeLinkedAccountToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "itemId": {
          "type": "string",
          "title": "the id of the item the token is tied to"
        },
        "keyId": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "mergeEndUserOriginId": {
          "type": "string",
          "description": "This is what you'll pass to Merge as the end_user_origin_id."
        },
        "mergeIntegrationSlug": {
          "type": "string",
          "description": "The integration slug/identifier. This is returned at the end of the linking flow."
        }
      }
    },
    "PayFrequency": {
      "type": "string",
      "enum": [
        "PAY_FREQUENCY_UNSPECIFIED",
        "PAY_FREQUENCY_WEEKLY",
        "PAY_FREQUENCY_BIWEEKLY",
        "PAY_FREQUENCY_MONTHLY",
        "PAY_FREQUENCY_QUARTERLY",
        "PAY_FREQUENCY_SEMIANNUALLY",
        "PAY_FREQUENCY_ANNUALLY",
        "PAY_FREQUENCY_THIRTEEN_MONTHLY",
        "PAY_FREQUENCY_PRO_RATA",
        "PAY_FREQUENCY_SEMIMONTHLY"
      ],
      "default": "PAY_FREQUENCY_UNSPECIFIED",
      "description": "The position's pay frequency. Possible values include: WEEKLY, BIWEEKLY, MONTHLY, \nQUARTERLY, SEMIANNUALLY, ANNUALLY, THIRTEEN-MONTHLY, PRO_RATA, SEMIMONTHLY. \nIn cases where there is no clear mapping, the original value passed through will be returned."
    },
    "PayGroupType": {
      "type": "string",
      "enum": [
        "PAY_GROUP_TYPE_UNSPECIFIED",
        "PAY_GROUP_TYPE_TEAM",
        "PAY_GROUP_TYPE_DEPARTMENT",
        "PAY_GROUP_TYPE_COST_CENTER",
        "PAY_GROUP_TYPE_BUSINESS_UNIT",
        "PAY_GROUP_TYPE_GROUP"
      ],
      "default": "PAY_GROUP_TYPE_UNSPECIFIED",
      "description": "The group type Possible values include: TEAM, DEPARTMENT, COST_CENTER, BUSINESS_UNIT, GROUP. \nIn cases where there is no clear mapping, the original value passed through will be returned."
    },
    "PayPeriod": {
      "type": "string",
      "enum": [
        "PAY_PERIOD_UNSPECIFIED",
        "PAY_PERIOD_HOUR",
        "PAY_PERIOD_DAY",
        "PAY_PERIOD_WEEK",
        "PAY_PERIOD_EVERY_TWO_WEEKS",
        "PAY_PERIOD_SEMIMONTHLY",
        "PAY_PERIOD_MONTH",
        "PAY_PERIOD_QUARTER",
        "PAY_PERIOD_EVERY_SIX_MONTHS",
        "PAY_PERIOD_YEAR"
      ],
      "default": "PAY_PERIOD_UNSPECIFIED",
      "description": "The time period this pay rate encompasses. Possible values include: \nHOUR, DAY, WEEK, EVERY_TWO_WEEKS, SEMIMONTHLY, MONTH, QUARTER, \nEVERY_SIX_MONTHS, YEAR. In cases where there is no clear mapping, \nthe original value passed through will be returned."
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string"
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The payment's transaction date."
        },
        "contact": {
          "type": "string",
          "description": "The supplier, or customer involved in the payment."
        },
        "account": {
          "type": "string",
          "description": "The supplier’s or customer’s account in which the payment is made."
        },
        "currency": {
          "type": "string"
        },
        "exchangeRate": {
          "type": "string",
          "description": "The payment's exchange rate.\n\nAssuming string due to the example provided, but could be float or double."
        },
        "company": {
          "type": "string",
          "description": "The company the payment belongs to."
        },
        "totalAmount": {
          "type": "number",
          "format": "float",
          "description": "The total amount of money being paid to the supplier, or customer, after taxes.\n\nMight want to use double or a more precise type"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remoteUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "accountingPeriod": {
          "type": "string",
          "description": "The accounting period that the Payment was generated in."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string",
          "title": "the id as stored in merge"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The Payment object represents general payments made towards a specific transaction."
    },
    "PayrollRunState": {
      "type": "string",
      "enum": [
        "PAYROLL_RUN_STATE_UNSPECIFIED",
        "PAYROLL_RUN_STATE_PAID",
        "PAYROLL_RUN_STATE_DRAFT",
        "PAYROLL_RUN_STATE_APPROVED",
        "PAYROLL_RUN_STATE_FAILED",
        "PAYROLL_RUN_STATE_CLOSED"
      ],
      "default": "PAYROLL_RUN_STATE_UNSPECIFIED",
      "description": "The state of the payroll run Possible values include: PAID, DRAFT, APPROVED, FAILED, CLOSED. \nIn cases where there is no clear mapping, the original value passed through will be returned."
    },
    "PayrollRunType": {
      "type": "string",
      "enum": [
        "PAYROLL_RUN_TYPE_UNSPECIFIED",
        "PAYROLL_RUN_TYPE_REGULAR",
        "PAYROLL_RUN_TYPE_OFF_CYCLE",
        "PAYROLL_RUN_TYPE_CORRECTION",
        "PAYROLL_RUN_TYPE_TERMINATION",
        "PAYROLL_RUN_TYPE_SIGN_ON_BONUS"
      ],
      "default": "PAYROLL_RUN_TYPE_UNSPECIFIED",
      "description": "The type of the payroll run Possible values include: REGULAR, OFF_CYCLE, CORRECTION, TERMINATION, SIGN_ON_BONUS. \nIn cases where there is no clear mapping, the original value passed through will be returned."
    },
    "PolicyType": {
      "type": "string",
      "enum": [
        "POLICY_TYPE_UNSPECIFIED",
        "POLICY_TYPE_VACATION",
        "POLICY_TYPE_SICK",
        "POLICY_TYPE_PERSONAL",
        "POLICY_TYPE_JURY_DUTY",
        "POLICY_TYPE_VOLUNTEER",
        "POLICY_TYPE_BEREAVEMENT"
      ],
      "default": "POLICY_TYPE_UNSPECIFIED",
      "title": "The policy type of this time off balance. Possible values include: VACATION, SICK, PERSONAL,\nJURY_DUTY, VOLUNTEER, BEREAVEMENT. In cases where there is no clear mapping, the original\nvalue passed through will be returned"
    },
    "PurchaseOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "mergeRecordId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "issueDate": {
          "type": "string",
          "format": "date-time",
          "description": "The purchase order's issue date."
        },
        "purchaseOrderNumber": {
          "type": "string",
          "description": "The human-readable number of the purchase order."
        },
        "deliveryDate": {
          "type": "string",
          "format": "date-time",
          "description": "The purchase order's delivery date."
        },
        "deliveryAddress": {
          "$ref": "#/definitions/CompanyAddress",
          "description": "The purchase order's delivery address."
        },
        "customer": {
          "type": "string",
          "description": "The contact making the purchase order."
        },
        "vendor": {
          "type": "string",
          "description": "The party fulfilling the purchase order."
        },
        "memo": {
          "type": "string",
          "description": "A memo attached to the purchase order."
        },
        "company": {
          "type": "string",
          "description": "The company the purchase order belongs to."
        },
        "totalAmount": {
          "type": "number",
          "format": "float",
          "description": "The purchase order's total amount.\n\nMight be better as double."
        },
        "currency": {
          "type": "string",
          "description": "The purchase order's currency."
        },
        "exchangeRate": {
          "type": "string",
          "description": "Assuming string, but might be better as float or double."
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PurchaseOrderLineItem"
          }
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remoteCreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "remoteUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "accountingPeriod": {
          "type": "string",
          "description": "The accounting period that the PurchaseOrder was generated in."
        },
        "remoteId": {
          "type": "string"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The PurchaseOrder object is a record of request for a product or service between a buyer and seller."
    },
    "PurchaseOrderLineItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "unitPrice": {
          "type": "string",
          "description": "Assuming string, but might be better as float or double."
        },
        "item": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "trackingCategory": {
          "type": "string"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taxAmount": {
          "type": "string"
        },
        "totalLineAmount": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "exchangeRate": {
          "type": "string",
          "description": "Assuming string, but might be better as float or double."
        },
        "company": {
          "type": "string"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "remoteWasDeleted": {
          "type": "boolean"
        }
      },
      "description": "The PurchaseOrderLineItem object is used to represent a purchase order's line item."
    },
    "ReadProfileResponse": {
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/MergeBusinessProfile",
          "description": "A field named \"profile\" of type BusinessPayrollProfile with field number 1.",
          "title": "the profile of interest"
        }
      },
      "description": "Defines a message named ReadProfileRequest."
    },
    "ReadynessCheckResponse": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "title": "whether the service is ready to receive traffic"
        }
      },
      "description": "Defines a message named ReadynessCheckResponse."
    },
    "ReportItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "title": "the id as stored in the third-party system"
        },
        "name": {
          "type": "string",
          "description": "The report item's name."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "description": "The report item's value."
        },
        "company": {
          "type": "string",
          "title": "The company the report item belongs to. may not necessarily be the company name but a reference instead"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Consider using google.protobuf.Timestamp",
          "title": "This is the datetime that this object was last updated by Merge"
        }
      },
      "description": "The ReportItem object is used to represent a report item for a Balance Sheet, \nCash Flow Statement or Profit and Loss Report."
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "Tax": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "name": {
          "type": "string",
          "description": "The tax's name."
        },
        "amount": {
          "type": "number",
          "format": "double",
          "description": "The tax amount."
        },
        "employerTax": {
          "type": "boolean",
          "description": "Whether or not the employer is responsible for paying the tax."
        },
        "remoteWasDeleted": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "payrollRunMergeAccountId": {
          "type": "string",
          "description": "The payroll being run."
        },
        "mergeAccountId": {
          "type": "string",
          "title": "This is the record id as seen on the merge platform"
        }
      },
      "description": "The Tax object is used to represent an array of the tax deductions for a given employee's payroll run."
    },
    "TaxRate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string",
          "description": "The third-party API ID of the matching object."
        },
        "description": {
          "type": "string",
          "description": "The tax rate's description."
        },
        "totalTaxRate": {
          "type": "number",
          "format": "double",
          "description": "The tax rate's total tax rate."
        },
        "effectiveTaxRate": {
          "type": "number",
          "format": "double",
          "description": "The tax rate's effective tax rate."
        },
        "company": {
          "type": "string",
          "description": "The company the tax rate belongs to."
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "This is the datetime that this object was last updated by Merge"
        },
        "mergeRecordId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The TaxRate object is used to represent a tax rate."
    },
    "TransactionLineItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "remoteId": {
          "type": "string"
        },
        "memo": {
          "type": "string",
          "description": "An internal note used by the business to clarify purpose of the transaction."
        },
        "unitPrice": {
          "type": "string",
          "description": "The line item's unit price."
        },
        "quantity": {
          "type": "string",
          "description": "The line item's quantity."
        },
        "item": {
          "type": "string"
        },
        "account": {
          "type": "string",
          "description": "The line item's account."
        },
        "trackingCategory": {
          "type": "string",
          "description": "The line's associated tracking category."
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalLineAmount": {
          "type": "string",
          "description": "The line item's total."
        },
        "taxRate": {
          "type": "string",
          "description": "The line item's tax rate."
        },
        "currency": {
          "type": "string",
          "title": "The line item's currency"
        },
        "exchangeRate": {
          "type": "string",
          "description": "The line item's exchange rate.\n\nAssuming string, but might be better as float or double."
        },
        "company": {
          "type": "string",
          "description": "The company the line belongs to."
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "description": "Indicates whether or not this object has been deleted in the third party platform."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "The TransactionLineItem object is used to represent a transaction's line items."
    },
    "UpdateProfileRequest": {
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/MergeBusinessProfile",
          "description": "A field named \"profile\" of type BusinessPayrollProfile.",
          "title": "business accounting profile to update"
        }
      },
      "description": "Defines a message named UpdateProfileRequest."
    },
    "UpdateProfileResponse": {
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/MergeBusinessProfile",
          "description": "A field named \"profile\" of type BusinessPayrollProfile with field number 1."
        }
      },
      "description": "Defines a message named UpdateProfileResponse."
    },
    "VendorCredit": {
      "type": "object",
      "properties": {
        "mergeRecordId": {
          "type": "string",
          "title": "Unique identifier for the Merge account"
        },
        "remoteId": {
          "type": "string",
          "title": "Identifier for the VendorCredit in the remote system"
        },
        "number": {
          "type": "string",
          "title": "Transaction number or reference identifier"
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date of the transaction"
        },
        "vendor": {
          "type": "string",
          "title": "Name or identifier of the vendor"
        },
        "totalAmount": {
          "type": "number",
          "format": "double",
          "title": "Total amount of credit owed"
        },
        "currency": {
          "type": "string",
          "title": "Currency code for the transaction (e.g., USD, EUR)"
        },
        "exchangeRate": {
          "type": "string",
          "title": "Exchange rate used for currency conversion, represented as a string for precision"
        },
        "company": {
          "type": "string",
          "title": "Identifier or name of the associated company"
        },
        "lines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VendorCreditLine"
          },
          "title": "Line items associated with the vendor credit"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tracking categories for accounting purposes"
        },
        "remoteWasDeleted": {
          "type": "boolean",
          "title": "Flag indicating if the VendorCredit was deleted in the remote system"
        },
        "accountingPeriod": {
          "type": "string",
          "title": "Accounting period for the transaction"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of the last modification"
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "Unique identifier for the VendorCredit"
        }
      },
      "description": "The VendorCredit object represents an accounts receivable transaction indicating that a customer is owed a gift or refund. \nIt includes details such as the amount of credit, the vendor responsible, \nthe associated account, and other relevant information."
    },
    "VendorCreditLine": {
      "type": "object",
      "properties": {
        "remoteId": {
          "type": "string",
          "title": "Identifier for the VendorCreditLine in the remote system"
        },
        "netAmount": {
          "type": "number",
          "format": "double",
          "title": "Net amount for the line item"
        },
        "trackingCategory": {
          "type": "string",
          "title": "Single tracking category for this line item"
        },
        "trackingCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Multiple tracking categories for detailed accounting"
        },
        "description": {
          "type": "string",
          "title": "Description of the line item"
        },
        "account": {
          "type": "string",
          "title": "Account associated with the line item"
        },
        "company": {
          "type": "string",
          "title": "Identifier or name of the associated company"
        },
        "exchangeRate": {
          "type": "string",
          "title": "Exchange rate used for currency conversion, potentially as a float or double for precision"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of the last modification to the line item"
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "Unique identifier for the VendorCreditLine"
        }
      },
      "description": "The VendorCreditLine object represents individual line items in a VendorCredit transaction, detailing specific elements of the credit."
    }
  }
}
