// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: user_service/v1/roles.proto

package user_servicev1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RoleType defines the different types of roles.
type RoleType int32

const (
	RoleType_ROLE_TYPE_UNSPECIFIED RoleType = 0
	RoleType_ROLE_TYPE_SUPER_ADMIN RoleType = 1
	RoleType_ROLE_TYPE_TEAM_ADMIN  RoleType = 2
	RoleType_ROLE_TYPE_REGULAR     RoleType = 3
)

// Enum value maps for RoleType.
var (
	RoleType_name = map[int32]string{
		0: "ROLE_TYPE_UNSPECIFIED",
		1: "ROLE_TYPE_SUPER_ADMIN",
		2: "ROLE_TYPE_TEAM_ADMIN",
		3: "ROLE_TYPE_REGULAR",
	}
	RoleType_value = map[string]int32{
		"ROLE_TYPE_UNSPECIFIED": 0,
		"ROLE_TYPE_SUPER_ADMIN": 1,
		"ROLE_TYPE_TEAM_ADMIN":  2,
		"ROLE_TYPE_REGULAR":     3,
	}
)

func (x RoleType) Enum() *RoleType {
	p := new(RoleType)
	*p = x
	return p
}

func (x RoleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_service_v1_roles_proto_enumTypes[0].Descriptor()
}

func (RoleType) Type() protoreflect.EnumType {
	return &file_user_service_v1_roles_proto_enumTypes[0]
}

func (x RoleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleType.Descriptor instead.
func (RoleType) EnumDescriptor() ([]byte, []int) {
	return file_user_service_v1_roles_proto_rawDescGZIP(), []int{0}
}

// AuditAction defines the types of actions that can be audited.
type AuditAction int32

const (
	AuditAction_AUDIT_ACTION_UNSPECIFIED AuditAction = 0
	AuditAction_AUDIT_ACTION_CREATED     AuditAction = 1
	AuditAction_AUDIT_ACTION_UPDATED     AuditAction = 2
	AuditAction_AUDIT_ACTION_DELETED     AuditAction = 3
)

// Enum value maps for AuditAction.
var (
	AuditAction_name = map[int32]string{
		0: "AUDIT_ACTION_UNSPECIFIED",
		1: "AUDIT_ACTION_CREATED",
		2: "AUDIT_ACTION_UPDATED",
		3: "AUDIT_ACTION_DELETED",
	}
	AuditAction_value = map[string]int32{
		"AUDIT_ACTION_UNSPECIFIED": 0,
		"AUDIT_ACTION_CREATED":     1,
		"AUDIT_ACTION_UPDATED":     2,
		"AUDIT_ACTION_DELETED":     3,
	}
)

func (x AuditAction) Enum() *AuditAction {
	p := new(AuditAction)
	*p = x
	return p
}

func (x AuditAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditAction) Descriptor() protoreflect.EnumDescriptor {
	return file_user_service_v1_roles_proto_enumTypes[1].Descriptor()
}

func (AuditAction) Type() protoreflect.EnumType {
	return &file_user_service_v1_roles_proto_enumTypes[1]
}

func (x AuditAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditAction.Descriptor instead.
func (AuditAction) EnumDescriptor() ([]byte, []int) {
	return file_user_service_v1_roles_proto_rawDescGZIP(), []int{1}
}

// Role defines the role of a user in the system with specific permissions.
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the role.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the role.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type of the role.
	Type RoleType `protobuf:"varint,3,opt,name=type,proto3,enum=user_service.v1.RoleType" json:"type,omitempty"`
	// Permissions related to user management.
	CanCreateUsers bool `protobuf:"varint,4,opt,name=can_create_users,json=canCreateUsers,proto3" json:"can_create_users,omitempty"`
	CanReadUsers   bool `protobuf:"varint,5,opt,name=can_read_users,json=canReadUsers,proto3" json:"can_read_users,omitempty"`
	CanUpdateUsers bool `protobuf:"varint,6,opt,name=can_update_users,json=canUpdateUsers,proto3" json:"can_update_users,omitempty"`
	CanDeleteUsers bool `protobuf:"varint,7,opt,name=can_delete_users,json=canDeleteUsers,proto3" json:"can_delete_users,omitempty"`
	// Permissions related to project management.
	CanCreateProjects bool `protobuf:"varint,8,opt,name=can_create_projects,json=canCreateProjects,proto3" json:"can_create_projects,omitempty"`
	CanReadProjects   bool `protobuf:"varint,9,opt,name=can_read_projects,json=canReadProjects,proto3" json:"can_read_projects,omitempty"`
	CanUpdateProjects bool `protobuf:"varint,10,opt,name=can_update_projects,json=canUpdateProjects,proto3" json:"can_update_projects,omitempty"`
	CanDeleteProjects bool `protobuf:"varint,11,opt,name=can_delete_projects,json=canDeleteProjects,proto3" json:"can_delete_projects,omitempty"`
	// Permissions related to report management.
	CanCreateReports bool `protobuf:"varint,12,opt,name=can_create_reports,json=canCreateReports,proto3" json:"can_create_reports,omitempty"`
	CanReadReports   bool `protobuf:"varint,13,opt,name=can_read_reports,json=canReadReports,proto3" json:"can_read_reports,omitempty"`
	CanUpdateReports bool `protobuf:"varint,14,opt,name=can_update_reports,json=canUpdateReports,proto3" json:"can_update_reports,omitempty"`
	CanDeleteReports bool `protobuf:"varint,15,opt,name=can_delete_reports,json=canDeleteReports,proto3" json:"can_delete_reports,omitempty"`
	// Add more permissions as necessary for other modules or features.
	// Timestamps for tracking creation and modification times.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Audit log for this role.
	AuditLog []*RoleAuditEvents `protobuf:"bytes,18,rep,name=audit_log,json=auditLog,proto3" json:"audit_log,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_roles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_roles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_user_service_v1_roles_proto_rawDescGZIP(), []int{0}
}

func (x *Role) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetType() RoleType {
	if x != nil {
		return x.Type
	}
	return RoleType_ROLE_TYPE_UNSPECIFIED
}

func (x *Role) GetCanCreateUsers() bool {
	if x != nil {
		return x.CanCreateUsers
	}
	return false
}

func (x *Role) GetCanReadUsers() bool {
	if x != nil {
		return x.CanReadUsers
	}
	return false
}

func (x *Role) GetCanUpdateUsers() bool {
	if x != nil {
		return x.CanUpdateUsers
	}
	return false
}

func (x *Role) GetCanDeleteUsers() bool {
	if x != nil {
		return x.CanDeleteUsers
	}
	return false
}

func (x *Role) GetCanCreateProjects() bool {
	if x != nil {
		return x.CanCreateProjects
	}
	return false
}

func (x *Role) GetCanReadProjects() bool {
	if x != nil {
		return x.CanReadProjects
	}
	return false
}

func (x *Role) GetCanUpdateProjects() bool {
	if x != nil {
		return x.CanUpdateProjects
	}
	return false
}

func (x *Role) GetCanDeleteProjects() bool {
	if x != nil {
		return x.CanDeleteProjects
	}
	return false
}

func (x *Role) GetCanCreateReports() bool {
	if x != nil {
		return x.CanCreateReports
	}
	return false
}

func (x *Role) GetCanReadReports() bool {
	if x != nil {
		return x.CanReadReports
	}
	return false
}

func (x *Role) GetCanUpdateReports() bool {
	if x != nil {
		return x.CanUpdateReports
	}
	return false
}

func (x *Role) GetCanDeleteReports() bool {
	if x != nil {
		return x.CanDeleteReports
	}
	return false
}

func (x *Role) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Role) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Role) GetAuditLog() []*RoleAuditEvents {
	if x != nil {
		return x.AuditLog
	}
	return nil
}

// RoleAuditEvents defines the audit record for any changes made to a role.
type RoleAuditEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Action      AuditAction            `protobuf:"varint,3,opt,name=action,proto3,enum=user_service.v1.AuditAction" json:"action,omitempty"` // The type of action (created, updated, deleted)
	PerformedBy string                 `protobuf:"bytes,4,opt,name=performed_by,json=performedBy,proto3" json:"performed_by,omitempty"`      // Identifier of the user who performed the action
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // Time of the event
	// Additional fields for enhanced auditing:
	AffectedFields []string `protobuf:"bytes,6,rep,name=affected_fields,json=affectedFields,proto3" json:"affected_fields,omitempty"` // Specific fields that were changed (if applicable)
	PreviousValues []string `protobuf:"bytes,7,rep,name=previous_values,json=previousValues,proto3" json:"previous_values,omitempty"` // Values of those fields before the change
	ClientIp       string   `protobuf:"bytes,8,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`                   // IP address of the client that initiated the change
	UserAgent      string   `protobuf:"bytes,9,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`                // User agent string of the client
	Context        string   `protobuf:"bytes,10,opt,name=context,proto3" json:"context,omitempty"`                                    // Additional context about the change (e.g., reason for change)
}

func (x *RoleAuditEvents) Reset() {
	*x = RoleAuditEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_roles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAuditEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAuditEvents) ProtoMessage() {}

func (x *RoleAuditEvents) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_roles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAuditEvents.ProtoReflect.Descriptor instead.
func (*RoleAuditEvents) Descriptor() ([]byte, []int) {
	return file_user_service_v1_roles_proto_rawDescGZIP(), []int{1}
}

func (x *RoleAuditEvents) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleAuditEvents) GetAction() AuditAction {
	if x != nil {
		return x.Action
	}
	return AuditAction_AUDIT_ACTION_UNSPECIFIED
}

func (x *RoleAuditEvents) GetPerformedBy() string {
	if x != nil {
		return x.PerformedBy
	}
	return ""
}

func (x *RoleAuditEvents) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RoleAuditEvents) GetAffectedFields() []string {
	if x != nil {
		return x.AffectedFields
	}
	return nil
}

func (x *RoleAuditEvents) GetPreviousValues() []string {
	if x != nil {
		return x.PreviousValues
	}
	return nil
}

func (x *RoleAuditEvents) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *RoleAuditEvents) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *RoleAuditEvents) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

var File_user_service_v1_roles_proto protoreflect.FileDescriptor

var file_user_service_v1_roles_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x22,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x06, 0x0a,
	0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x5a, 0x0b, 0x69, 0x64, 0x78, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f,
	0x5a, 0x0d, 0x69, 0x64, 0x78, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x63, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x63, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x63, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x61, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61,
	0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4f,
	0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x12, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0xba, 0xb9, 0x19,
	0x04, 0x2a, 0x02, 0x48, 0x01, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x3a,
	0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0x81, 0x04, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x20, 0xba, 0xb9, 0x19, 0x1c, 0x0a, 0x1a, 0x5a,
	0x18, 0x69, 0x64, 0x78, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5a, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x24, 0xba, 0xb9, 0x19,
	0x20, 0x0a, 0x1e, 0x52, 0x1c, 0x69, 0x64, 0x78, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0c, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2a, 0xba, 0xb9, 0x19, 0x26, 0x0a, 0x24, 0x52, 0x22, 0x69, 0x64, 0x78, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x52, 0x0b, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x79, 0x12, 0x61, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x27, 0xba, 0xb9, 0x19, 0x23, 0x0a, 0x21, 0x52,
	0x1f, 0x69, 0x64, 0x78, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x2a, 0x71, 0x0a, 0x08, 0x52,
	0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x55, 0x50, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x03, 0x2a, 0x79,
	0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x18, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41,
	0x55, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0xea, 0x01, 0x0a, 0x13, 0x63, 0x6f,
	0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x6e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x6f, 0x6c, 0x6f,
	0x6d, 0x6f, 0x6e, 0x41, 0x49, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x55, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_service_v1_roles_proto_rawDescOnce sync.Once
	file_user_service_v1_roles_proto_rawDescData = file_user_service_v1_roles_proto_rawDesc
)

func file_user_service_v1_roles_proto_rawDescGZIP() []byte {
	file_user_service_v1_roles_proto_rawDescOnce.Do(func() {
		file_user_service_v1_roles_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_service_v1_roles_proto_rawDescData)
	})
	return file_user_service_v1_roles_proto_rawDescData
}

var file_user_service_v1_roles_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_user_service_v1_roles_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_user_service_v1_roles_proto_goTypes = []interface{}{
	(RoleType)(0),                 // 0: user_service.v1.RoleType
	(AuditAction)(0),              // 1: user_service.v1.AuditAction
	(*Role)(nil),                  // 2: user_service.v1.Role
	(*RoleAuditEvents)(nil),       // 3: user_service.v1.RoleAuditEvents
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_user_service_v1_roles_proto_depIdxs = []int32{
	0, // 0: user_service.v1.Role.type:type_name -> user_service.v1.RoleType
	4, // 1: user_service.v1.Role.created_at:type_name -> google.protobuf.Timestamp
	4, // 2: user_service.v1.Role.updated_at:type_name -> google.protobuf.Timestamp
	3, // 3: user_service.v1.Role.audit_log:type_name -> user_service.v1.RoleAuditEvents
	1, // 4: user_service.v1.RoleAuditEvents.action:type_name -> user_service.v1.AuditAction
	4, // 5: user_service.v1.RoleAuditEvents.timestamp:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_user_service_v1_roles_proto_init() }
func file_user_service_v1_roles_proto_init() {
	if File_user_service_v1_roles_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_service_v1_roles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_roles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAuditEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_service_v1_roles_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_service_v1_roles_proto_goTypes,
		DependencyIndexes: file_user_service_v1_roles_proto_depIdxs,
		EnumInfos:         file_user_service_v1_roles_proto_enumTypes,
		MessageInfos:      file_user_service_v1_roles_proto_msgTypes,
	}.Build()
	File_user_service_v1_roles_proto = out.File
	file_user_service_v1_roles_proto_rawDesc = nil
	file_user_service_v1_roles_proto_goTypes = nil
	file_user_service_v1_roles_proto_depIdxs = nil
}
