var y=Object.defineProperty;var N=(r,t,e)=>t in r?y(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var d=(r,t,e)=>(N(r,typeof t!="symbol"?t+"":t,e),e);import{j as s}from"./jsx-runtime-7ce7b810.js";import{r as h}from"./index-37ba2b57.js";import{e as j,C as o,a as m,b as x,d as p,g as w}from"./card-b76ebb31.js";import{T as B,c as A,a as v,d as b}from"./tabs-1211d8ff.js";import{c as C,N as T}from"./Tracker-dcaacf89.js";const g=C("BarChart",[["line",{x1:"12",x2:"12",y1:"20",y2:"10",key:"1vz5eb"}],["line",{x1:"18",x2:"18",y1:"20",y2:"4",key:"cun8e5"}],["line",{x1:"6",x2:"6",y1:"20",y2:"16",key:"hq0ia6"}]]);class u{static mean(t){return t.reduce((a,n)=>a+n.balance,0)/t.length}static variance(t){const e=this.mean(t);return t.reduce((n,c)=>n+Math.pow(c.balance-e,2),0)/t.length}static standardDeviation(t){return Math.sqrt(this.variance(t))}static kurtosis(t){const e=t.length,a=this.mean(t),n=this.standardDeviation(t),c=t.reduce((l,i)=>l+Math.pow((i.balance-a)/n,4),0);return(e*(e+1)*c-3*(e-1)*(e-1))/((e-1)*(e-2)*(e-3))}static skewness(t){const e=t.length,a=this.mean(t),n=this.standardDeviation(t),c=t.reduce((l,i)=>l+Math.pow(i.balance-a,3),0);return e*c/((e-1)*(e-2)*Math.pow(n,3))}}const k=h.createContext([]);class f extends h.Component{constructor(e){super(e);d(this,"myRef");this.state={counter:0},this.myRef=h.createRef(),this.averageBalance=this.averageBalance.bind(this),this.totalAccumulation=this.totalAccumulation.bind(this),this.maxBalance=this.maxBalance.bind(this),this.minBalance=this.minBalance.bind(this),this.movingAverage=this.movingAverage.bind(this)}componentWillMount(){}componentDidMount(){this.myRef.current&&this.myRef.current.focus()}averageBalance(e){return e.length===0?0:this.totalAccumulation(e)/e.length}totalAccumulation(e){return e.reduce((a,n)=>a+n.balance,0)}maxBalance(e){return Math.max(...e.map(a=>a.balance))}minBalance(e){return Math.min(...e.map(a=>a.balance))}movingAverage(e,a){const n=[];for(let c=0;c<=e.length-a;c++){let l=0;for(let i=0;i<a;i++)l+=e[c+i].balance;n.push(l/a)}return n}render(){const{historicalAccountBalance:e,className:a,disableLabel:n}=this.props;return e===null||e.length===0?null:s.jsx(k.Provider,{value:e,children:s.jsxs(B,{defaultValue:"overview",className:j("w-full",a),children:[s.jsxs(A,{className:"grid w-full grid-cols-2 font-bold",children:[s.jsx(v,{value:"overview",children:"Overview"}),s.jsx(v,{value:"statistics",children:"Trends"})]}),s.jsxs(b,{value:"overview",children:[s.jsx("div",{className:"flex flex-row justify-between gap-2 px-2"}),s.jsx(D,{data:e,title:"Account Balance Through Time",description:"This chart shows the account balance over time.",disableLabels:n})]}),s.jsx(b,{value:"statistics",children:s.jsxs("div",{className:"grid grid-cols-2 justify-between gap-2 px-2",children:[s.jsxs(o,{children:[s.jsxs(m,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[s.jsx(x,{className:"text-sm font-bold",children:"Metrics"}),s.jsx(g,{className:"h-4 w-4 text-muted-foreground"})]}),s.jsxs(p,{children:[s.jsxs("div",{className:"text-2xl font-bold",children:[this.averageBalance(e).toFixed(2),s.jsx("span",{className:"text-xs",children:" average "})]}),s.jsxs("div",{className:"grid grid-cols-2",children:[s.jsx("div",{children:s.jsxs("p",{className:"text-sm text-muted-foreground",children:[this.maxBalance(e).toFixed(0)," ",s.jsx("span",{className:"text-xs",children:" max "})]})}),s.jsx("div",{children:s.jsxs("p",{className:"text-sm text-muted-foreground",children:[this.minBalance(e).toFixed(0)," ",s.jsx("span",{className:"text-xs",children:" min "})]})})]})]})]}),s.jsxs(o,{children:[s.jsxs(m,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[s.jsx(x,{className:"text-sm font-bold",children:"Statistics"}),s.jsx(g,{className:"h-4 w-4 text-muted-foreground"})]}),s.jsxs(p,{children:[s.jsxs("div",{className:"text-2xl font-bold",children:[u.kurtosis(e).toFixed(2),s.jsx("span",{className:"text-xs",children:" kurtosis "})]}),s.jsxs("div",{className:"grid grid-cols-2",children:[s.jsx("div",{children:s.jsxs("p",{className:"text-sm text-muted-foreground",children:[u.standardDeviation(e).toFixed(0)," ",s.jsx("span",{className:"text-xs",children:" std "})]})}),s.jsx("div",{children:s.jsxs("p",{className:"text-sm text-muted-foreground",children:[u.skewness(e).toFixed(0)," ",s.jsx("span",{className:"text-xs",children:" skew "})]})})]})]})]})]})})]})})}}d(f,"defaultProps",{className:"",historicalAccountBalance:[],disableLabel:!1});const D=({data:r,className:t,title:e,description:a})=>{function n(l){return l.map(i=>({date:i.time?i.time.toISOString():"","Account Balance":i.balance}))}const c=n(r);return s.jsxs(o,{className:j("m-2",t),children:[s.jsxs(m,{children:[s.jsx(x,{className:"text-lg font bold",children:e}),s.jsx(w,{children:a})]}),s.jsx(p,{className:"p-3",children:s.jsx(o,{className:"text-black",children:s.jsx(T,{className:"mt-6 w-full h-[400px]",data:c,index:"balance",valueFormatter:l=>`$${Intl.NumberFormat("us").format(l).toString()}`,categories:["Account Balance"],colors:["slate"],showXAxis:!0,showGridLines:!1,startEndOnly:!0,showYAxis:!1,showLegend:!0})})})]})};try{f.displayName="HistoricalAccountBalanceChart",f.__docgenInfo={description:"The `HistoricalAccountBalanceChart` class component visualizes the history of account balances over time.\nIt leverages the `recharts` library to plot the balances and is built with extensibility in mind, using\ngenerics for its props to allow potential custom extensions of the `AccountBalanceHistory` type.\n\nFeatures:\n- Visualizes the account balance history using a line chart.\n- Allows for potential customization of data types via TypeScript generics.\n- Provides a context for potential child components to access the account balance history.\n- Can be styled further through its `className` prop.",displayName:"HistoricalAccountBalanceChart",props:{historicalAccountBalance:{defaultValue:{value:"[]"},description:"",name:"historicalAccountBalance",required:!1,type:{name:"T[]"}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}},disableLabel:{defaultValue:{value:"false"},description:"",name:"disableLabel",required:!1,type:{name:"boolean"}}}}}catch{}export{f as H};
//# sourceMappingURL=HistoricalAccountBalanceChart-2df4fd0a.js.map
