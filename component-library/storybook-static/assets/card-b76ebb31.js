var Or=Object.defineProperty;var Fr=(e,t,n)=>t in e?Or(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var r=(e,t,n)=>(Fr(e,typeof t!="symbol"?t+"":t,n),n);import{j as F}from"./jsx-runtime-7ce7b810.js";import{r as B}from"./index-37ba2b57.js";let ie=class{constructor(t){r(this,"address","");r(this,"city","");r(this,"state","");r(this,"unit","");r(this,"zipcode","");r(this,"lattitude","");r(this,"longitude","");r(this,"id","");t&&Object.assign(this,{...t})}getFullAddress(){return`${this.address}, ${this.city}, ${this.state} ${this.zipcode}`}};try{ie.displayName="Address",ie.__docgenInfo={description:`Represents a geographic address.

This class provides a structured representation of a physical location, capturing details such as address line, city, state, unit, zipcode, and geo-coordinates.
It also has utility methods like \`getFullAddress\` to fetch a formatted string representation of the address.`,displayName:"Address",props:{}}}catch{}let ce=class{constructor(t){r(this,"id");r(this,"tagName");r(this,"tagDescription");r(this,"metadata",[]);t&&Object.assign(this,{...t,metadata:(t==null?void 0:t.metadata)||[]})}getDescription(){return this.tagDescription||""}getName(){return this.tagName||""}getMetadata(){return this.metadata||[]}};try{ce.displayName="Tag",ce.__docgenInfo={description:`Represents a metadata tag.

The \`Tag\` class provides a structured representation for tags, commonly used for categorization or metadata annotation.
Each tag can have a name, a description, and associated metadata.`,displayName:"Tag",props:{}}}catch{}try{Address.displayName="Address",Address.__docgenInfo={description:`Represents a geographic address.

This class provides a structured representation of a physical location, capturing details such as address line, city, state, unit, zipcode, and geo-coordinates.
It also has utility methods like \`getFullAddress\` to fetch a formatted string representation of the address.`,displayName:"Address",props:{}}}catch{}try{Tag.displayName="Tag",Tag.__docgenInfo={description:`Represents a metadata tag.

The \`Tag\` class provides a structured representation for tags, commonly used for categorization or metadata annotation.
Each tag can have a name, a description, and associated metadata.`,displayName:"Tag",props:{}}}catch{}let pe=class{constructor(t){r(this,"code");r(this,"status");r(this,"message");r(this,"details");t&&Object.assign(this,{...t})}};try{pe.displayName="ErrorMetadata",pe.__docgenInfo={description:`Represents metadata associated with an error.
This might be directly from a service or part of an error response.`,displayName:"ErrorMetadata",props:{}}}catch{}let Q=class{constructor(t){r(this,"response",{errors:[]});var n,o;t&&Object.assign(this,{...t,response:{errors:(o=(n=t==null?void 0:t.response)==null?void 0:n.errors)==null?void 0:o.map(s=>new pe(s))}})}};try{Q.displayName="BackendError",Q.__docgenInfo={description:"Represents an error response from the backend or service.",displayName:"BackendError",props:{}}}catch{}let Z=class{constructor(t){r(this,"http_body",new Q);r(this,"http_status_code",0);t&&Object.assign(this,{...t,http_body:new Q(t==null?void 0:t.http_body),http_status_code:t==null?void 0:t.http_status_code})}};try{Z.displayName="ErrorMessage",Z.__docgenInfo={description:"Represents an error message that might include HTTP-specific details.",displayName:"ErrorMessage",props:{}}}catch{}let f=class{constructor(t){r(this,"error_message",new Z);t&&Object.assign(this,{...t,error_message:new Z(t==null?void 0:t.error_message)})}};try{f.displayName="ErrorResponse",f.__docgenInfo={description:"Represents a full error response, which may be returned to a client or user.",displayName:"ErrorResponse",props:{}}}catch{}try{BackendError.displayName="BackendError",BackendError.__docgenInfo={description:"Represents an error response from the backend or service.",displayName:"BackendError",props:{}}}catch{}try{ErrorMessage.displayName="ErrorMessage",ErrorMessage.__docgenInfo={description:"Represents an error message that might include HTTP-specific details.",displayName:"ErrorMessage",props:{}}}catch{}try{ErrorMetadata.displayName="ErrorMetadata",ErrorMetadata.__docgenInfo={description:`Represents metadata associated with an error.
This might be directly from a service or part of an error response.`,displayName:"ErrorMetadata",props:{}}}catch{}try{ErrorResponse.displayName="ErrorResponse",ErrorResponse.__docgenInfo={description:"Represents a full error response, which may be returned to a client or user.",displayName:"ErrorResponse",props:{}}}catch{}function br(e){var t,n,o="";if(typeof e=="string"||typeof e=="number")o+=e;else if(typeof e=="object")if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=br(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function Br(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=br(e))&&(o&&(o+=" "),o+=t);return o}function wr(){for(var e=0,t,n,o="";e<arguments.length;)(t=arguments[e++])&&(n=Mr(t))&&(o&&(o+=" "),o+=n);return o}function Mr(e){if(typeof e=="string")return e;for(var t,n="",o=0;o<e.length;o++)e[o]&&(t=Mr(e[o]))&&(n&&(n+=" "),n+=t);return n}var Ie="-";function qr(e){var t=kr(e),n=e.conflictingClassGroups,o=e.conflictingClassGroupModifiers,s=o===void 0?{}:o;function c(i){var _=i.split(Ie);return _[0]===""&&_.length!==1&&_.shift(),Tr(_,t)||Lr(i)}function a(i,_){var u=n[i]||[];return _&&s[i]?[].concat(u,s[i]):u}return{getClassGroupId:c,getConflictingClassGroupIds:a}}function Tr(e,t){var a;if(e.length===0)return t.classGroupId;var n=e[0],o=t.nextPart.get(n),s=o?Tr(e.slice(1),o):void 0;if(s)return s;if(t.validators.length!==0){var c=e.join(Ie);return(a=t.validators.find(function(i){var _=i.validator;return _(c)}))==null?void 0:a.classGroupId}}var Oe=/^\[(.+)\]$/;function Lr(e){if(Oe.test(e)){var t=Oe.exec(e)[1],n=t==null?void 0:t.substring(0,t.indexOf(":"));if(n)return"arbitrary.."+n}}function kr(e){var t=e.theme,n=e.prefix,o={nextPart:new Map,validators:[]},s=Yr(Object.entries(e.classGroups),n);return s.forEach(function(c){var a=c[0],i=c[1];le(i,o,a,t)}),o}function le(e,t,n,o){e.forEach(function(s){if(typeof s=="string"){var c=s===""?t:Fe(t,s);c.classGroupId=n;return}if(typeof s=="function"){if(Dr(s)){le(s(o),t,n,o);return}t.validators.push({validator:s,classGroupId:n});return}Object.entries(s).forEach(function(a){var i=a[0],_=a[1];le(_,Fe(t,i),n,o)})})}function Fe(e,t){var n=e;return t.split(Ie).forEach(function(o){n.nextPart.has(o)||n.nextPart.set(o,{nextPart:new Map,validators:[]}),n=n.nextPart.get(o)}),n}function Dr(e){return e.isThemeGetter}function Yr(e,t){return t?e.map(function(n){var o=n[0],s=n[1],c=s.map(function(a){return typeof a=="string"?t+a:typeof a=="object"?Object.fromEntries(Object.entries(a).map(function(i){var _=i[0],u=i[1];return[t+_,u]})):a});return[o,c]}):e}function zr(e){if(e<1)return{get:function(){},set:function(){}};var t=0,n=new Map,o=new Map;function s(c,a){n.set(c,a),t++,t>e&&(t=0,o=n,n=new Map)}return{get:function(a){var i=n.get(a);if(i!==void 0)return i;if((i=o.get(a))!==void 0)return s(a,i),i},set:function(a,i){n.has(a)?n.set(a,i):s(a,i)}}}var Er="!";function $r(e){var t=e.separator||":",n=t.length===1,o=t[0],s=t.length;return function(a){for(var i=[],_=0,u=0,g,h=0;h<a.length;h++){var I=a[h];if(_===0){if(I===o&&(n||a.slice(h,h+s)===t)){i.push(a.slice(u,h)),u=h+s;continue}if(I==="/"){g=h;continue}}I==="["?_++:I==="]"&&_--}var b=i.length===0?a:a.substring(u),M=b.startsWith(Er),N=M?b.substring(1):b,T=g&&g>u?g-u:void 0;return{modifiers:i,hasImportantModifier:M,baseClassName:N,maybePostfixModifierPosition:T}}}function jr(e){if(e.length<=1)return e;var t=[],n=[];return e.forEach(function(o){var s=o[0]==="[";s?(t.push.apply(t,n.sort().concat([o])),n=[]):n.push(o)}),t.push.apply(t,n.sort()),t}function Hr(e){return{cache:zr(e.cacheSize),splitModifiers:$r(e),...qr(e)}}var Wr=/\s+/;function Kr(e,t){var n=t.splitModifiers,o=t.getClassGroupId,s=t.getConflictingClassGroupIds,c=new Set;return e.trim().split(Wr).map(function(a){var i=n(a),_=i.modifiers,u=i.hasImportantModifier,g=i.baseClassName,h=i.maybePostfixModifierPosition,I=o(h?g.substring(0,h):g),b=!!h;if(!I){if(!h)return{isTailwindClass:!1,originalClassName:a};if(I=o(g),!I)return{isTailwindClass:!1,originalClassName:a};b=!1}var M=jr(_).join(":"),N=u?M+Er:M;return{isTailwindClass:!0,modifierId:N,classGroupId:I,originalClassName:a,hasPostfixModifier:b}}).reverse().filter(function(a){if(!a.isTailwindClass)return!0;var i=a.modifierId,_=a.classGroupId,u=a.hasPostfixModifier,g=i+_;return c.has(g)?!1:(c.add(g),s(_,u).forEach(function(h){return c.add(i+h)}),!0)}).reverse().map(function(a){return a.originalClassName}).join(" ")}function Qr(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var o,s,c,a=i;function i(u){var g=t[0],h=t.slice(1),I=h.reduce(function(b,M){return M(b)},g());return o=Hr(I),s=o.cache.get,c=o.cache.set,a=_,_(u)}function _(u){var g=s(u);if(g)return g;var h=Kr(u,o);return c(u,h),h}return function(){return a(wr.apply(null,arguments))}}function y(e){var t=function(o){return o[e]||[]};return t.isThemeGetter=!0,t}var Cr=/^\[(?:([a-z-]+):)?(.+)\]$/i,Zr=/^\d+\/\d+$/,Vr=new Set(["px","full","screen"]),Jr=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,Xr=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,en=/^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;function E(e){return U(e)||Vr.has(e)||Zr.test(e)||de(e)}function de(e){return O(e,"length",an)}function tn(e){return O(e,"size",Sr)}function rn(e){return O(e,"position",Sr)}function nn(e){return O(e,"url",cn)}function K(e){return O(e,"number",U)}function U(e){return!Number.isNaN(Number(e))}function on(e){return e.endsWith("%")&&U(e.slice(0,-1))}function L(e){return Be(e)||O(e,"number",Be)}function l(e){return Cr.test(e)}function k(){return!0}function x(e){return Jr.test(e)}function sn(e){return O(e,"",pn)}function O(e,t,n){var o=Cr.exec(e);return o?o[1]?o[1]===t:n(o[2]):!1}function an(e){return Xr.test(e)}function Sr(){return!1}function cn(e){return e.startsWith("url(")}function Be(e){return Number.isInteger(Number(e))}function pn(e){return en.test(e)}function ln(){var e=y("colors"),t=y("spacing"),n=y("blur"),o=y("brightness"),s=y("borderColor"),c=y("borderRadius"),a=y("borderSpacing"),i=y("borderWidth"),_=y("contrast"),u=y("grayscale"),g=y("hueRotate"),h=y("invert"),I=y("gap"),b=y("gradientColorStops"),M=y("gradientColorStopPositions"),N=y("inset"),T=y("margin"),P=y("opacity"),A=y("padding"),Ee=y("saturate"),re=y("scale"),Ce=y("sepia"),Se=y("skew"),Ae=y("space"),Ge=y("translate"),ne=function(){return["auto","contain","none"]},oe=function(){return["auto","hidden","clip","visible","scroll"]},se=function(){return["auto",l,t]},m=function(){return[l,t]},Pe=function(){return["",E]},j=function(){return["auto",U,l]},xe=function(){return["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top"]},H=function(){return["solid","dashed","dotted","double","none"]},ve=function(){return["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity","plus-lighter"]},ae=function(){return["start","end","center","between","around","evenly","stretch"]},w=function(){return["","0",l]},Ue=function(){return["auto","avoid","all","avoid-page","page","left","right","column"]},q=function(){return[U,K]},W=function(){return[U,l]};return{cacheSize:500,theme:{colors:[k],spacing:[E],blur:["none","",x,l],brightness:q(),borderColor:[e],borderRadius:["none","","full",x,l],borderSpacing:m(),borderWidth:Pe(),contrast:q(),grayscale:w(),hueRotate:W(),invert:w(),gap:m(),gradientColorStops:[e],gradientColorStopPositions:[on,de],inset:se(),margin:se(),opacity:q(),padding:m(),saturate:q(),scale:q(),sepia:w(),skew:W(),space:m(),translate:m()},classGroups:{aspect:[{aspect:["auto","square","video",l]}],container:["container"],columns:[{columns:[x]}],"break-after":[{"break-after":Ue()}],"break-before":[{"break-before":Ue()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],float:[{float:["right","left","none"]}],clear:[{clear:["left","right","both","none"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:[].concat(xe(),[l])}],overflow:[{overflow:oe()}],"overflow-x":[{"overflow-x":oe()}],"overflow-y":[{"overflow-y":oe()}],overscroll:[{overscroll:ne()}],"overscroll-x":[{"overscroll-x":ne()}],"overscroll-y":[{"overscroll-y":ne()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:[N]}],"inset-x":[{"inset-x":[N]}],"inset-y":[{"inset-y":[N]}],start:[{start:[N]}],end:[{end:[N]}],top:[{top:[N]}],right:[{right:[N]}],bottom:[{bottom:[N]}],left:[{left:[N]}],visibility:["visible","invisible","collapse"],z:[{z:["auto",L]}],basis:[{basis:se()}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["wrap","wrap-reverse","nowrap"]}],flex:[{flex:["1","auto","initial","none",l]}],grow:[{grow:w()}],shrink:[{shrink:w()}],order:[{order:["first","last","none",L]}],"grid-cols":[{"grid-cols":[k]}],"col-start-end":[{col:["auto",{span:["full",L]},l]}],"col-start":[{"col-start":j()}],"col-end":[{"col-end":j()}],"grid-rows":[{"grid-rows":[k]}],"row-start-end":[{row:["auto",{span:[L]},l]}],"row-start":[{"row-start":j()}],"row-end":[{"row-end":j()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":["auto","min","max","fr",l]}],"auto-rows":[{"auto-rows":["auto","min","max","fr",l]}],gap:[{gap:[I]}],"gap-x":[{"gap-x":[I]}],"gap-y":[{"gap-y":[I]}],"justify-content":[{justify:["normal"].concat(ae())}],"justify-items":[{"justify-items":["start","end","center","stretch"]}],"justify-self":[{"justify-self":["auto","start","end","center","stretch"]}],"align-content":[{content:["normal"].concat(ae(),["baseline"])}],"align-items":[{items:["start","end","center","baseline","stretch"]}],"align-self":[{self:["auto","start","end","center","stretch","baseline"]}],"place-content":[{"place-content":[].concat(ae(),["baseline"])}],"place-items":[{"place-items":["start","end","center","baseline","stretch"]}],"place-self":[{"place-self":["auto","start","end","center","stretch"]}],p:[{p:[A]}],px:[{px:[A]}],py:[{py:[A]}],ps:[{ps:[A]}],pe:[{pe:[A]}],pt:[{pt:[A]}],pr:[{pr:[A]}],pb:[{pb:[A]}],pl:[{pl:[A]}],m:[{m:[T]}],mx:[{mx:[T]}],my:[{my:[T]}],ms:[{ms:[T]}],me:[{me:[T]}],mt:[{mt:[T]}],mr:[{mr:[T]}],mb:[{mb:[T]}],ml:[{ml:[T]}],"space-x":[{"space-x":[Ae]}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":[Ae]}],"space-y-reverse":["space-y-reverse"],w:[{w:["auto","min","max","fit",l,t]}],"min-w":[{"min-w":["min","max","fit",l,E]}],"max-w":[{"max-w":["0","none","full","min","max","fit","prose",{screen:[x]},x,l]}],h:[{h:[l,t,"auto","min","max","fit"]}],"min-h":[{"min-h":["min","max","fit",l,E]}],"max-h":[{"max-h":[l,t,"min","max","fit"]}],"font-size":[{text:["base",x,de]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:["thin","extralight","light","normal","medium","semibold","bold","extrabold","black",K]}],"font-family":[{font:[k]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractons"],tracking:[{tracking:["tighter","tight","normal","wide","wider","widest",l]}],"line-clamp":[{"line-clamp":["none",U,K]}],leading:[{leading:["none","tight","snug","normal","relaxed","loose",l,E]}],"list-image":[{"list-image":["none",l]}],"list-style-type":[{list:["none","disc","decimal",l]}],"list-style-position":[{list:["inside","outside"]}],"placeholder-color":[{placeholder:[e]}],"placeholder-opacity":[{"placeholder-opacity":[P]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"text-color":[{text:[e]}],"text-opacity":[{"text-opacity":[P]}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[].concat(H(),["wavy"])}],"text-decoration-thickness":[{decoration:["auto","from-font",E]}],"underline-offset":[{"underline-offset":["auto",l,E]}],"text-decoration-color":[{decoration:[e]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],indent:[{indent:m()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",l]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",l]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-opacity":[{"bg-opacity":[P]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:[].concat(xe(),[rn])}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","round","space"]}]}],"bg-size":[{bg:["auto","cover","contain",tn]}],"bg-image":[{bg:["none",{"gradient-to":["t","tr","r","br","b","bl","l","tl"]},nn]}],"bg-color":[{bg:[e]}],"gradient-from-pos":[{from:[M]}],"gradient-via-pos":[{via:[M]}],"gradient-to-pos":[{to:[M]}],"gradient-from":[{from:[b]}],"gradient-via":[{via:[b]}],"gradient-to":[{to:[b]}],rounded:[{rounded:[c]}],"rounded-s":[{"rounded-s":[c]}],"rounded-e":[{"rounded-e":[c]}],"rounded-t":[{"rounded-t":[c]}],"rounded-r":[{"rounded-r":[c]}],"rounded-b":[{"rounded-b":[c]}],"rounded-l":[{"rounded-l":[c]}],"rounded-ss":[{"rounded-ss":[c]}],"rounded-se":[{"rounded-se":[c]}],"rounded-ee":[{"rounded-ee":[c]}],"rounded-es":[{"rounded-es":[c]}],"rounded-tl":[{"rounded-tl":[c]}],"rounded-tr":[{"rounded-tr":[c]}],"rounded-br":[{"rounded-br":[c]}],"rounded-bl":[{"rounded-bl":[c]}],"border-w":[{border:[i]}],"border-w-x":[{"border-x":[i]}],"border-w-y":[{"border-y":[i]}],"border-w-s":[{"border-s":[i]}],"border-w-e":[{"border-e":[i]}],"border-w-t":[{"border-t":[i]}],"border-w-r":[{"border-r":[i]}],"border-w-b":[{"border-b":[i]}],"border-w-l":[{"border-l":[i]}],"border-opacity":[{"border-opacity":[P]}],"border-style":[{border:[].concat(H(),["hidden"])}],"divide-x":[{"divide-x":[i]}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":[i]}],"divide-y-reverse":["divide-y-reverse"],"divide-opacity":[{"divide-opacity":[P]}],"divide-style":[{divide:H()}],"border-color":[{border:[s]}],"border-color-x":[{"border-x":[s]}],"border-color-y":[{"border-y":[s]}],"border-color-t":[{"border-t":[s]}],"border-color-r":[{"border-r":[s]}],"border-color-b":[{"border-b":[s]}],"border-color-l":[{"border-l":[s]}],"divide-color":[{divide:[s]}],"outline-style":[{outline:[""].concat(H())}],"outline-offset":[{"outline-offset":[l,E]}],"outline-w":[{outline:[E]}],"outline-color":[{outline:[e]}],"ring-w":[{ring:Pe()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:[e]}],"ring-opacity":[{"ring-opacity":[P]}],"ring-offset-w":[{"ring-offset":[E]}],"ring-offset-color":[{"ring-offset":[e]}],shadow:[{shadow:["","inner","none",x,sn]}],"shadow-color":[{shadow:[k]}],opacity:[{opacity:[P]}],"mix-blend":[{"mix-blend":ve()}],"bg-blend":[{"bg-blend":ve()}],filter:[{filter:["","none"]}],blur:[{blur:[n]}],brightness:[{brightness:[o]}],contrast:[{contrast:[_]}],"drop-shadow":[{"drop-shadow":["","none",x,l]}],grayscale:[{grayscale:[u]}],"hue-rotate":[{"hue-rotate":[g]}],invert:[{invert:[h]}],saturate:[{saturate:[Ee]}],sepia:[{sepia:[Ce]}],"backdrop-filter":[{"backdrop-filter":["","none"]}],"backdrop-blur":[{"backdrop-blur":[n]}],"backdrop-brightness":[{"backdrop-brightness":[o]}],"backdrop-contrast":[{"backdrop-contrast":[_]}],"backdrop-grayscale":[{"backdrop-grayscale":[u]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[g]}],"backdrop-invert":[{"backdrop-invert":[h]}],"backdrop-opacity":[{"backdrop-opacity":[P]}],"backdrop-saturate":[{"backdrop-saturate":[Ee]}],"backdrop-sepia":[{"backdrop-sepia":[Ce]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":[a]}],"border-spacing-x":[{"border-spacing-x":[a]}],"border-spacing-y":[{"border-spacing-y":[a]}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["none","all","","colors","opacity","shadow","transform",l]}],duration:[{duration:W()}],ease:[{ease:["linear","in","out","in-out",l]}],delay:[{delay:W()}],animate:[{animate:["none","spin","ping","pulse","bounce",l]}],transform:[{transform:["","gpu","none"]}],scale:[{scale:[re]}],"scale-x":[{"scale-x":[re]}],"scale-y":[{"scale-y":[re]}],rotate:[{rotate:[L,l]}],"translate-x":[{"translate-x":[Ge]}],"translate-y":[{"translate-y":[Ge]}],"skew-x":[{"skew-x":[Se]}],"skew-y":[{"skew-y":[Se]}],"transform-origin":[{origin:["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",l]}],accent:[{accent:["auto",e]}],appearance:["appearance-none"],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",l]}],"caret-color":[{caret:[e]}],"pointer-events":[{"pointer-events":["none","auto"]}],resize:[{resize:["none","y","x",""]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":m()}],"scroll-mx":[{"scroll-mx":m()}],"scroll-my":[{"scroll-my":m()}],"scroll-ms":[{"scroll-ms":m()}],"scroll-me":[{"scroll-me":m()}],"scroll-mt":[{"scroll-mt":m()}],"scroll-mr":[{"scroll-mr":m()}],"scroll-mb":[{"scroll-mb":m()}],"scroll-ml":[{"scroll-ml":m()}],"scroll-p":[{"scroll-p":m()}],"scroll-px":[{"scroll-px":m()}],"scroll-py":[{"scroll-py":m()}],"scroll-ps":[{"scroll-ps":m()}],"scroll-pe":[{"scroll-pe":m()}],"scroll-pt":[{"scroll-pt":m()}],"scroll-pr":[{"scroll-pr":m()}],"scroll-pb":[{"scroll-pb":m()}],"scroll-pl":[{"scroll-pl":m()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","pinch-zoom","manipulation",{pan:["x","left","right","y","up","down"]}]}],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",l]}],fill:[{fill:[e,"none"]}],"stroke-w":[{stroke:[E,K]}],stroke:[{stroke:[e,"none"]}],sr:["sr-only","not-sr-only"]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"]},conflictingClassGroupModifiers:{"font-size":["leading"]}}}var dn=Qr(ln);function v(...e){return dn(Br(e))}const we=e=>{if(e!==void 0){const{http_body:t}=e;throw new Error(JSON.stringify(t))}};function qe(e){return new Date(e).toLocaleDateString("en-US",{month:"long",day:"numeric",year:"numeric"})}const Le=(e,t)=>Math.floor(Math.random()*(t-e+1)+e);function ke(e,t){return e.toFixed(t)}function De(e){return e.replace(/_/g," ").toLowerCase()}function Ye(e){const t=Math.floor((new Date().getTime()-e.getTime())/1e3);let n=t/31536e3;return n>1?`${Math.floor(n)} years ago`:(n=t/2592e3,n>1?`${Math.floor(n)} months ago`:(n=t/86400,n>1?`${Math.floor(n)} days ago`:(n=t/3600,n>1?`${Math.floor(n)} hours ago`:(n=t/60,n>1?`${Math.floor(n)} minutes ago`:`${Math.floor(t)} seconds ago`))))}function ze(e){return Math.round((e+Number.EPSILON)*100)/100}function $e(e){const t=e.substr(0,4),n=e.substr(4,2),o=["January","February","March","April","May","June","July","August","September","October","November","December"],s=parseInt(n,10)-1;return`${o[s]} ${t}`}const V=(e,t,n,o)=>{console.log(`Event name: ${e}`),console.log("Metadata: ",t),console.log("Error: ",n),console.log("User ID: ",o)},je=async({institution:e,accounts:t,link_session_id:n},o)=>{V("onSuccess",{institution:e,accounts:t,link_session_id:n},null,o)},He=async(e,{institution:t,status:n,link_session_id:o,request_id:s},c)=>{V("onExit",{institution:t,status:n,link_session_id:o,request_id:s},e),console.log("Error code: ",e||{},c)};function We(e){return e.replace(/_/g," ")}function Ke(e){const t="POCKET_TYPE_";let n=e.startsWith(t)?e.slice(t.length):e;return n=n.replace(/_/g," "),n.toLowerCase()}function d(e,t){return Math.floor(Math.random()*(t-e+1)+e)}function p(e){const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let n="";for(let o=0;o<e;o++)n+=t.charAt(Math.floor(Math.random()*t.length));return n}function G(e){return e[Math.floor(Math.random()*e.length)]}function C(e,t){return new Date(e.getTime()+Math.random()*(t.getTime()-e.getTime())).toISOString().split("T")[0]}function Ar(){return Math.random()>.5}function _n(){const e=d(1,5),t=[];for(let n=0;n<e;n++)t.push(p(5));return t}function Qe(){return(Math.random()*1e4).toFixed(2)}function yn(){return+(Math.random()*1e4).toFixed(2)}function Ze(e,t=""){const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let o="";for(let s=0;s<e;s++)o+=n.charAt(Math.floor(Math.random()*n.length));return t+o}function un(e,t){const n=d(e,t),o=d(0,11),s=d(1,28);return new Date(n,o,s)}const Ve=e=>{switch(e){case"RE_OCCURING_TRANSACTIONS_FREQUENCY_ANNUALLY":return"Annually";case"RE_OCCURING_TRANSACTIONS_FREQUENCY_MONTHLY":return"Monthly";case"RE_OCCURING_TRANSACTIONS_FREQUENCY_BIWEEKLY":return"BiWeekly";case"RE_OCCURING_TRANSACTIONS_FREQUENCY_SEMI_MONTHLY":return"Semi-Monthly";case"RE_OCCURING_TRANSACTIONS_FREQUENCY_WEEKLY":return"Weekly";case"RE_OCCURING_TRANSACTIONS_FREQUENCY_UNSPECIFIED":return"Unspecified";case"UNRECOGNIZED":return"Unrecognized";default:return"Unknown"}};try{v.displayName="cn",v.__docgenInfo={description:"Creates a string of CSS classes.",displayName:"cn",props:{}}}catch{}try{qe.displayName="formatDate",qe.__docgenInfo={description:"Formats a date string or a timestamp into a string representation.",displayName:"formatDate",props:{}}}catch{}try{ke.displayName="formatNumber",ke.__docgenInfo={description:"Formats a number to a defined number of decimal points.",displayName:"formatNumber",props:{}}}catch{}try{De.displayName="removeUnderScores",De.__docgenInfo={description:"Replaces all underscores in a string with spaces and convert the string to lower case.",displayName:"removeUnderScores",props:{}}}catch{}try{Ye.displayName="timeAgo",Ye.__docgenInfo={description:'Converts a Date object into a "time ago" string.',displayName:"timeAgo",props:{}}}catch{}try{ze.displayName="roundToTwoDecimalPlaces",ze.__docgenInfo={description:"Rounds a number to two decimal places.",displayName:"roundToTwoDecimalPlaces",props:{}}}catch{}try{$e.displayName="convertToMonth",$e.__docgenInfo={description:"Converts a YYYYMM format string into a Month Year string.",displayName:"convertToMonth",props:{}}}catch{}try{We.displayName="replaceUnderscoreWithSpace",We.__docgenInfo={description:"Replaces all underscores in a string with spaces.",displayName:"replaceUnderscoreWithSpace",props:{}}}catch{}try{Ke.displayName="formatPocketName",Ke.__docgenInfo={description:"Helper function to format the pocket name string.",displayName:"formatPocketName",props:{}}}catch{}try{p.displayName="getRandomString",p.__docgenInfo={description:"",displayName:"getRandomString",props:{}}}catch{}try{G.displayName="getRandomArrayItem",G.__docgenInfo={description:"",displayName:"getRandomArrayItem",props:{}}}catch{}try{we.displayName="processErrorIfPresent",we.__docgenInfo={description:"Throws an error if one is present.",displayName:"processErrorIfPresent",props:{}}}catch{}try{Le.displayName="randomIntFromInterval",Le.__docgenInfo={description:"Generates a random integer within the provided range.",displayName:"randomIntFromInterval",props:{}}}catch{}try{V.displayName="logEvent",V.__docgenInfo={description:"Logs event details to the console.",displayName:"logEvent",props:{}}}catch{}try{je.displayName="logSuccess",je.__docgenInfo={description:"Logs successful Plaid Link events.",displayName:"logSuccess",props:{}}}catch{}try{He.displayName="logExit",He.__docgenInfo={description:"Logs Plaid Link exit events.",displayName:"logExit",props:{}}}catch{}try{Ve.displayName="formatFrequency",Ve.__docgenInfo={description:"",displayName:"formatFrequency",props:{}}}catch{}class Ne{constructor(t){r(this,"id",0);r(this,"name","");r(this,"description","");r(this,"subcategories",[]);t&&Object.assign(this,{...t})}static randomInstance(){return new Ne({id:d(1,1e4),name:p(5),description:p(10),subcategories:_n()})}}class Re{constructor(t){r(this,"id",0);r(this,"name","");r(this,"description","");r(this,"startDate","");r(this,"endDate","");r(this,"category");t&&Object.assign(this,{...t})}static randomInstance(){return new Re({id:d(1,1e4),name:p(5),description:p(10),startDate:C(new Date(2020,0,1),new Date(2025,0,1)),endDate:C(new Date(2020,0,1),new Date(2025,0,1)),category:Math.random()>.5?Ne.randomInstance():void 0})}}class be{constructor(t){r(this,"id",0);r(this,"name","");r(this,"description","");r(this,"targetDate","");r(this,"targetAmount","");r(this,"isCompleted",!1);r(this,"budget");t&&Object.assign(this,{...t})}static randomInstance(){return new be({id:d(1,1e4),name:p(5),description:p(10),targetDate:C(new Date(2020,0,1),new Date(2025,0,1)),targetAmount:`$${d(100,1e3)}`,isCompleted:Ar(),budget:Math.random()>.5?Re.randomInstance():void 0})}}var _e=(e=>(e[e.POCKET_TYPE_UNSPECIFIED=0]="POCKET_TYPE_UNSPECIFIED",e[e.POCKET_TYPE_DISCRETIONARY_SPENDING=1]="POCKET_TYPE_DISCRETIONARY_SPENDING",e[e.POCKET_TYPE_FUN_MONEY=2]="POCKET_TYPE_FUN_MONEY",e[e.POCKET_TYPE_DEBT_REDUCTION=3]="POCKET_TYPE_DEBT_REDUCTION",e[e.POCKET_TYPE_EMERGENCY_FUND=4]="POCKET_TYPE_EMERGENCY_FUND",e[e.POCKET_TYPE_INVESTMENT=5]="POCKET_TYPE_INVESTMENT",e[e.POCKET_TYPE_SHORT_TERM_SAVINGS=6]="POCKET_TYPE_SHORT_TERM_SAVINGS",e[e.POCKET_TYPE_LONG_TERM_SAVINGS=7]="POCKET_TYPE_LONG_TERM_SAVINGS",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(_e||{});class Me{constructor(t){r(this,"id",0);r(this,"forecastedAmount","");r(this,"forecastedCompletionDate","");r(this,"varianceAmount","");t&&Object.assign(this,{...t})}static randomInstance(){return new Me({id:d(1,1e4),forecastedAmount:Qe(),forecastedCompletionDate:C(new Date(2020,0,1),new Date(2025,0,1)),varianceAmount:Qe()})}}var ye=(e=>(e[e.GOAL_TYPE_UNSPECIFIED=0]="GOAL_TYPE_UNSPECIFIED",e[e.GOAL_TYPE_SAVINGS=1]="GOAL_TYPE_SAVINGS",e[e.GOAL_TYPE_INVESTMENT=2]="GOAL_TYPE_INVESTMENT",e[e.GOAL_TYPE_DEBT=3]="GOAL_TYPE_DEBT",e[e.GOAL_TYPE_EXPENSE=4]="GOAL_TYPE_EXPENSE",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(ye||{});class Te{constructor(t){r(this,"id",0);r(this,"userId",0);r(this,"name","");r(this,"description","");r(this,"isCompleted",!1);r(this,"goalType",ye.GOAL_TYPE_UNSPECIFIED);r(this,"duration","");r(this,"startDate","");r(this,"endDate","");r(this,"targetAmount","");r(this,"currentAmount","");r(this,"milestones",[]);r(this,"forecasts");t&&Object.assign(this,{...t})}static randomInstance(){const t=d(0,5),n=Array.from({length:t},()=>be.randomInstance());return new Te({id:d(1,1e4),userId:d(1,1e4),name:p(5),description:p(10),isCompleted:Ar(),goalType:G(Object.values(ye).slice()),duration:`${d(1,5)} weeks`,startDate:C(new Date(2020,0,1),new Date(2025,0,1)),endDate:C(new Date(2022,0,1),new Date(2030,0,1)),targetAmount:`$${d(500,1e4)}`,currentAmount:`$${d(0,5e3)}`,milestones:n,forecasts:Math.random()>.5?Me.randomInstance():void 0})}}let ue=class Gr{constructor(t){r(this,"id",0);r(this,"goals",[]);r(this,"type",_e.POCKET_TYPE_UNSPECIFIED);Object.assign(this,t)}static randomInstance(){const t=d(0,5),n=Array.from({length:t},()=>Te.randomInstance());return new Gr({id:d(1,1e4),goals:n,type:G(Object.values(_e).slice())})}};try{ue.displayName="Pocket",ue.__docgenInfo={description:"Pocket represents the Pocket entity.",displayName:"Pocket",props:{}}}catch{}class mn{constructor(t={}){r(this,"id");r(this,"detailedAction");r(this,"summarizedAction");r(this,"generatedTime");r(this,"tags");this.id=t.id??0,this.detailedAction=t.detailedAction??"",this.summarizedAction=t.summarizedAction??"",this.generatedTime=t.generatedTime,this.tags=t.tags??[]}}var D=(e=>(e[e.BANK_ACCOUNT_STATUS_UNSPECIFIED=0]="BANK_ACCOUNT_STATUS_UNSPECIFIED",e[e.BANK_ACCOUNT_STATUS_ACTIVE=1]="BANK_ACCOUNT_STATUS_ACTIVE",e[e.BANK_ACCOUNT_STATUS_INACTIVE=2]="BANK_ACCOUNT_STATUS_INACTIVE",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(D||{});try{D.displayName="BankAccountStatus",D.__docgenInfo={description:"BankAccountStatus represents the status of a bank account.",displayName:"BankAccountStatus",props:{}}}catch{}var me=(e=>(e[e.BANK_ACCOUNT_TYPE_UNSPECIFIED=0]="BANK_ACCOUNT_TYPE_UNSPECIFIED",e[e.BANK_ACCOUNT_TYPE_PLAID=1]="BANK_ACCOUNT_TYPE_PLAID",e[e.BANK_ACCOUNT_TYPE_MANUAL=2]="BANK_ACCOUNT_TYPE_MANUAL",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(me||{});let Je=class Pr{constructor(t){r(this,"id",0);r(this,"userId",0);r(this,"name","");r(this,"number","");r(this,"type",me.BANK_ACCOUNT_TYPE_UNSPECIFIED);r(this,"balance",0);r(this,"currency","");r(this,"currentFunds",0);r(this,"balanceLimit",0);r(this,"pockets",[]);r(this,"plaidAccountId","");r(this,"subtype","");r(this,"status",D.BANK_ACCOUNT_STATUS_UNSPECIFIED);t&&Object.assign(this,{...t})}getNumberOfPockets(){return this.pockets.length}getNumberOfGoals(){return this.pockets.reduce((n,o)=>n+o.goals.length,0)}getGoals(){return this.pockets.filter(o=>o.goals.length>0).flat().map(o=>o.goals).flat()}getMilestones(){return this.getGoals().filter(s=>s.milestones.length>0).map(s=>s.milestones).flat()}static randomInstance(){const t=d(0,5),n=Array.from({length:t},()=>ue.randomInstance());return new Pr({id:d(1,1e4),userId:d(1,1e4),name:`Account ${p(5)}`,number:`xxxx-xxxx-xxxx-${p(4)}`,type:G(Object.values(me).slice()),balance:d(1e3,1e4),currency:G(["USD","EUR","GBP","JPY"]),currentFunds:d(500,5e3),balanceLimit:d(0,1e3),pockets:n,plaidAccountId:p(10),subtype:`Subtype ${p(3)}`,status:G(Object.values(D).slice())})}};try{Je.displayName="BankAccount",Je.__docgenInfo={description:"Represents a bank account tied to a user.",displayName:"BankAccount",props:{}}}catch{}var J=(e=>(e[e.LINK_STATUS_UNSPECIFIED=0]="LINK_STATUS_UNSPECIFIED",e[e.LINK_STATUS_SETUP=1]="LINK_STATUS_SETUP",e[e.LINK_STATUS_PENDING=2]="LINK_STATUS_PENDING",e[e.LINK_STATUS_ERROR=3]="LINK_STATUS_ERROR",e[e.LINK_STATUS_SUCCESS=4]="LINK_STATUS_SUCCESS",e[e.LINK_STATUS_PENDING_EXPIRATION=5]="LINK_STATUS_PENDING_EXPIRATION",e[e.LINK_STATUS_REVOKED=6]="LINK_STATUS_REVOKED",e[e.LINK_STATUS_ITEM_LOGIN_REQUIRED=7]="LINK_STATUS_ITEM_LOGIN_REQUIRED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(J||{});try{J.displayName="LinkStatus",J.__docgenInfo={description:"Enum representing the status of a link.",displayName:"LinkStatus",props:{}}}catch{}var X=(e=>(e[e.LINK_TYPE_UNSPECIFIED=0]="LINK_TYPE_UNSPECIFIED",e[e.LINK_TYPE_PLAID=1]="LINK_TYPE_PLAID",e[e.LINK_TYPE_MANUAL=2]="LINK_TYPE_MANUAL",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(X||{});try{X.displayName="LinkType",X.__docgenInfo={description:"Enum representing the type of a link.",displayName:"LinkType",props:{}}}catch{}class hn{constructor(t){r(this,"id",0);r(this,"plaidSync");r(this,"linkStatus",J.LINK_STATUS_UNSPECIFIED);r(this,"plaidLink");r(this,"plaidNewAccountsAvailable",!1);r(this,"expirationDate","");r(this,"institutionName","");r(this,"customInstitutionName","");r(this,"description","");r(this,"lastManualSync","");r(this,"lastSuccessfulUpdate","");r(this,"token");r(this,"bankAccounts",[]);r(this,"investmentAccounts",[]);r(this,"creditAccounts",[]);r(this,"mortgageAccounts",[]);r(this,"studentLoanAccounts",[]);r(this,"plaidInstitutionId","");r(this,"linkType",X.LINK_TYPE_UNSPECIFIED);r(this,"errorCode","");r(this,"updatedAt","");r(this,"newAccountsAvailable",!1);r(this,"shouldBeUpdated",!1);t&&Object.assign(this,{...t})}}let he=class{constructor(t={}){r(this,"id");r(this,"stripeSubscriptionId");r(this,"stripeSubscriptionStatus");r(this,"stripeSubscriptionActiveUntil");r(this,"stripeWebhookLatestTimestamp");r(this,"isTrialing");this.id=t.id??0,this.stripeSubscriptionId=t.stripeSubscriptionId??"",this.stripeSubscriptionStatus=t.stripeSubscriptionStatus,this.stripeSubscriptionActiveUntil=t.stripeSubscriptionActiveUntil??"",this.stripeWebhookLatestTimestamp=t.stripeWebhookLatestTimestamp??"",this.isTrialing=t.isTrialing??!1}};try{he.displayName="StripeSubscription",he.__docgenInfo={description:"Represents a subscription managed through the Stripe payment platform.",displayName:"StripeSubscription",props:{}}}catch{}let Xe=class{constructor(t){r(this,"userFinancialProfileID",0);r(this,"userId",0);r(this,"stripeCustomerId","");r(this,"stripeSubscriptions");r(this,"link",[]);r(this,"actionableInsights",[]);var n,o;t&&Object.assign(this,{...t,stripeSubscriptions:new he(t==null?void 0:t.stripeSubscriptions),link:(n=t==null?void 0:t.link)==null?void 0:n.map(s=>new hn(s)),actionableInsights:(o=t==null?void 0:t.actionableInsights)==null?void 0:o.map(s=>new mn(s))})}};try{Xe.displayName="FinancialProfile",Xe.__docgenInfo={description:"Represents a user's financial profile.",displayName:"FinancialProfile",props:{}}}catch{}let et=class{constructor(t={}){r(this,"id");r(this,"products");r(this,"webhookUrl");r(this,"institutionId");r(this,"institutionName");r(this,"usePlaidSync");r(this,"itemId");this.id=t.id??0,this.products=t.products??[],this.webhookUrl=t.webhookUrl??"",this.institutionId=t.institutionId??"",this.institutionName=t.institutionName??"",this.usePlaidSync=t.usePlaidSync??!1,this.itemId=t.itemId??""}};try{et.displayName="PlaidLink",et.__docgenInfo={description:"Represents linking information related to Plaid.",displayName:"PlaidLink",props:{}}}catch{}let tt=class{constructor(t={}){r(this,"id");r(this,"timeStamp");r(this,"trigger");r(this,"nextCursor");r(this,"added");r(this,"removed");r(this,"modified");this.id=t.id??0,this.timeStamp=t.timeStamp??"",this.trigger=t.trigger??"",this.nextCursor=t.nextCursor??"",this.added=t.added??0,this.removed=t.removed??0,this.modified=t.modified??0}};try{tt.displayName="PlaidSync",tt.__docgenInfo={description:"Represents synchronization information related to Plaid.",displayName:"PlaidSync",props:{}}}catch{}var ge=(e=>(e[e.STRIPE_SUBSCRIPTION_STATUS_UNSPECIFIED=0]="STRIPE_SUBSCRIPTION_STATUS_UNSPECIFIED",e[e.STRIPE_SUBSCRIPTION_STATUS_TRIALING=1]="STRIPE_SUBSCRIPTION_STATUS_TRIALING",e[e.STRIPE_SUBSCRIPTION_STATUS_ACTIVE=2]="STRIPE_SUBSCRIPTION_STATUS_ACTIVE",e[e.STRIPE_SUBSCRIPTION_STATUS_PAST_DUE=3]="STRIPE_SUBSCRIPTION_STATUS_PAST_DUE",e[e.STRIPE_SUBSCRIPTION_STATUS_CANCELED=4]="STRIPE_SUBSCRIPTION_STATUS_CANCELED",e[e.STRIPE_SUBSCRIPTION_STATUS_UNPAID=5]="STRIPE_SUBSCRIPTION_STATUS_UNPAID",e[e.STRIPE_SUBSCRIPTION_STATUS_COMPLETE=6]="STRIPE_SUBSCRIPTION_STATUS_COMPLETE",e[e.STRIPE_SUBSCRIPTION_STATUS_INCOMPLETE=7]="STRIPE_SUBSCRIPTION_STATUS_INCOMPLETE",e[e.STRIPE_SUBSCRIPTION_STATUS_INCOMPLETE_EXPIRED=8]="STRIPE_SUBSCRIPTION_STATUS_INCOMPLETE_EXPIRED",e[e.STRIPE_SUBSCRIPTION_STATUS_CREATED=9]="STRIPE_SUBSCRIPTION_STATUS_CREATED",e[e.STRIPE_SUBSCRIPTION_STATUS_PAUSED=10]="STRIPE_SUBSCRIPTION_STATUS_PAUSED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(ge||{});try{ge.displayName="StripeSubscriptionStatus",ge.__docgenInfo={description:"Enum representing the status of a Stripe subscription.",displayName:"StripeSubscriptionStatus",props:{}}}catch{}let rt=class{constructor(t={}){r(this,"id");r(this,"itemId");r(this,"keyId");r(this,"accessToken");r(this,"version");this.id=t.id??0,this.itemId=t.itemId??"",this.keyId=t.keyId??"",this.accessToken=t.accessToken??"",this.version=t.version??""}};try{rt.displayName="Token",rt.__docgenInfo={description:"Token object holding an access token used to make API requests related to a specific Item.",displayName:"Token",props:{}}}catch{}let nt=class xr{constructor(t){r(this,"time");r(this,"accountId","");r(this,"isoCurrencyCode","");r(this,"balance",0);r(this,"userId",0);r(this,"sign",0);r(this,"id","");t&&Object.assign(this,{...t,time:t.time instanceof Date?t.time:void 0})}static randomInstance(){return new xr({id:Ze(5,"BAL-"),time:un(2e3,2025),accountId:Ze(5,"ACC-"),isoCurrencyCode:["USD","EUR","GBP","JPY","AUD"][d(0,4)],balance:yn(),userId:d(1,100),sign:[1,-1][d(0,1)]})}};try{nt.displayName="AccountBalanceHistory",nt.__docgenInfo={description:"Represents the balance history of an account.",displayName:"AccountBalanceHistory",props:{}}}catch{}(()=>{if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw"Unable to locate global object"})();let ot=class{constructor(t={}){r(this,"month",0);r(this,"personalFinanceCategoryPrimary","");r(this,"transactionCount",0);r(this,"spentLastWeek",0);r(this,"spentLastTwoWeeks",0);r(this,"spentLastMonth",0);r(this,"spentLastSixMonths",0);r(this,"spentLastYear",0);r(this,"spentLastTwoYears",0);r(this,"userId",0);t&&Object.assign(this,{...t})}};try{ot.displayName="CategoryMetricsFinancialSubProfile",ot.__docgenInfo={description:"Represents the financial sub-profile of a category.",displayName:"CategoryMetricsFinancialSubProfile",props:{}}}catch{}let st=class{constructor(t={}){r(this,"month",0);r(this,"personalFinanceCategoryPrimary","");r(this,"totalSpending",0);r(this,"userId",0);t&&Object.assign(this,{...t})}};try{st.displayName="CategoryMonthlyExpenditure",st.__docgenInfo={description:"Represents the monthly expenditure of a category.",displayName:"CategoryMonthlyExpenditure",props:{}}}catch{}let at=class{constructor(t){r(this,"month",0);r(this,"personalFinanceCategoryPrimary","");r(this,"totalIncome",0);r(this,"userId",0);t&&Object.assign(this,{...t})}};try{at.displayName="CategoryMonthlyIncome",at.__docgenInfo={description:"Represents the monthly income of a category.",displayName:"CategoryMonthlyIncome",props:{}}}catch{}let it=class{constructor(t={}){r(this,"month",0);r(this,"personalFinanceCategoryPrimary","");r(this,"transactionCount",0);r(this,"userId",0);t&&Object.assign(this,{...t})}};try{it.displayName="CategoryMonthlyTransactionCount",it.__docgenInfo={description:"Represents the monthly transaction count of a category.",displayName:"CategoryMonthlyTransactionCount",props:{}}}catch{}let ct=class{constructor(t={}){r(this,"month");r(this,"ratio");r(this,"userId");this.month=t.month??0,this.ratio=t.ratio??0,this.userId=t.userId??0}};try{ct.displayName="DebtToIncomeRatio",ct.__docgenInfo={description:"Represents the debt to income ratio of a user.",displayName:"DebtToIncomeRatio",props:{}}}catch{}let pt=class{constructor(t={}){r(this,"month");r(this,"spentLastWeek");r(this,"spentLastMonth");r(this,"spentLastSixMonths");r(this,"averageMonthlyDiscretionarySpending");r(this,"averageMonthlyRecurringSpending");r(this,"userId");this.month=t.month??0,this.spentLastWeek=t.spentLastWeek??0,this.spentLastMonth=t.spentLastMonth??0,this.spentLastSixMonths=t.spentLastSixMonths??0,this.averageMonthlyDiscretionarySpending=t.averageMonthlyDiscretionarySpending??0,this.averageMonthlyRecurringSpending=t.averageMonthlyRecurringSpending??0,this.userId=t.userId??0}};try{pt.displayName="ExpenseMetricsFinancialSubProfileMetrics",pt.__docgenInfo={description:"Represents the financial sub-profile metrics related to a user's expenses.",displayName:"ExpenseMetricsFinancialSubProfileMetrics",props:{}}}catch{}let lt=class{constructor(t={}){r(this,"month");r(this,"personalFinanceCategoryPrimary");r(this,"transactionCount");r(this,"totalExpenses");r(this,"userId");this.month=t.month??0,this.personalFinanceCategoryPrimary=t.personalFinanceCategoryPrimary??"",this.transactionCount=t.transactionCount??0,this.totalExpenses=t.totalExpenses??0,this.userId=t.userId??0}};try{lt.displayName="ExpenseMetrics",lt.__docgenInfo={description:"Represents the expense metrics related to a user's personal finance.",displayName:"ExpenseMetrics",props:{}}}catch{}let dt=class{constructor(t={}){r(this,"month");r(this,"totalIncome");r(this,"totalExpenses");r(this,"numberOfTransactions");r(this,"mostExpensiveCategory");r(this,"userId");this.month=t.month??0,this.totalIncome=t.totalIncome??0,this.totalExpenses=t.totalExpenses??0,this.numberOfTransactions=t.numberOfTransactions??0,this.mostExpensiveCategory=t.mostExpensiveCategory??"",this.userId=t.userId??0}};try{dt.displayName="FinancialProfileMetrics",dt.__docgenInfo={description:"Represents the comprehensive financial profile of a user.",displayName:"FinancialProfileMetrics",props:{}}}catch{}let _t=class{constructor(t={}){r(this,"month");r(this,"ratio");r(this,"userId");this.month=t.month??0,this.ratio=t.ratio??0,this.userId=t.userId??0}};try{_t.displayName="IncomeExpenseRatio",_t.__docgenInfo={description:"Represents the income-expense ratio of a user for a particular month.",displayName:"IncomeExpenseRatio",props:{}}}catch{}let yt=class{constructor(t={}){r(this,"month");r(this,"incomeLastTwoWeeks");r(this,"incomeLastMonth");r(this,"incomeLastTwoMonths");r(this,"incomeLastSixMonths");r(this,"incomeLastYear");r(this,"userId");this.month=t.month??0,this.incomeLastTwoWeeks=t.incomeLastTwoWeeks??0,this.incomeLastMonth=t.incomeLastMonth??0,this.incomeLastTwoMonths=t.incomeLastTwoMonths??0,this.incomeLastSixMonths=t.incomeLastSixMonths??0,this.incomeLastYear=t.incomeLastYear??0,this.userId=t.userId??0}};try{yt.displayName="IncomeMetricsFinancialSubProfile",yt.__docgenInfo={description:"Represents the income metrics for a user's financial sub-profile.",displayName:"IncomeMetricsFinancialSubProfile",props:{}}}catch{}let ut=class{constructor(t={}){r(this,"month");r(this,"personalFinanceCategoryPrimary");r(this,"transactionCount");r(this,"totalIncome");r(this,"userId");this.month=t.month??0,this.personalFinanceCategoryPrimary=t.personalFinanceCategoryPrimary??"",this.transactionCount=t.transactionCount??0,this.totalIncome=t.totalIncome??0,this.userId=t.userId??0}};try{ut.displayName="IncomeMetrics",ut.__docgenInfo={description:"Represents the income metrics for a user.",displayName:"IncomeMetrics",props:{}}}catch{}let mt=class{constructor(t={}){r(this,"accountId");r(this,"ammount");r(this,"investmentTransactionId");r(this,"securityId");r(this,"currentDate");r(this,"name");r(this,"quantity");r(this,"amount");r(this,"price");r(this,"fees");r(this,"type");r(this,"subtype");r(this,"isoCurrencyCode");r(this,"unofficialCurrencyCode");r(this,"linkId");r(this,"id");r(this,"userId");r(this,"createdAt");r(this,"sign");r(this,"time");r(this,"additionalProperties");this.accountId=t.accountId??"",this.ammount=t.ammount??"",this.investmentTransactionId=t.investmentTransactionId??"",this.securityId=t.securityId??"",this.currentDate=t.currentDate??"",this.name=t.name??"",this.quantity=t.quantity??0,this.amount=t.amount??0,this.price=t.price??0,this.fees=t.fees??0,this.type=t.type??"",this.subtype=t.subtype??"",this.isoCurrencyCode=t.isoCurrencyCode??"",this.unofficialCurrencyCode=t.unofficialCurrencyCode??"",this.linkId=t.linkId??0,this.id=t.id??"",this.userId=t.userId??0,this.createdAt=t.createdAt??"",this.sign=t.sign??0,this.time=t.time instanceof Date?t.time:void 0,this.additionalProperties=t.additionalProperties}};try{mt.displayName="InvestmentTransaction",mt.__docgenInfo={description:"Represents an investment transaction.",displayName:"InvestmentTransaction",props:{}}}catch{}let ht=class{constructor(t={}){r(this,"locationCity");r(this,"transactionCount");r(this,"spentLastWeek");r(this,"spentLastTwoWeeks");r(this,"spentLastMonth");r(this,"spentLastSixMonths");r(this,"spentLastYear");r(this,"spentLastTwoYears");r(this,"userId");r(this,"month");this.locationCity=t.locationCity??"",this.transactionCount=t.transactionCount??0,this.spentLastWeek=t.spentLastWeek??0,this.spentLastTwoWeeks=t.spentLastTwoWeeks??0,this.spentLastMonth=t.spentLastMonth??0,this.spentLastSixMonths=t.spentLastSixMonths??0,this.spentLastYear=t.spentLastYear??0,this.spentLastTwoYears=t.spentLastTwoYears??0,this.userId=t.userId??0,this.month=t.month??0}};try{ht.displayName="LocationFinancialSubProfile",ht.__docgenInfo={description:"Represents the financial sub profile of a location.",displayName:"LocationFinancialSubProfile",props:{}}}catch{}let gt=class{constructor(t){r(this,"categories",[]);r(this,"expenses",[]);r(this,"income",[]);r(this,"locations",[]);r(this,"merchants",[]);r(this,"paymentChannels",[]);r(this,"bankAccounts",[]);r(this,"investmentAccounts",[]);r(this,"creditAccounts",[]);r(this,"mortgageLoanAccounts",[]);r(this,"studentLoanAccounts",[]);Object.assign(this,t)}};try{gt.displayName="MelodyFinancialContext",gt.__docgenInfo={description:"Represents the comprehensive financial context of a user.",displayName:"MelodyFinancialContext",props:{}}}catch{}let ft=class{constructor(t={}){r(this,"merchantName");r(this,"spentLastWeek");r(this,"spentLastTwoWeeks");r(this,"spentLastMonth");r(this,"spentLastSixMonths");r(this,"spentLastYear");r(this,"spentLastTwoYears");r(this,"userId");r(this,"month");this.merchantName=t.merchantName??"",this.spentLastWeek=t.spentLastWeek??0,this.spentLastTwoWeeks=t.spentLastTwoWeeks??0,this.spentLastMonth=t.spentLastMonth??0,this.spentLastSixMonths=t.spentLastSixMonths??0,this.spentLastYear=t.spentLastYear??0,this.spentLastTwoYears=t.spentLastTwoYears??0,this.userId=t.userId??0,this.month=t.month??0}};try{ft.displayName="MerchantMetricsFinancialSubProfile",ft.__docgenInfo={description:"Represents the financial sub profile of a merchant.",displayName:"MerchantMetricsFinancialSubProfile",props:{}}}catch{}let It=class{constructor(t={}){r(this,"month");r(this,"merchantName");r(this,"totalSpending");r(this,"userId");this.month=t.month??0,this.merchantName=t.merchantName??"",this.totalSpending=t.totalSpending??0,this.userId=t.userId??0}};try{It.displayName="MerchantMonthlyExpenditure",It.__docgenInfo={description:"Represents the monthly expenditure of a merchant.",displayName:"MerchantMonthlyExpenditure",props:{}}}catch{}let Nt=class{constructor(t={}){r(this,"month");r(this,"netBalance");r(this,"userId");this.month=t.month??0,this.netBalance=t.netBalance??0,this.userId=t.userId??0}};try{Nt.displayName="MonthlyBalance",Nt.__docgenInfo={description:"Represents the monthly balance of a user.",displayName:"MonthlyBalance",props:{}}}catch{}let Rt=class{constructor(t={}){r(this,"month");r(this,"totalSpending");r(this,"userId");this.month=t.month??0,this.totalSpending=t.totalSpending??0,this.userId=t.userId??0}};try{Rt.displayName="MonthlyExpenditure",Rt.__docgenInfo={description:"Represents the monthly expenditure of a user.",displayName:"MonthlyExpenditure",props:{}}}catch{}let bt=class{constructor(t={}){r(this,"month");r(this,"totalIncome");r(this,"userId");this.month=t.month??0,this.totalIncome=t.totalIncome??0,this.userId=t.userId??0}};try{bt.displayName="MonthlyIncome",bt.__docgenInfo={description:"Represents the monthly income of a user.",displayName:"MonthlyIncome",props:{}}}catch{}let Mt=class{constructor(t={}){r(this,"month");r(this,"netSavings");r(this,"userId");this.month=t.month??0,this.netSavings=t.netSavings??0,this.userId=t.userId??0}};try{Mt.displayName="MonthlySavings",Mt.__docgenInfo={description:"Represents the monthly savings of a user.",displayName:"MonthlySavings",props:{}}}catch{}let Tt=class{constructor(t={}){r(this,"month");r(this,"securityId");r(this,"totalQuantity");r(this,"userId");this.month=t.month??0,this.securityId=t.securityId||"",this.totalQuantity=t.totalQuantity??0,this.userId=t.userId??0}};try{Tt.displayName="MonthlyTotalQuantityBySecurityAndUser",Tt.__docgenInfo={description:"Represents the monthly total quantity of a security by user.",displayName:"MonthlyTotalQuantityBySecurityAndUser",props:{}}}catch{}let Et=class{constructor(t={}){r(this,"month");r(this,"transactionCount");r(this,"userId");this.month=t.month??0,this.transactionCount=t.transactionCount??0,this.userId=t.userId??0}};try{Et.displayName="MonthlyTransactionCount",Et.__docgenInfo={description:"Represents the monthly transaction count of a user.",displayName:"MonthlyTransactionCount",props:{}}}catch{}let Ct=class{constructor(t={}){r(this,"paymentChannel");r(this,"spentLastWeek");r(this,"spentLastTwoWeeks");r(this,"spentLastMonth");r(this,"spentLastSixMonths");r(this,"spentLastYear");r(this,"spentLastTwoYears");r(this,"userId");r(this,"month");r(this,"transactionCount");this.paymentChannel=t.paymentChannel??"",this.spentLastWeek=t.spentLastWeek??0,this.spentLastTwoWeeks=t.spentLastTwoWeeks??0,this.spentLastMonth=t.spentLastMonth??0,this.spentLastSixMonths=t.spentLastSixMonths??0,this.spentLastYear=t.spentLastYear??0,this.spentLastTwoYears=t.spentLastTwoYears??0,this.userId=t.userId??0,this.month=t.month??0,this.transactionCount=t.transactionCount??0}};try{Ct.displayName="PaymentChannelMetricsFinancialSubProfile",Ct.__docgenInfo={description:"Represents the financial sub profile of a payment channel.",displayName:"PaymentChannelMetricsFinancialSubProfile",props:{}}}catch{}let St=class{constructor(t={}){r(this,"month");r(this,"paymentChannel");r(this,"totalSpending");r(this,"userId");this.month=t.month??0,this.paymentChannel=t.paymentChannel??"",this.totalSpending=t.totalSpending??0,this.userId=t.userId??0}};try{St.displayName="PaymentChannelMonthlyExpenditure",St.__docgenInfo={description:"Represents the monthly expenditure of a payment channel.",displayName:"PaymentChannelMonthlyExpenditure",props:{}}}catch{}var Y=(e=>(e[e.RE_CURRING_FLOW_UNSPECIFIED=0]="RE_CURRING_FLOW_UNSPECIFIED",e[e.RE_CURRING_FLOW_INFLOW=1]="RE_CURRING_FLOW_INFLOW",e[e.RE_CURRING_FLOW_OUTFLOW=2]="RE_CURRING_FLOW_OUTFLOW",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(Y||{});try{Y.displayName="ReCurringFlow",Y.__docgenInfo={description:"Represents the types of recurring flows.",displayName:"ReCurringFlow",props:{}}}catch{}var z=(e=>(e[e.RE_OCCURING_TRANSACTIONS_STATUS_UNSPECIFIED=0]="RE_OCCURING_TRANSACTIONS_STATUS_UNSPECIFIED",e[e.RE_OCCURING_TRANSACTIONS_STATUS_MATURE=1]="RE_OCCURING_TRANSACTIONS_STATUS_MATURE",e[e.RE_OCCURING_TRANSACTIONS_STATUS_EARLY_DETECTION=2]="RE_OCCURING_TRANSACTIONS_STATUS_EARLY_DETECTION",e[e.RE_OCCURING_TRANSACTIONS_STATUS_TOMBSTONED=3]="RE_OCCURING_TRANSACTIONS_STATUS_TOMBSTONED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(z||{});try{z.displayName="ReOccuringTransactionsStatus",z.__docgenInfo={description:"Represents the different statuses of reoccurring transactions.",displayName:"ReOccuringTransactionsStatus",props:{}}}catch{}var $=(e=>(e[e.RE_OCCURING_TRANSACTIONS_FREQUENCY_UNSPECIFIED=0]="RE_OCCURING_TRANSACTIONS_FREQUENCY_UNSPECIFIED",e[e.RE_OCCURING_TRANSACTIONS_FREQUENCY_WEEKLY=1]="RE_OCCURING_TRANSACTIONS_FREQUENCY_WEEKLY",e[e.RE_OCCURING_TRANSACTIONS_FREQUENCY_BIWEEKLY=2]="RE_OCCURING_TRANSACTIONS_FREQUENCY_BIWEEKLY",e[e.RE_OCCURING_TRANSACTIONS_FREQUENCY_SEMI_MONTHLY=3]="RE_OCCURING_TRANSACTIONS_FREQUENCY_SEMI_MONTHLY",e[e.RE_OCCURING_TRANSACTIONS_FREQUENCY_MONTHLY=4]="RE_OCCURING_TRANSACTIONS_FREQUENCY_MONTHLY",e[e.RE_OCCURING_TRANSACTIONS_FREQUENCY_ANNUALLY=5]="RE_OCCURING_TRANSACTIONS_FREQUENCY_ANNUALLY",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))($||{});try{$.displayName="ReOccuringTransactionsFrequency",$.__docgenInfo={description:"Represents the frequency of a recurring transaction.",displayName:"ReOccuringTransactionsFrequency",props:{}}}catch{}let At=class vr{constructor(t){r(this,"accountId","");r(this,"streamId","");r(this,"categoryId","");r(this,"description","");r(this,"merchantName","");r(this,"personalFinanceCategoryPrimary","");r(this,"personalFinanceCategoryDetailed","");r(this,"firstDate","");r(this,"lastDate","");r(this,"frequency",$.RE_OCCURING_TRANSACTIONS_FREQUENCY_UNSPECIFIED);r(this,"transactionIds","");r(this,"averageAmount","");r(this,"averageAmountIsoCurrencyCode","");r(this,"lastAmount","");r(this,"lastAmountIsoCurrencyCode","");r(this,"isActive",!1);r(this,"status",z.RE_OCCURING_TRANSACTIONS_STATUS_UNSPECIFIED);r(this,"updatedTime","");r(this,"userId",0);r(this,"linkId",0);r(this,"id","");r(this,"flow",Y.UNRECOGNIZED);r(this,"sign",0);r(this,"time");r(this,"additionalProperties");t&&Object.assign(this,{...t,time:t.time?new Date(t.time):void 0})}static randomInstance(){return new vr({accountId:"account123",streamId:"stream123",categoryId:"category123",description:"Monthly subscription",merchantName:"StreamFlix",personalFinanceCategoryPrimary:"Entertainment",personalFinanceCategoryDetailed:"Streaming Services",firstDate:"2020-01-01",lastDate:"2020-12-31",frequency:$.RE_OCCURING_TRANSACTIONS_FREQUENCY_MONTHLY,transactionIds:"transaction123",averageAmount:"14.99",averageAmountIsoCurrencyCode:"USD",lastAmount:"14.99",lastAmountIsoCurrencyCode:"USD",isActive:!0,status:z.RE_OCCURING_TRANSACTIONS_STATUS_MATURE,updatedTime:"2020-01-01",userId:123,linkId:123,id:"transaction123",flow:Y.UNRECOGNIZED,sign:0,time:new Date})}};try{At.displayName="ReOccuringTransaction",At.__docgenInfo={description:"Represents a recurring financial transaction for a user.",displayName:"ReOccuringTransaction",props:{}}}catch{}let Gt=class{constructor(t){r(this,"securityId","");r(this,"totalInvestment",0);r(this,"userId",0);t&&Object.assign(this,{...t})}};try{Gt.displayName="TotalInvestmentBySecurity",Gt.__docgenInfo={description:"Represents the total investment in a particular security.",displayName:"TotalInvestmentBySecurity",props:{}}}catch{}let Pt=class{constructor(t){r(this,"month",0);r(this,"personalFinanceCategoryPrimary","");r(this,"locationCity","");r(this,"paymentChannel","");r(this,"merchantName","");r(this,"transactionCount",0);r(this,"totalAmount",0);r(this,"userId",0);Object.assign(this,t)}};try{Pt.displayName="TransactionAggregatesByMonth",Pt.__docgenInfo={description:"Represents the aggregated transactions of a user by month.",displayName:"TransactionAggregatesByMonth",props:{}}}catch{}let xt=class Ur{constructor(t){r(this,"accountId","");r(this,"amount",0);r(this,"isoCurrencyCode","");r(this,"unofficialCurrencyCode","");r(this,"categoryId","");r(this,"checkNumber","");r(this,"currentDate","");r(this,"currentDatetime","");r(this,"authorizedDate","");r(this,"authorizedDatetime","");r(this,"name","");r(this,"merchantName","");r(this,"paymentChannel","");r(this,"pending",!1);r(this,"pendingTransactionId","");r(this,"accountOwner","");r(this,"transactionId","");r(this,"transactionCode","");r(this,"id","");r(this,"userId",0);r(this,"linkId",0);r(this,"sign",0);r(this,"personalFinanceCategoryPrimary","");r(this,"personalFinanceCategoryDetailed","");r(this,"locationAddress","");r(this,"locationCity","");r(this,"locationRegion","");r(this,"locationPostalCode","");r(this,"locationCountry","");r(this,"locationLat",0);r(this,"locationLon",0);r(this,"locationStoreNumber","");r(this,"paymentMetaByOrderOf","");r(this,"paymentMetaPayee","");r(this,"paymentMetaPayer","");r(this,"paymentMetaPaymentMethod","");r(this,"paymentMetaPaymentProcessor","");r(this,"paymentMetaPpdId","");r(this,"paymentMetaReason","");r(this,"paymentMetaReferenceNumber","");r(this,"time");r(this,"additionalProperties");r(this,"categories",[]);Object.assign(this,t),this.time=t.time?new Date(t.time):void 0}static randomInstance(){return new Ur({accountId:p(10),amount:d(1,1e4),isoCurrencyCode:"USD",unofficialCurrencyCode:p(3),categoryId:p(5),checkNumber:p(8),currentDate:C(new Date(2022,0,1),new Date).slice(0,10),currentDatetime:C(new Date(2022,0,1),new Date),authorizedDate:C(new Date(2022,0,1),new Date).slice(0,10),authorizedDatetime:C(new Date(2022,0,1),new Date),name:p(20),merchantName:G(["Amazon","Pizza Hut","Duane Reades","Fresh Grocer","Walmart","Subway","Amtrak","Best Buy","Starbucks","McDonald's","Apple Store","Nike","Adidas","Home Depot","Target"]),paymentChannel:d(0,2)===0?"online":"in-store",pending:!!d(0,2),pendingTransactionId:p(10),accountOwner:p(15),transactionId:p(10),transactionCode:p(5),id:p(10),userId:d(1,1e4),linkId:d(1,1e4),sign:d(0,2)===0?-1:1,personalFinanceCategoryPrimary:G(["Food","Rent","Transportation","Entertainment","Miscellaneous"]),personalFinanceCategoryDetailed:p(15),locationAddress:p(30),locationCity:p(15),locationRegion:p(10),locationPostalCode:p(5),locationCountry:"US",locationLat:Math.random()*180-90,locationLon:Math.random()*360-180,locationStoreNumber:p(5),paymentMetaByOrderOf:p(10),paymentMetaPayee:p(10),paymentMetaPayer:p(10),paymentMetaPaymentMethod:"Card",paymentMetaPaymentProcessor:p(10),paymentMetaPpdId:p(10),paymentMetaReason:p(20),paymentMetaReferenceNumber:p(8),time:new Date(2022,0,1),categories:[p(10),p(10)]})}};try{xt.displayName="Transaction",xt.__docgenInfo={description:"Represents a financial transaction.",displayName:"Transaction",props:{}}}catch{}let vt=class{constructor(t){r(this,"time");r(this,"userId",0);r(this,"monthlyIncome",0);r(this,"monthlyExpenses",0);r(this,"transactionDiversity",0);r(this,"debtToIncomeRatio",0);r(this,"overdraftFrequency",0);Object.assign(this,{...t,time:t.time?new Date(t.time):void 0})}};try{vt.displayName="UserFinancialHealthMetricsTable",vt.__docgenInfo={description:"Represents the financial health metrics of a user.",displayName:"UserFinancialHealthMetricsTable",props:{}}}catch{}try{Pocket.displayName="Pocket",Pocket.__docgenInfo={description:"Pocket represents the Pocket entity.",displayName:"Pocket",props:{}}}catch{}try{BankAccountStatus.displayName="BankAccountStatus",BankAccountStatus.__docgenInfo={description:"BankAccountStatus represents the status of a bank account.",displayName:"BankAccountStatus",props:{}}}catch{}try{BankAccount.displayName="BankAccount",BankAccount.__docgenInfo={description:"Represents a bank account tied to a user.",displayName:"BankAccount",props:{}}}catch{}try{FinancialProfile.displayName="FinancialProfile",FinancialProfile.__docgenInfo={description:"Represents a user's financial profile.",displayName:"FinancialProfile",props:{}}}catch{}try{LinkStatus.displayName="LinkStatus",LinkStatus.__docgenInfo={description:"Enum representing the status of a link.",displayName:"LinkStatus",props:{}}}catch{}try{LinkType.displayName="LinkType",LinkType.__docgenInfo={description:"Enum representing the type of a link.",displayName:"LinkType",props:{}}}catch{}try{PlaidLink.displayName="PlaidLink",PlaidLink.__docgenInfo={description:"Represents linking information related to Plaid.",displayName:"PlaidLink",props:{}}}catch{}try{PlaidSync.displayName="PlaidSync",PlaidSync.__docgenInfo={description:"Represents synchronization information related to Plaid.",displayName:"PlaidSync",props:{}}}catch{}try{StripeSubscriptionStatus.displayName="StripeSubscriptionStatus",StripeSubscriptionStatus.__docgenInfo={description:"Enum representing the status of a Stripe subscription.",displayName:"StripeSubscriptionStatus",props:{}}}catch{}try{StripeSubscription.displayName="StripeSubscription",StripeSubscription.__docgenInfo={description:"Represents a subscription managed through the Stripe payment platform.",displayName:"StripeSubscription",props:{}}}catch{}try{Token.displayName="Token",Token.__docgenInfo={description:"Token object holding an access token used to make API requests related to a specific Item.",displayName:"Token",props:{}}}catch{}try{AccountBalanceHistory.displayName="AccountBalanceHistory",AccountBalanceHistory.__docgenInfo={description:"Represents the balance history of an account.",displayName:"AccountBalanceHistory",props:{}}}catch{}try{CategoryMetricsFinancialSubProfile.displayName="CategoryMetricsFinancialSubProfile",CategoryMetricsFinancialSubProfile.__docgenInfo={description:"Represents the financial sub-profile of a category.",displayName:"CategoryMetricsFinancialSubProfile",props:{}}}catch{}try{CategoryMonthlyExpenditure.displayName="CategoryMonthlyExpenditure",CategoryMonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a category.",displayName:"CategoryMonthlyExpenditure",props:{}}}catch{}try{CategoryMonthlyIncome.displayName="CategoryMonthlyIncome",CategoryMonthlyIncome.__docgenInfo={description:"Represents the monthly income of a category.",displayName:"CategoryMonthlyIncome",props:{}}}catch{}try{CategoryMonthlyTransactionCount.displayName="CategoryMonthlyTransactionCount",CategoryMonthlyTransactionCount.__docgenInfo={description:"Represents the monthly transaction count of a category.",displayName:"CategoryMonthlyTransactionCount",props:{}}}catch{}try{DebtToIncomeRatio.displayName="DebtToIncomeRatio",DebtToIncomeRatio.__docgenInfo={description:"Represents the debt to income ratio of a user.",displayName:"DebtToIncomeRatio",props:{}}}catch{}try{ExpenseMetricsFinancialSubProfileMetrics.displayName="ExpenseMetricsFinancialSubProfileMetrics",ExpenseMetricsFinancialSubProfileMetrics.__docgenInfo={description:"Represents the financial sub-profile metrics related to a user's expenses.",displayName:"ExpenseMetricsFinancialSubProfileMetrics",props:{}}}catch{}try{ExpenseMetrics.displayName="ExpenseMetrics",ExpenseMetrics.__docgenInfo={description:"Represents the expense metrics related to a user's personal finance.",displayName:"ExpenseMetrics",props:{}}}catch{}try{FinancialProfileMetrics.displayName="FinancialProfileMetrics",FinancialProfileMetrics.__docgenInfo={description:"Represents the comprehensive financial profile of a user.",displayName:"FinancialProfileMetrics",props:{}}}catch{}try{IncomeExpenseRatio.displayName="IncomeExpenseRatio",IncomeExpenseRatio.__docgenInfo={description:"Represents the income-expense ratio of a user for a particular month.",displayName:"IncomeExpenseRatio",props:{}}}catch{}try{IncomeMetricsFinancialSubProfile.displayName="IncomeMetricsFinancialSubProfile",IncomeMetricsFinancialSubProfile.__docgenInfo={description:"Represents the income metrics for a user's financial sub-profile.",displayName:"IncomeMetricsFinancialSubProfile",props:{}}}catch{}try{IncomeMetrics.displayName="IncomeMetrics",IncomeMetrics.__docgenInfo={description:"Represents the income metrics for a user.",displayName:"IncomeMetrics",props:{}}}catch{}try{InvestmentTransaction.displayName="InvestmentTransaction",InvestmentTransaction.__docgenInfo={description:"Represents an investment transaction.",displayName:"InvestmentTransaction",props:{}}}catch{}try{LocationFinancialSubProfile.displayName="LocationFinancialSubProfile",LocationFinancialSubProfile.__docgenInfo={description:"Represents the financial sub profile of a location.",displayName:"LocationFinancialSubProfile",props:{}}}catch{}try{MelodyFinancialContext.displayName="MelodyFinancialContext",MelodyFinancialContext.__docgenInfo={description:"Represents the comprehensive financial context of a user.",displayName:"MelodyFinancialContext",props:{}}}catch{}try{MerchantMetricsFinancialSubProfile.displayName="MerchantMetricsFinancialSubProfile",MerchantMetricsFinancialSubProfile.__docgenInfo={description:"Represents the financial sub profile of a merchant.",displayName:"MerchantMetricsFinancialSubProfile",props:{}}}catch{}try{MerchantMonthlyExpenditure.displayName="MerchantMonthlyExpenditure",MerchantMonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a merchant.",displayName:"MerchantMonthlyExpenditure",props:{}}}catch{}try{MonthlyBalance.displayName="MonthlyBalance",MonthlyBalance.__docgenInfo={description:"Represents the monthly balance of a user.",displayName:"MonthlyBalance",props:{}}}catch{}try{MonthlyExpenditure.displayName="MonthlyExpenditure",MonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a user.",displayName:"MonthlyExpenditure",props:{}}}catch{}try{MonthlyIncome.displayName="MonthlyIncome",MonthlyIncome.__docgenInfo={description:"Represents the monthly income of a user.",displayName:"MonthlyIncome",props:{}}}catch{}try{MonthlySavings.displayName="MonthlySavings",MonthlySavings.__docgenInfo={description:"Represents the monthly savings of a user.",displayName:"MonthlySavings",props:{}}}catch{}try{MonthlyTotalQuantityBySecurityAndUser.displayName="MonthlyTotalQuantityBySecurityAndUser",MonthlyTotalQuantityBySecurityAndUser.__docgenInfo={description:"Represents the monthly total quantity of a security by user.",displayName:"MonthlyTotalQuantityBySecurityAndUser",props:{}}}catch{}try{MonthlyTransactionCount.displayName="MonthlyTransactionCount",MonthlyTransactionCount.__docgenInfo={description:"Represents the monthly transaction count of a user.",displayName:"MonthlyTransactionCount",props:{}}}catch{}try{PaymentChannelMetricsFinancialSubProfile.displayName="PaymentChannelMetricsFinancialSubProfile",PaymentChannelMetricsFinancialSubProfile.__docgenInfo={description:"Represents the financial sub profile of a payment channel.",displayName:"PaymentChannelMetricsFinancialSubProfile",props:{}}}catch{}try{PaymentChannelMonthlyExpenditure.displayName="PaymentChannelMonthlyExpenditure",PaymentChannelMonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a payment channel.",displayName:"PaymentChannelMonthlyExpenditure",props:{}}}catch{}try{ReCurringFlow.displayName="ReCurringFlow",ReCurringFlow.__docgenInfo={description:"Represents the types of recurring flows.",displayName:"ReCurringFlow",props:{}}}catch{}try{ReOccuringTransaction.displayName="ReOccuringTransaction",ReOccuringTransaction.__docgenInfo={description:"Represents a recurring financial transaction for a user.",displayName:"ReOccuringTransaction",props:{}}}catch{}try{ReOccuringTransactionsFrequency.displayName="ReOccuringTransactionsFrequency",ReOccuringTransactionsFrequency.__docgenInfo={description:"Represents the frequency of a recurring transaction.",displayName:"ReOccuringTransactionsFrequency",props:{}}}catch{}try{ReOccuringTransactionsStatus.displayName="ReOccuringTransactionsStatus",ReOccuringTransactionsStatus.__docgenInfo={description:"Represents the different statuses of reoccurring transactions.",displayName:"ReOccuringTransactionsStatus",props:{}}}catch{}try{TotalInvestmentBySecurity.displayName="TotalInvestmentBySecurity",TotalInvestmentBySecurity.__docgenInfo={description:"Represents the total investment in a particular security.",displayName:"TotalInvestmentBySecurity",props:{}}}catch{}try{TransactionAggregatesByMonth.displayName="TransactionAggregatesByMonth",TransactionAggregatesByMonth.__docgenInfo={description:"Represents the aggregated transactions of a user by month.",displayName:"TransactionAggregatesByMonth",props:{}}}catch{}try{Transaction.displayName="Transaction",Transaction.__docgenInfo={description:"Represents a financial transaction.",displayName:"Transaction",props:{}}}catch{}try{UserFinancialHealthMetricsTable.displayName="UserFinancialHealthMetricsTable",UserFinancialHealthMetricsTable.__docgenInfo={description:"Represents the financial health metrics of a user.",displayName:"UserFinancialHealthMetricsTable",props:{}}}catch{}let ee=class{constructor(t){r(this,"id",0);r(this,"tags",[]);r(this,"name","");r(this,"private",!1);r(this,"followers",0);r(this,"following",0);r(this,"notificationFeedTimelineId","");r(this,"personalFeedTimelineId","");r(this,"newsFeedTimelineId","");r(this,"profileImageUrl","");r(this,"bookmarks");r(this,"algoliaId","");t&&Object.assign(this,{...t})}};try{ee.displayName="SocialUserProfile",ee.__docgenInfo={description:`Represents a user's social profile on the platform.

The SocialUserProfile captures various details about a user's presence and activity in the social aspect of the platform. This includes details such as interests (tags), followers and following counts, profile image, and timelines.`,displayName:"SocialUserProfile",props:{}}}catch{}var S=(e=>(e[e.PUBLICATION_TYPE_UNSPECIFIED=0]="PUBLICATION_TYPE_UNSPECIFIED",e[e.PUBLICATION_TYPE_MAGAZINE=1]="PUBLICATION_TYPE_MAGAZINE",e[e.PUBLICATION_TYPE_PLATFORM=2]="PUBLICATION_TYPE_PLATFORM",e[e.PUBLICATION_TYPE_BLOG=3]="PUBLICATION_TYPE_BLOG",e[e.PUBLICATION_TYPE_SUBJECTS=4]="PUBLICATION_TYPE_SUBJECTS",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED",e))(S||{});try{S.PUBLICATION_TYPE_MAGAZINE.displayName="PublicationType.PUBLICATION_TYPE_MAGAZINE",S.PUBLICATION_TYPE_MAGAZINE.__docgenInfo={description:"PUBLICATION_TYPE_MAGAZINE - a publication with a fixed publication staff that posts stories around a specific topic",displayName:"PublicationType.PUBLICATION_TYPE_MAGAZINE",props:{}}}catch{}try{S.PUBLICATION_TYPE_PLATFORM.displayName="PublicationType.PUBLICATION_TYPE_PLATFORM",S.PUBLICATION_TYPE_PLATFORM.__docgenInfo={description:"PUBLICATION_TYPE_PLATFORM - a publication that accepts stories published around simfiny",displayName:"PublicationType.PUBLICATION_TYPE_PLATFORM",props:{}}}catch{}try{S.PUBLICATION_TYPE_BLOG.displayName="PublicationType.PUBLICATION_TYPE_BLOG",S.PUBLICATION_TYPE_BLOG.__docgenInfo={description:"PUBLICATION_TYPE_BLOG - A community blog, a publication that is created specifically to share subset (community) news",displayName:"PublicationType.PUBLICATION_TYPE_BLOG",props:{}}}catch{}try{S.PUBLICATION_TYPE_SUBJECTS.displayName="PublicationType.PUBLICATION_TYPE_SUBJECTS",S.PUBLICATION_TYPE_SUBJECTS.__docgenInfo={description:"PUBLICATION_TYPE_SUBJECTS - A collection of individual stories by a set of authors that are part of a whole",displayName:"PublicationType.PUBLICATION_TYPE_SUBJECTS",props:{}}}catch{}let Ut=class{constructor(t){r(this,"id",0);r(this,"postIds",[]);r(this,"admin");r(this,"adminSimfinyPlatformUserId",0);r(this,"tags",[]);r(this,"editors",[]);r(this,"subjects",[]);r(this,"description","");r(this,"createdAt","");r(this,"type",S.PUBLICATION_TYPE_UNSPECIFIED);r(this,"publicationName","");var n;t&&Object.assign(this,{...t,admin:(t==null?void 0:t.admin)!==void 0?new ee(t.admin):null,editors:(n=t==null?void 0:t.editors)==null?void 0:n.map(o=>new ee(o))})}};try{Ut.displayName="Publication",Ut.__docgenInfo={description:`A Publication is a collections of stories based around a common theme. Anyone can create them
As the creator of a publication, you're an editor by default, which means you have the ability to
a) add writers to your publication,
b) edit and publish the stories that are submitted by your writers, and
c) review the metrics for all of the stories that are part of your publication.
As the publication's creator, you'll also have the ability
to appoint new editors (so they can do all of that stuff I just mentioned)

Use Case
- An online magazine, a publication with a fixed publication staff that posts stories around a specific topic
- A community publication, a publication that accepts stories published around Medium
- A company blog, a publication that is created specifically to share company news
- A collection of individual stories by a single author that are parts of a larger whole

Publications can be thought of as a collection of posts or articles, curated and managed by one or more administrators and editors.`,displayName:"Publication",props:{}}}catch{}let Ot=class{constructor(t){r(this,"followers","");r(this,"following","");r(this,"id","");r(this,"name","");r(this,"tags",[]);r(this,"private",!1);r(this,"profileImageUrl","");r(this,"userProfileid","");r(this,"bookmarks");t&&Object.assign(this,{...t,tags:(t==null?void 0:t.tags)||[]})}isPrivate(){return this.private}shouldShowContent(){return!this.isPrivate()}getProfileImageUrl(){return this.profileImageUrl}getTags(){return this.tags}getTagCount(){return this.tags.length}getTagNames(){return this.tags.map(t=>t.getName())}getFollowerCount(){return Number(this.followers)}getfollowingCount(){return Number(this.following)}};try{Ot.displayName="SocialAccount",Ot.__docgenInfo={description:"Represents a social account in the platform.\n\nA `SocialAccount` is a representation of a user's social presence on the platform. It captures details about followers, following, tags (interests), profile imagery, and more.",displayName:"SocialAccount",props:{}}}catch{}try{Publication.displayName="Publication",Publication.__docgenInfo={description:`A Publication is a collections of stories based around a common theme. Anyone can create them
As the creator of a publication, you're an editor by default, which means you have the ability to
a) add writers to your publication,
b) edit and publish the stories that are submitted by your writers, and
c) review the metrics for all of the stories that are part of your publication.
As the publication's creator, you'll also have the ability
to appoint new editors (so they can do all of that stuff I just mentioned)

Use Case
- An online magazine, a publication with a fixed publication staff that posts stories around a specific topic
- A community publication, a publication that accepts stories published around Medium
- A company blog, a publication that is created specifically to share company news
- A collection of individual stories by a single author that are parts of a larger whole

Publications can be thought of as a collection of posts or articles, curated and managed by one or more administrators and editors.`,displayName:"Publication",props:{}}}catch{}try{SocialUserProfile.displayName="SocialUserProfile",SocialUserProfile.__docgenInfo={description:`Represents a user's social profile on the platform.

The SocialUserProfile captures various details about a user's presence and activity in the social aspect of the platform. This includes details such as interests (tags), followers and following counts, profile image, and timelines.`,displayName:"SocialUserProfile",props:{}}}catch{}try{SocialAccount.displayName="SocialAccount",SocialAccount.__docgenInfo={description:"Represents a social account in the platform.\n\nA `SocialAccount` is a representation of a user's social presence on the platform. It captures details about followers, following, tags (interests), profile imagery, and more.",displayName:"SocialAccount",props:{}}}catch{}let te=class{constructor(t){r(this,"address",new ie);r(this,"bio","");r(this,"email","");r(this,"firstname");r(this,"lastname");r(this,"username","");r(this,"headline");r(this,"phoneNumber");r(this,"userAccountID");r(this,"userAuthnAccountID");r(this,"id","");r(this,"tags",[]);r(this,"created_at");r(this,"isEmailVerified");r(this,"isPrivate");r(this,"verifiedAt");r(this,"isActive");r(this,"authnAccountId");r(this,"createdAt");var n;t&&Object.assign(this,{...t,tags:(n=t==null?void 0:t.tags)==null?void 0:n.map(o=>new ce(o)),id:(t==null?void 0:t.userAccountID)!==void 0?t==null?void 0:t.userAccountID:t==null?void 0:t.id,authnAccountId:(t==null?void 0:t.userAuthnAccountID)!==void 0?t==null?void 0:t.userAuthnAccountID:t==null?void 0:t.authnAccountId})}getUserName(){return this.username}getTags(){return this.tags}getTagCount(){return this.tags.length}isAccountVerified(){return this.isEmailVerified&&this.isActive}shouldShowContent(){return this.isActive&&!this.isPrivate}getBio(){return this.bio}getHeadline(){return this.headline}getID(){return this.id}};try{te.displayName="UserAccount",te.__docgenInfo={description:`Represents a user's account in simfiny's backend.

The \`UserAccount\` class is central to operations within simfiny's backend. An instance of this class captures a user's details and
metadata such as their address, contact information, profile data, account verification status, and more.`,displayName:"UserAccount",props:{}}}catch{}try{UserAccount.displayName="UserAccount",UserAccount.__docgenInfo={description:`Represents a user's account in simfiny's backend.

The \`UserAccount\` class is central to operations within simfiny's backend. An instance of this class captures a user's details and
metadata such as their address, contact information, profile data, account verification status, and more.`,displayName:"UserAccount",props:{}}}catch{}let Ft=class{constructor(t){r(this,"plaidAccountId");r(this,"pageNumber");r(this,"pageSize");this.plaidAccountId=t.plaidAccountId||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}};try{Ft.displayName="GetAccountBalanceHistoryRequest",Ft.__docgenInfo={description:"Represents the request for getting account balance history.",displayName:"GetAccountBalanceHistoryRequest",props:{}}}catch{}let Bt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"personalFinanceCategoryPrimary");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||0,this.personalFinanceCategoryPrimary=t.personalFinanceCategoryPrimary||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}};try{Bt.displayName="GetCategoryMonthlyTransactionCountRequest",Bt.__docgenInfo={description:"Represents the request for getting category monthly transaction count.",displayName:"GetCategoryMonthlyTransactionCountRequest",props:{}}}catch{}let wt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||void 0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},qt=class extends f{constructor(n){super();r(this,"debtToIncomeRatios",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{wt.displayName="GetDebtToIncomeRatioRequest",wt.__docgenInfo={description:"Represents the request for getting debt to income ratio.",displayName:"GetDebtToIncomeRatioRequest",props:{}}}catch{}try{qt.displayName="GetDebtToIncomeRatioResponse",qt.__docgenInfo={description:"Represents the response for getting debt to income ratio.",displayName:"GetDebtToIncomeRatioResponse",props:{}}}catch{}let Lt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"personalFinanceCategoryPrimary");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||void 0,this.personalFinanceCategoryPrimary=t.personalFinanceCategoryPrimary||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},kt=class extends f{constructor(n){super();r(this,"expenseMetrics",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{Lt.displayName="GetExpenseMetricsRequest",Lt.__docgenInfo={description:"Represents the request for getting expense metrics.",displayName:"GetExpenseMetricsRequest",props:{}}}catch{}try{kt.displayName="GetExpenseMetricsResponse",kt.__docgenInfo={description:"Represents the response for getting expense metrics.",displayName:"GetExpenseMetricsResponse",props:{}}}catch{}let Dt=class extends f{constructor(n){super();r(this,"melodyFinancialContext");n&&Object.assign(this,{...n})}},Yt=class{constructor(t){r(this,"userId");this.userId=t}};try{Dt.displayName="GetMelodyFinancialContextResponse",Dt.__docgenInfo={description:"Represents the response for getting melody financial context.",displayName:"GetMelodyFinancialContextResponse",props:{}}}catch{}try{Yt.displayName="GetMelodyFinancialContextRequest",Yt.__docgenInfo={description:"Represents the request for getting Melody financial context.",displayName:"GetMelodyFinancialContextRequest",props:{}}}catch{}let zt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||void 0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},$t=class extends f{constructor(n){super();r(this,"financialProfiles",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{zt.displayName="GetFinancialProfileRequest",zt.__docgenInfo={description:"Represents the request for getting financial profile.",displayName:"GetFinancialProfileRequest",props:{}}}catch{}try{$t.displayName="GetFinancialProfileResponse",$t.__docgenInfo={description:"Represents the response for getting financial profile.",displayName:"GetFinancialProfileResponse",props:{}}}catch{}let jt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||void 0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},Ht=class extends f{constructor(n){super();r(this,"incomeExpenseRatios",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{jt.displayName="GetIncomeExpenseRatioRequest",jt.__docgenInfo={description:"Represents the request for getting income expense ratio.",displayName:"GetIncomeExpenseRatioRequest",props:{}}}catch{}try{Ht.displayName="GetIncomeExpenseRatioResponse",Ht.__docgenInfo={description:"Represents the response for getting income expense ratio.",displayName:"GetIncomeExpenseRatioResponse",props:{}}}catch{}let Wt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"personalFinanceCategoryPrimary");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||void 0,this.personalFinanceCategoryPrimary=t.personalFinanceCategoryPrimary||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},Kt=class extends f{constructor(n){super();r(this,"incomeMetrics",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{Wt.displayName="GetIncomeMetricsRequest",Wt.__docgenInfo={description:"Represents the request for getting income metrics.",displayName:"GetIncomeMetricsRequest",props:{}}}catch{}try{Kt.displayName="GetIncomeMetricsResponse",Kt.__docgenInfo={description:"Represents the response for getting income metrics.",displayName:"GetIncomeMetricsResponse",props:{}}}catch{}let Qt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"merchantName");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||void 0,this.merchantName=t.merchantName||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},Zt=class extends f{constructor(n){super();r(this,"merchantMonthlyExpenditures",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{Qt.displayName="GetMerchantMonthlyExpenditureRequest",Qt.__docgenInfo={description:"Represents the request for getting merchant monthly expenditure.",displayName:"GetMerchantMonthlyExpenditureRequest",props:{}}}catch{}try{Zt.displayName="GetMerchantMonthlyExpenditureResponse",Zt.__docgenInfo={description:"Represents the response for getting merchant monthly expenditure.",displayName:"GetMerchantMonthlyExpenditureResponse",props:{}}}catch{}let Vt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||void 0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},Jt=class extends f{constructor(n){super();r(this,"monthlyBalances",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{Vt.displayName="GetMonthlyBalanceRequest",Vt.__docgenInfo={description:"Represents the request for getting monthly balance.",displayName:"GetMonthlyBalanceRequest",props:{}}}catch{}try{Jt.displayName="GetMonthlyBalanceResponse",Jt.__docgenInfo={description:"Represents the response for getting monthly balance.",displayName:"GetMonthlyBalanceResponse",props:{}}}catch{}let Xt=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},er=class extends f{constructor(n){super();r(this,"monthlyExpenditures",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{Xt.displayName="GetMonthlyExpenditureRequest",Xt.__docgenInfo={description:"Represents the request for getting monthly expenditure.",displayName:"GetMonthlyExpenditureRequest",props:{}}}catch{}try{er.displayName="GetMonthlyExpenditureResponse",er.__docgenInfo={description:"Represents the response for getting monthly expenditure.",displayName:"GetMonthlyExpenditureResponse",props:{}}}catch{}let tr=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},rr=class extends f{constructor(n){super();r(this,"monthlyIncomes",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{tr.displayName="GetMonthlyIncomeRequest",tr.__docgenInfo={description:"Represents the request for getting monthly income.",displayName:"GetMonthlyIncomeRequest",props:{}}}catch{}try{rr.displayName="GetMonthlyIncomeResponse",rr.__docgenInfo={description:"Represents the response for getting monthly income.",displayName:"GetMonthlyIncomeResponse",props:{}}}catch{}let nr=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},or=class extends f{constructor(n){super();r(this,"monthlySavings",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{nr.displayName="GetMonthlySavingsRequest",nr.__docgenInfo={description:"Represents the request for getting monthly savings.",displayName:"GetMonthlySavingsRequest",props:{}}}catch{}try{or.displayName="GetMonthlySavingsResponse",or.__docgenInfo={description:"Represents the response for getting monthly savings.",displayName:"GetMonthlySavingsResponse",props:{}}}catch{}let sr=class{constructor(t){r(this,"userId");r(this,"month");r(this,"securityId");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||0,this.securityId=t.securityId||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},ar=class extends f{constructor(n){super();r(this,"monthlyTotalQuantityBySecurityAndUser",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{sr.displayName="GetMonthlyTotalQuantityBySecurityAndUserRequest",sr.__docgenInfo={description:"Represents the request for getting monthly total quantity by security and user.",displayName:"GetMonthlyTotalQuantityBySecurityAndUserRequest",props:{}}}catch{}try{ar.displayName="GetMonthlyTotalQuantityBySecurityAndUserResponse",ar.__docgenInfo={description:"Represents the response for getting monthly total quantity by security and user.",displayName:"GetMonthlyTotalQuantityBySecurityAndUserResponse",props:{}}}catch{}let ir=class{constructor(t){r(this,"userId");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},cr=class extends f{constructor(n){super();r(this,"monthlyTransactionCounts",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{ir.displayName="GetMonthlyTransactionCountRequest",ir.__docgenInfo={description:"Represents the request for getting monthly transaction count.",displayName:"GetMonthlyTransactionCountRequest",props:{}}}catch{}try{cr.displayName="GetMonthlyTransactionCountResponse",cr.__docgenInfo={description:"Represents the response for getting monthly transaction count.",displayName:"GetMonthlyTransactionCountResponse",props:{}}}catch{}let pr=class{constructor(t){r(this,"userId");r(this,"month");r(this,"paymentChannel");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.month=t.month||0,this.paymentChannel=t.paymentChannel||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},lr=class extends f{constructor(n){super();r(this,"paymentChannelMonthlyExpenditure",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{pr.displayName="GetPaymentChannelMonthlyExpenditureRequest",pr.__docgenInfo={description:"Represents the request for getting payment channel monthly expenditure.",displayName:"GetPaymentChannelMonthlyExpenditureRequest",props:{}}}catch{}try{lr.displayName="GetPaymentChannelMonthlyExpenditureResponse",lr.__docgenInfo={description:"Represents the response for getting payment channel monthly expenditure.",displayName:"GetPaymentChannelMonthlyExpenditureResponse",props:{}}}catch{}let dr=class{constructor(t){r(this,"userId");r(this,"securityId");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.securityId=t.securityId||"",this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}},_r=class extends f{constructor(n){super();r(this,"totalInvestmentBySecurity",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}};try{dr.displayName="GetTotalInvestmentBySecurityRequest",dr.__docgenInfo={description:"Represents the request for getting total investment by security.",displayName:"GetTotalInvestmentBySecurityRequest",props:{}}}catch{}try{_r.displayName="GetTotalInvestmentBySecurityResponse",_r.__docgenInfo={description:"Represents the response for getting total investment by security.",displayName:"GetTotalInvestmentBySecurityResponse",props:{}}}catch{}let yr=class extends f{constructor(n){super();r(this,"transactions",[]);r(this,"nextPageNumber",0);n&&Object.assign(this,{...n})}},ur=class{constructor(t){r(this,"userId",0);r(this,"plaidAccountId","");r(this,"pageNumber",0);r(this,"pageSize",0);t&&Object.assign(this,{...t})}};try{yr.displayName="GetTransactionsForBankAccountResponse",yr.__docgenInfo={description:"Represents the response for getting transactions for a bank account.",displayName:"GetTransactionsForBankAccountResponse",props:{}}}catch{}try{ur.displayName="GetTransactionsForBankAccountRequest",ur.__docgenInfo={description:"Class representing a request to get transactions for a bank account.",displayName:"GetTransactionsForBankAccountRequest",props:{}}}catch{}let mr=class{constructor(t){r(this,"userId",0);r(this,"pageNumber",0);r(this,"pageSize",0);t&&Object.assign(this,{...t})}};try{mr.displayName="GetTransactionsRequest",mr.__docgenInfo={description:`GetTransactionsRequest class

Represents a request for getting transactions.`,displayName:"GetTransactionsRequest",props:{}}}catch{}let hr=class extends f{constructor(n){super();r(this,"accountBalanceHistory",[]);n&&Object.assign(this,{...n})}},gr=class{constructor(t){r(this,"userId");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}};try{hr.displayName="GetUserAccountBalanceHistoryResponse",hr.__docgenInfo={description:"Represents the response for getting user account balance history.",displayName:"GetUserAccountBalanceHistoryResponse",props:{}}}catch{}try{gr.displayName="GetUserAccountBalanceHistoryRequest",gr.__docgenInfo={description:"Represents the request for getting user account balance history.",displayName:"GetUserAccountBalanceHistoryRequest",props:{}}}catch{}let fr=class{constructor(t){r(this,"userId");r(this,"personalFinanceCategoryPrimary");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.personalFinanceCategoryPrimary=t.personalFinanceCategoryPrimary||"",this.month=t.month||0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}};try{fr.displayName="GetUserCategoryMonthlyExpenditureRequest",fr.__docgenInfo={description:"Represents the request for getting user category monthly expenditure.",displayName:"GetUserCategoryMonthlyExpenditureRequest",props:{}}}catch{}let Ir=class{constructor(t){r(this,"userId");r(this,"personalFinanceCategoryPrimary");r(this,"month");r(this,"pageNumber");r(this,"pageSize");this.userId=t.userId||0,this.personalFinanceCategoryPrimary=t.personalFinanceCategoryPrimary||"",this.month=t.month||0,this.pageNumber=t.pageNumber||1,this.pageSize=t.pageSize||10}};try{Ir.displayName="GetUserCategoryMonthlyIncomeRequest",Ir.__docgenInfo={description:"Represents the request for getting user category monthly income.",displayName:"GetUserCategoryMonthlyIncomeRequest",props:{}}}catch{}let Nr=class{constructor(t){r(this,"token");r(this,"code");r(this,"err");this.token=t.token||"",this.code=t.code||0,this.err=t.err||""}};try{Nr.displayName="ResetPasswordResponse",Nr.__docgenInfo={description:"Represents a response containing a token.",displayName:"ResetPasswordResponse",props:{}}}catch{}let Rr=class{constructor(t){r(this,"account",new te);t&&Object.assign(this,{...t,account:new te(t==null?void 0:t.account)})}isValid(){return this.account!==void 0}};try{Rr.displayName="UpdateUserAccountRequest",Rr.__docgenInfo={description:`UpdateUserRequest: Represents the request object invoked against the user
service to update a given user account`,displayName:"UpdateUserAccountRequest",props:{}}}catch{}try{GetAccountBalanceHistoryRequest.displayName="GetAccountBalanceHistoryRequest",GetAccountBalanceHistoryRequest.__docgenInfo={description:"Represents the request for getting account balance history.",displayName:"GetAccountBalanceHistoryRequest",props:{}}}catch{}try{GetCategoryMonthlyTransactionCountRequest.displayName="GetCategoryMonthlyTransactionCountRequest",GetCategoryMonthlyTransactionCountRequest.__docgenInfo={description:"Represents the request for getting category monthly transaction count.",displayName:"GetCategoryMonthlyTransactionCountRequest",props:{}}}catch{}try{GetDebtToIncomeRatioRequest.displayName="GetDebtToIncomeRatioRequest",GetDebtToIncomeRatioRequest.__docgenInfo={description:"Represents the request for getting debt to income ratio.",displayName:"GetDebtToIncomeRatioRequest",props:{}}}catch{}try{GetDebtToIncomeRatioResponse.displayName="GetDebtToIncomeRatioResponse",GetDebtToIncomeRatioResponse.__docgenInfo={description:"Represents the response for getting debt to income ratio.",displayName:"GetDebtToIncomeRatioResponse",props:{}}}catch{}try{GetExpenseMetricsRequest.displayName="GetExpenseMetricsRequest",GetExpenseMetricsRequest.__docgenInfo={description:"Represents the request for getting expense metrics.",displayName:"GetExpenseMetricsRequest",props:{}}}catch{}try{GetExpenseMetricsResponse.displayName="GetExpenseMetricsResponse",GetExpenseMetricsResponse.__docgenInfo={description:"Represents the response for getting expense metrics.",displayName:"GetExpenseMetricsResponse",props:{}}}catch{}try{GetMelodyFinancialContextResponse.displayName="GetMelodyFinancialContextResponse",GetMelodyFinancialContextResponse.__docgenInfo={description:"Represents the response for getting melody financial context.",displayName:"GetMelodyFinancialContextResponse",props:{}}}catch{}try{GetMelodyFinancialContextRequest.displayName="GetMelodyFinancialContextRequest",GetMelodyFinancialContextRequest.__docgenInfo={description:"Represents the request for getting Melody financial context.",displayName:"GetMelodyFinancialContextRequest",props:{}}}catch{}try{GetFinancialProfileRequest.displayName="GetFinancialProfileRequest",GetFinancialProfileRequest.__docgenInfo={description:"Represents the request for getting financial profile.",displayName:"GetFinancialProfileRequest",props:{}}}catch{}try{GetFinancialProfileResponse.displayName="GetFinancialProfileResponse",GetFinancialProfileResponse.__docgenInfo={description:"Represents the response for getting financial profile.",displayName:"GetFinancialProfileResponse",props:{}}}catch{}try{GetIncomeExpenseRatioRequest.displayName="GetIncomeExpenseRatioRequest",GetIncomeExpenseRatioRequest.__docgenInfo={description:"Represents the request for getting income expense ratio.",displayName:"GetIncomeExpenseRatioRequest",props:{}}}catch{}try{GetIncomeExpenseRatioResponse.displayName="GetIncomeExpenseRatioResponse",GetIncomeExpenseRatioResponse.__docgenInfo={description:"Represents the response for getting income expense ratio.",displayName:"GetIncomeExpenseRatioResponse",props:{}}}catch{}try{GetIncomeMetricsRequest.displayName="GetIncomeMetricsRequest",GetIncomeMetricsRequest.__docgenInfo={description:"Represents the request for getting income metrics.",displayName:"GetIncomeMetricsRequest",props:{}}}catch{}try{GetIncomeMetricsResponse.displayName="GetIncomeMetricsResponse",GetIncomeMetricsResponse.__docgenInfo={description:"Represents the response for getting income metrics.",displayName:"GetIncomeMetricsResponse",props:{}}}catch{}try{GetMerchantMonthlyExpenditureRequest.displayName="GetMerchantMonthlyExpenditureRequest",GetMerchantMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting merchant monthly expenditure.",displayName:"GetMerchantMonthlyExpenditureRequest",props:{}}}catch{}try{GetMerchantMonthlyExpenditureResponse.displayName="GetMerchantMonthlyExpenditureResponse",GetMerchantMonthlyExpenditureResponse.__docgenInfo={description:"Represents the response for getting merchant monthly expenditure.",displayName:"GetMerchantMonthlyExpenditureResponse",props:{}}}catch{}try{GetMonthlyBalanceRequest.displayName="GetMonthlyBalanceRequest",GetMonthlyBalanceRequest.__docgenInfo={description:"Represents the request for getting monthly balance.",displayName:"GetMonthlyBalanceRequest",props:{}}}catch{}try{GetMonthlyBalanceResponse.displayName="GetMonthlyBalanceResponse",GetMonthlyBalanceResponse.__docgenInfo={description:"Represents the response for getting monthly balance.",displayName:"GetMonthlyBalanceResponse",props:{}}}catch{}try{GetMonthlyExpenditureRequest.displayName="GetMonthlyExpenditureRequest",GetMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting monthly expenditure.",displayName:"GetMonthlyExpenditureRequest",props:{}}}catch{}try{GetMonthlyExpenditureResponse.displayName="GetMonthlyExpenditureResponse",GetMonthlyExpenditureResponse.__docgenInfo={description:"Represents the response for getting monthly expenditure.",displayName:"GetMonthlyExpenditureResponse",props:{}}}catch{}try{GetMonthlyIncomeRequest.displayName="GetMonthlyIncomeRequest",GetMonthlyIncomeRequest.__docgenInfo={description:"Represents the request for getting monthly income.",displayName:"GetMonthlyIncomeRequest",props:{}}}catch{}try{GetMonthlyIncomeResponse.displayName="GetMonthlyIncomeResponse",GetMonthlyIncomeResponse.__docgenInfo={description:"Represents the response for getting monthly income.",displayName:"GetMonthlyIncomeResponse",props:{}}}catch{}try{GetMonthlySavingsRequest.displayName="GetMonthlySavingsRequest",GetMonthlySavingsRequest.__docgenInfo={description:"Represents the request for getting monthly savings.",displayName:"GetMonthlySavingsRequest",props:{}}}catch{}try{GetMonthlySavingsResponse.displayName="GetMonthlySavingsResponse",GetMonthlySavingsResponse.__docgenInfo={description:"Represents the response for getting monthly savings.",displayName:"GetMonthlySavingsResponse",props:{}}}catch{}try{GetMonthlyTotalQuantityBySecurityAndUserRequest.displayName="GetMonthlyTotalQuantityBySecurityAndUserRequest",GetMonthlyTotalQuantityBySecurityAndUserRequest.__docgenInfo={description:"Represents the request for getting monthly total quantity by security and user.",displayName:"GetMonthlyTotalQuantityBySecurityAndUserRequest",props:{}}}catch{}try{GetMonthlyTotalQuantityBySecurityAndUserResponse.displayName="GetMonthlyTotalQuantityBySecurityAndUserResponse",GetMonthlyTotalQuantityBySecurityAndUserResponse.__docgenInfo={description:"Represents the response for getting monthly total quantity by security and user.",displayName:"GetMonthlyTotalQuantityBySecurityAndUserResponse",props:{}}}catch{}try{GetMonthlyTransactionCountRequest.displayName="GetMonthlyTransactionCountRequest",GetMonthlyTransactionCountRequest.__docgenInfo={description:"Represents the request for getting monthly transaction count.",displayName:"GetMonthlyTransactionCountRequest",props:{}}}catch{}try{GetMonthlyTransactionCountResponse.displayName="GetMonthlyTransactionCountResponse",GetMonthlyTransactionCountResponse.__docgenInfo={description:"Represents the response for getting monthly transaction count.",displayName:"GetMonthlyTransactionCountResponse",props:{}}}catch{}try{GetPaymentChannelMonthlyExpenditureRequest.displayName="GetPaymentChannelMonthlyExpenditureRequest",GetPaymentChannelMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting payment channel monthly expenditure.",displayName:"GetPaymentChannelMonthlyExpenditureRequest",props:{}}}catch{}try{GetPaymentChannelMonthlyExpenditureResponse.displayName="GetPaymentChannelMonthlyExpenditureResponse",GetPaymentChannelMonthlyExpenditureResponse.__docgenInfo={description:"Represents the response for getting payment channel monthly expenditure.",displayName:"GetPaymentChannelMonthlyExpenditureResponse",props:{}}}catch{}try{GetTotalInvestmentBySecurityRequest.displayName="GetTotalInvestmentBySecurityRequest",GetTotalInvestmentBySecurityRequest.__docgenInfo={description:"Represents the request for getting total investment by security.",displayName:"GetTotalInvestmentBySecurityRequest",props:{}}}catch{}try{GetTotalInvestmentBySecurityResponse.displayName="GetTotalInvestmentBySecurityResponse",GetTotalInvestmentBySecurityResponse.__docgenInfo={description:"Represents the response for getting total investment by security.",displayName:"GetTotalInvestmentBySecurityResponse",props:{}}}catch{}try{GetTransactionsForBankAccountResponse.displayName="GetTransactionsForBankAccountResponse",GetTransactionsForBankAccountResponse.__docgenInfo={description:"Represents the response for getting transactions for a bank account.",displayName:"GetTransactionsForBankAccountResponse",props:{}}}catch{}try{GetTransactionsForBankAccountRequest.displayName="GetTransactionsForBankAccountRequest",GetTransactionsForBankAccountRequest.__docgenInfo={description:"Class representing a request to get transactions for a bank account.",displayName:"GetTransactionsForBankAccountRequest",props:{}}}catch{}try{GetTransactionsRequest.displayName="GetTransactionsRequest",GetTransactionsRequest.__docgenInfo={description:`GetTransactionsRequest class

Represents a request for getting transactions.`,displayName:"GetTransactionsRequest",props:{}}}catch{}try{GetUserAccountBalanceHistoryResponse.displayName="GetUserAccountBalanceHistoryResponse",GetUserAccountBalanceHistoryResponse.__docgenInfo={description:"Represents the response for getting user account balance history.",displayName:"GetUserAccountBalanceHistoryResponse",props:{}}}catch{}try{GetUserAccountBalanceHistoryRequest.displayName="GetUserAccountBalanceHistoryRequest",GetUserAccountBalanceHistoryRequest.__docgenInfo={description:"Represents the request for getting user account balance history.",displayName:"GetUserAccountBalanceHistoryRequest",props:{}}}catch{}try{GetUserCategoryMonthlyExpenditureRequest.displayName="GetUserCategoryMonthlyExpenditureRequest",GetUserCategoryMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting user category monthly expenditure.",displayName:"GetUserCategoryMonthlyExpenditureRequest",props:{}}}catch{}try{GetUserCategoryMonthlyIncomeRequest.displayName="GetUserCategoryMonthlyIncomeRequest",GetUserCategoryMonthlyIncomeRequest.__docgenInfo={description:"Represents the request for getting user category monthly income.",displayName:"GetUserCategoryMonthlyIncomeRequest",props:{}}}catch{}try{ResetPasswordResponse.displayName="ResetPasswordResponse",ResetPasswordResponse.__docgenInfo={description:"Represents a response containing a token.",displayName:"ResetPasswordResponse",props:{}}}catch{}try{UpdateUserAccountRequest.displayName="UpdateUserAccountRequest",UpdateUserAccountRequest.__docgenInfo={description:`UpdateUserRequest: Represents the request object invoked against the user
service to update a given user account`,displayName:"UpdateUserAccountRequest",props:{}}}catch{}try{Address.displayName="Address",Address.__docgenInfo={description:`Represents a geographic address.

This class provides a structured representation of a physical location, capturing details such as address line, city, state, unit, zipcode, and geo-coordinates.
It also has utility methods like \`getFullAddress\` to fetch a formatted string representation of the address.`,displayName:"Address",props:{}}}catch{}try{Tag.displayName="Tag",Tag.__docgenInfo={description:`Represents a metadata tag.

The \`Tag\` class provides a structured representation for tags, commonly used for categorization or metadata annotation.
Each tag can have a name, a description, and associated metadata.`,displayName:"Tag",props:{}}}catch{}try{BackendError.displayName="BackendError",BackendError.__docgenInfo={description:"Represents an error response from the backend or service.",displayName:"BackendError",props:{}}}catch{}try{ErrorMessage.displayName="ErrorMessage",ErrorMessage.__docgenInfo={description:"Represents an error message that might include HTTP-specific details.",displayName:"ErrorMessage",props:{}}}catch{}try{ErrorMetadata.displayName="ErrorMetadata",ErrorMetadata.__docgenInfo={description:`Represents metadata associated with an error.
This might be directly from a service or part of an error response.`,displayName:"ErrorMetadata",props:{}}}catch{}try{ErrorResponse.displayName="ErrorResponse",ErrorResponse.__docgenInfo={description:"Represents a full error response, which may be returned to a client or user.",displayName:"ErrorResponse",props:{}}}catch{}try{Pocket.displayName="Pocket",Pocket.__docgenInfo={description:"Pocket represents the Pocket entity.",displayName:"Pocket",props:{}}}catch{}try{BankAccountStatus.displayName="BankAccountStatus",BankAccountStatus.__docgenInfo={description:"BankAccountStatus represents the status of a bank account.",displayName:"BankAccountStatus",props:{}}}catch{}try{BankAccount.displayName="BankAccount",BankAccount.__docgenInfo={description:"Represents a bank account tied to a user.",displayName:"BankAccount",props:{}}}catch{}try{FinancialProfile.displayName="FinancialProfile",FinancialProfile.__docgenInfo={description:"Represents a user's financial profile.",displayName:"FinancialProfile",props:{}}}catch{}try{LinkStatus.displayName="LinkStatus",LinkStatus.__docgenInfo={description:"Enum representing the status of a link.",displayName:"LinkStatus",props:{}}}catch{}try{LinkType.displayName="LinkType",LinkType.__docgenInfo={description:"Enum representing the type of a link.",displayName:"LinkType",props:{}}}catch{}try{PlaidLink.displayName="PlaidLink",PlaidLink.__docgenInfo={description:"Represents linking information related to Plaid.",displayName:"PlaidLink",props:{}}}catch{}try{PlaidSync.displayName="PlaidSync",PlaidSync.__docgenInfo={description:"Represents synchronization information related to Plaid.",displayName:"PlaidSync",props:{}}}catch{}try{StripeSubscriptionStatus.displayName="StripeSubscriptionStatus",StripeSubscriptionStatus.__docgenInfo={description:"Enum representing the status of a Stripe subscription.",displayName:"StripeSubscriptionStatus",props:{}}}catch{}try{StripeSubscription.displayName="StripeSubscription",StripeSubscription.__docgenInfo={description:"Represents a subscription managed through the Stripe payment platform.",displayName:"StripeSubscription",props:{}}}catch{}try{Token.displayName="Token",Token.__docgenInfo={description:"Token object holding an access token used to make API requests related to a specific Item.",displayName:"Token",props:{}}}catch{}try{AccountBalanceHistory.displayName="AccountBalanceHistory",AccountBalanceHistory.__docgenInfo={description:"Represents the balance history of an account.",displayName:"AccountBalanceHistory",props:{}}}catch{}try{CategoryMetricsFinancialSubProfile.displayName="CategoryMetricsFinancialSubProfile",CategoryMetricsFinancialSubProfile.__docgenInfo={description:"Represents the financial sub-profile of a category.",displayName:"CategoryMetricsFinancialSubProfile",props:{}}}catch{}try{CategoryMonthlyExpenditure.displayName="CategoryMonthlyExpenditure",CategoryMonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a category.",displayName:"CategoryMonthlyExpenditure",props:{}}}catch{}try{CategoryMonthlyIncome.displayName="CategoryMonthlyIncome",CategoryMonthlyIncome.__docgenInfo={description:"Represents the monthly income of a category.",displayName:"CategoryMonthlyIncome",props:{}}}catch{}try{CategoryMonthlyTransactionCount.displayName="CategoryMonthlyTransactionCount",CategoryMonthlyTransactionCount.__docgenInfo={description:"Represents the monthly transaction count of a category.",displayName:"CategoryMonthlyTransactionCount",props:{}}}catch{}try{DebtToIncomeRatio.displayName="DebtToIncomeRatio",DebtToIncomeRatio.__docgenInfo={description:"Represents the debt to income ratio of a user.",displayName:"DebtToIncomeRatio",props:{}}}catch{}try{ExpenseMetricsFinancialSubProfileMetrics.displayName="ExpenseMetricsFinancialSubProfileMetrics",ExpenseMetricsFinancialSubProfileMetrics.__docgenInfo={description:"Represents the financial sub-profile metrics related to a user's expenses.",displayName:"ExpenseMetricsFinancialSubProfileMetrics",props:{}}}catch{}try{ExpenseMetrics.displayName="ExpenseMetrics",ExpenseMetrics.__docgenInfo={description:"Represents the expense metrics related to a user's personal finance.",displayName:"ExpenseMetrics",props:{}}}catch{}try{FinancialProfileMetrics.displayName="FinancialProfileMetrics",FinancialProfileMetrics.__docgenInfo={description:"Represents the comprehensive financial profile of a user.",displayName:"FinancialProfileMetrics",props:{}}}catch{}try{IncomeExpenseRatio.displayName="IncomeExpenseRatio",IncomeExpenseRatio.__docgenInfo={description:"Represents the income-expense ratio of a user for a particular month.",displayName:"IncomeExpenseRatio",props:{}}}catch{}try{IncomeMetricsFinancialSubProfile.displayName="IncomeMetricsFinancialSubProfile",IncomeMetricsFinancialSubProfile.__docgenInfo={description:"Represents the income metrics for a user's financial sub-profile.",displayName:"IncomeMetricsFinancialSubProfile",props:{}}}catch{}try{IncomeMetrics.displayName="IncomeMetrics",IncomeMetrics.__docgenInfo={description:"Represents the income metrics for a user.",displayName:"IncomeMetrics",props:{}}}catch{}try{InvestmentTransaction.displayName="InvestmentTransaction",InvestmentTransaction.__docgenInfo={description:"Represents an investment transaction.",displayName:"InvestmentTransaction",props:{}}}catch{}try{LocationFinancialSubProfile.displayName="LocationFinancialSubProfile",LocationFinancialSubProfile.__docgenInfo={description:"Represents the financial sub profile of a location.",displayName:"LocationFinancialSubProfile",props:{}}}catch{}try{MelodyFinancialContext.displayName="MelodyFinancialContext",MelodyFinancialContext.__docgenInfo={description:"Represents the comprehensive financial context of a user.",displayName:"MelodyFinancialContext",props:{}}}catch{}try{MerchantMetricsFinancialSubProfile.displayName="MerchantMetricsFinancialSubProfile",MerchantMetricsFinancialSubProfile.__docgenInfo={description:"Represents the financial sub profile of a merchant.",displayName:"MerchantMetricsFinancialSubProfile",props:{}}}catch{}try{MerchantMonthlyExpenditure.displayName="MerchantMonthlyExpenditure",MerchantMonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a merchant.",displayName:"MerchantMonthlyExpenditure",props:{}}}catch{}try{MonthlyBalance.displayName="MonthlyBalance",MonthlyBalance.__docgenInfo={description:"Represents the monthly balance of a user.",displayName:"MonthlyBalance",props:{}}}catch{}try{MonthlyExpenditure.displayName="MonthlyExpenditure",MonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a user.",displayName:"MonthlyExpenditure",props:{}}}catch{}try{MonthlyIncome.displayName="MonthlyIncome",MonthlyIncome.__docgenInfo={description:"Represents the monthly income of a user.",displayName:"MonthlyIncome",props:{}}}catch{}try{MonthlySavings.displayName="MonthlySavings",MonthlySavings.__docgenInfo={description:"Represents the monthly savings of a user.",displayName:"MonthlySavings",props:{}}}catch{}try{MonthlyTotalQuantityBySecurityAndUser.displayName="MonthlyTotalQuantityBySecurityAndUser",MonthlyTotalQuantityBySecurityAndUser.__docgenInfo={description:"Represents the monthly total quantity of a security by user.",displayName:"MonthlyTotalQuantityBySecurityAndUser",props:{}}}catch{}try{MonthlyTransactionCount.displayName="MonthlyTransactionCount",MonthlyTransactionCount.__docgenInfo={description:"Represents the monthly transaction count of a user.",displayName:"MonthlyTransactionCount",props:{}}}catch{}try{PaymentChannelMetricsFinancialSubProfile.displayName="PaymentChannelMetricsFinancialSubProfile",PaymentChannelMetricsFinancialSubProfile.__docgenInfo={description:"Represents the financial sub profile of a payment channel.",displayName:"PaymentChannelMetricsFinancialSubProfile",props:{}}}catch{}try{PaymentChannelMonthlyExpenditure.displayName="PaymentChannelMonthlyExpenditure",PaymentChannelMonthlyExpenditure.__docgenInfo={description:"Represents the monthly expenditure of a payment channel.",displayName:"PaymentChannelMonthlyExpenditure",props:{}}}catch{}try{ReCurringFlow.displayName="ReCurringFlow",ReCurringFlow.__docgenInfo={description:"Represents the types of recurring flows.",displayName:"ReCurringFlow",props:{}}}catch{}try{ReOccuringTransaction.displayName="ReOccuringTransaction",ReOccuringTransaction.__docgenInfo={description:"Represents a recurring financial transaction for a user.",displayName:"ReOccuringTransaction",props:{}}}catch{}try{ReOccuringTransactionsFrequency.displayName="ReOccuringTransactionsFrequency",ReOccuringTransactionsFrequency.__docgenInfo={description:"Represents the frequency of a recurring transaction.",displayName:"ReOccuringTransactionsFrequency",props:{}}}catch{}try{ReOccuringTransactionsStatus.displayName="ReOccuringTransactionsStatus",ReOccuringTransactionsStatus.__docgenInfo={description:"Represents the different statuses of reoccurring transactions.",displayName:"ReOccuringTransactionsStatus",props:{}}}catch{}try{TotalInvestmentBySecurity.displayName="TotalInvestmentBySecurity",TotalInvestmentBySecurity.__docgenInfo={description:"Represents the total investment in a particular security.",displayName:"TotalInvestmentBySecurity",props:{}}}catch{}try{TransactionAggregatesByMonth.displayName="TransactionAggregatesByMonth",TransactionAggregatesByMonth.__docgenInfo={description:"Represents the aggregated transactions of a user by month.",displayName:"TransactionAggregatesByMonth",props:{}}}catch{}try{Transaction.displayName="Transaction",Transaction.__docgenInfo={description:"Represents a financial transaction.",displayName:"Transaction",props:{}}}catch{}try{UserFinancialHealthMetricsTable.displayName="UserFinancialHealthMetricsTable",UserFinancialHealthMetricsTable.__docgenInfo={description:"Represents the financial health metrics of a user.",displayName:"UserFinancialHealthMetricsTable",props:{}}}catch{}try{GetAccountBalanceHistoryRequest.displayName="GetAccountBalanceHistoryRequest",GetAccountBalanceHistoryRequest.__docgenInfo={description:"Represents the request for getting account balance history.",displayName:"GetAccountBalanceHistoryRequest",props:{}}}catch{}try{GetCategoryMonthlyTransactionCountRequest.displayName="GetCategoryMonthlyTransactionCountRequest",GetCategoryMonthlyTransactionCountRequest.__docgenInfo={description:"Represents the request for getting category monthly transaction count.",displayName:"GetCategoryMonthlyTransactionCountRequest",props:{}}}catch{}try{GetDebtToIncomeRatioRequest.displayName="GetDebtToIncomeRatioRequest",GetDebtToIncomeRatioRequest.__docgenInfo={description:"Represents the request for getting debt to income ratio.",displayName:"GetDebtToIncomeRatioRequest",props:{}}}catch{}try{GetDebtToIncomeRatioResponse.displayName="GetDebtToIncomeRatioResponse",GetDebtToIncomeRatioResponse.__docgenInfo={description:"Represents the response for getting debt to income ratio.",displayName:"GetDebtToIncomeRatioResponse",props:{}}}catch{}try{GetExpenseMetricsRequest.displayName="GetExpenseMetricsRequest",GetExpenseMetricsRequest.__docgenInfo={description:"Represents the request for getting expense metrics.",displayName:"GetExpenseMetricsRequest",props:{}}}catch{}try{GetExpenseMetricsResponse.displayName="GetExpenseMetricsResponse",GetExpenseMetricsResponse.__docgenInfo={description:"Represents the response for getting expense metrics.",displayName:"GetExpenseMetricsResponse",props:{}}}catch{}try{GetMelodyFinancialContextResponse.displayName="GetMelodyFinancialContextResponse",GetMelodyFinancialContextResponse.__docgenInfo={description:"Represents the response for getting melody financial context.",displayName:"GetMelodyFinancialContextResponse",props:{}}}catch{}try{GetMelodyFinancialContextRequest.displayName="GetMelodyFinancialContextRequest",GetMelodyFinancialContextRequest.__docgenInfo={description:"Represents the request for getting Melody financial context.",displayName:"GetMelodyFinancialContextRequest",props:{}}}catch{}try{GetFinancialProfileRequest.displayName="GetFinancialProfileRequest",GetFinancialProfileRequest.__docgenInfo={description:"Represents the request for getting financial profile.",displayName:"GetFinancialProfileRequest",props:{}}}catch{}try{GetFinancialProfileResponse.displayName="GetFinancialProfileResponse",GetFinancialProfileResponse.__docgenInfo={description:"Represents the response for getting financial profile.",displayName:"GetFinancialProfileResponse",props:{}}}catch{}try{GetIncomeExpenseRatioRequest.displayName="GetIncomeExpenseRatioRequest",GetIncomeExpenseRatioRequest.__docgenInfo={description:"Represents the request for getting income expense ratio.",displayName:"GetIncomeExpenseRatioRequest",props:{}}}catch{}try{GetIncomeExpenseRatioResponse.displayName="GetIncomeExpenseRatioResponse",GetIncomeExpenseRatioResponse.__docgenInfo={description:"Represents the response for getting income expense ratio.",displayName:"GetIncomeExpenseRatioResponse",props:{}}}catch{}try{GetIncomeMetricsRequest.displayName="GetIncomeMetricsRequest",GetIncomeMetricsRequest.__docgenInfo={description:"Represents the request for getting income metrics.",displayName:"GetIncomeMetricsRequest",props:{}}}catch{}try{GetIncomeMetricsResponse.displayName="GetIncomeMetricsResponse",GetIncomeMetricsResponse.__docgenInfo={description:"Represents the response for getting income metrics.",displayName:"GetIncomeMetricsResponse",props:{}}}catch{}try{GetMerchantMonthlyExpenditureRequest.displayName="GetMerchantMonthlyExpenditureRequest",GetMerchantMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting merchant monthly expenditure.",displayName:"GetMerchantMonthlyExpenditureRequest",props:{}}}catch{}try{GetMerchantMonthlyExpenditureResponse.displayName="GetMerchantMonthlyExpenditureResponse",GetMerchantMonthlyExpenditureResponse.__docgenInfo={description:"Represents the response for getting merchant monthly expenditure.",displayName:"GetMerchantMonthlyExpenditureResponse",props:{}}}catch{}try{GetMonthlyBalanceRequest.displayName="GetMonthlyBalanceRequest",GetMonthlyBalanceRequest.__docgenInfo={description:"Represents the request for getting monthly balance.",displayName:"GetMonthlyBalanceRequest",props:{}}}catch{}try{GetMonthlyBalanceResponse.displayName="GetMonthlyBalanceResponse",GetMonthlyBalanceResponse.__docgenInfo={description:"Represents the response for getting monthly balance.",displayName:"GetMonthlyBalanceResponse",props:{}}}catch{}try{GetMonthlyExpenditureRequest.displayName="GetMonthlyExpenditureRequest",GetMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting monthly expenditure.",displayName:"GetMonthlyExpenditureRequest",props:{}}}catch{}try{GetMonthlyExpenditureResponse.displayName="GetMonthlyExpenditureResponse",GetMonthlyExpenditureResponse.__docgenInfo={description:"Represents the response for getting monthly expenditure.",displayName:"GetMonthlyExpenditureResponse",props:{}}}catch{}try{GetMonthlyIncomeRequest.displayName="GetMonthlyIncomeRequest",GetMonthlyIncomeRequest.__docgenInfo={description:"Represents the request for getting monthly income.",displayName:"GetMonthlyIncomeRequest",props:{}}}catch{}try{GetMonthlyIncomeResponse.displayName="GetMonthlyIncomeResponse",GetMonthlyIncomeResponse.__docgenInfo={description:"Represents the response for getting monthly income.",displayName:"GetMonthlyIncomeResponse",props:{}}}catch{}try{GetMonthlySavingsRequest.displayName="GetMonthlySavingsRequest",GetMonthlySavingsRequest.__docgenInfo={description:"Represents the request for getting monthly savings.",displayName:"GetMonthlySavingsRequest",props:{}}}catch{}try{GetMonthlySavingsResponse.displayName="GetMonthlySavingsResponse",GetMonthlySavingsResponse.__docgenInfo={description:"Represents the response for getting monthly savings.",displayName:"GetMonthlySavingsResponse",props:{}}}catch{}try{GetMonthlyTotalQuantityBySecurityAndUserRequest.displayName="GetMonthlyTotalQuantityBySecurityAndUserRequest",GetMonthlyTotalQuantityBySecurityAndUserRequest.__docgenInfo={description:"Represents the request for getting monthly total quantity by security and user.",displayName:"GetMonthlyTotalQuantityBySecurityAndUserRequest",props:{}}}catch{}try{GetMonthlyTotalQuantityBySecurityAndUserResponse.displayName="GetMonthlyTotalQuantityBySecurityAndUserResponse",GetMonthlyTotalQuantityBySecurityAndUserResponse.__docgenInfo={description:"Represents the response for getting monthly total quantity by security and user.",displayName:"GetMonthlyTotalQuantityBySecurityAndUserResponse",props:{}}}catch{}try{GetMonthlyTransactionCountRequest.displayName="GetMonthlyTransactionCountRequest",GetMonthlyTransactionCountRequest.__docgenInfo={description:"Represents the request for getting monthly transaction count.",displayName:"GetMonthlyTransactionCountRequest",props:{}}}catch{}try{GetMonthlyTransactionCountResponse.displayName="GetMonthlyTransactionCountResponse",GetMonthlyTransactionCountResponse.__docgenInfo={description:"Represents the response for getting monthly transaction count.",displayName:"GetMonthlyTransactionCountResponse",props:{}}}catch{}try{GetPaymentChannelMonthlyExpenditureRequest.displayName="GetPaymentChannelMonthlyExpenditureRequest",GetPaymentChannelMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting payment channel monthly expenditure.",displayName:"GetPaymentChannelMonthlyExpenditureRequest",props:{}}}catch{}try{GetPaymentChannelMonthlyExpenditureResponse.displayName="GetPaymentChannelMonthlyExpenditureResponse",GetPaymentChannelMonthlyExpenditureResponse.__docgenInfo={description:"Represents the response for getting payment channel monthly expenditure.",displayName:"GetPaymentChannelMonthlyExpenditureResponse",props:{}}}catch{}try{GetTotalInvestmentBySecurityRequest.displayName="GetTotalInvestmentBySecurityRequest",GetTotalInvestmentBySecurityRequest.__docgenInfo={description:"Represents the request for getting total investment by security.",displayName:"GetTotalInvestmentBySecurityRequest",props:{}}}catch{}try{GetTotalInvestmentBySecurityResponse.displayName="GetTotalInvestmentBySecurityResponse",GetTotalInvestmentBySecurityResponse.__docgenInfo={description:"Represents the response for getting total investment by security.",displayName:"GetTotalInvestmentBySecurityResponse",props:{}}}catch{}try{GetTransactionsForBankAccountResponse.displayName="GetTransactionsForBankAccountResponse",GetTransactionsForBankAccountResponse.__docgenInfo={description:"Represents the response for getting transactions for a bank account.",displayName:"GetTransactionsForBankAccountResponse",props:{}}}catch{}try{GetTransactionsForBankAccountRequest.displayName="GetTransactionsForBankAccountRequest",GetTransactionsForBankAccountRequest.__docgenInfo={description:"Class representing a request to get transactions for a bank account.",displayName:"GetTransactionsForBankAccountRequest",props:{}}}catch{}try{GetTransactionsRequest.displayName="GetTransactionsRequest",GetTransactionsRequest.__docgenInfo={description:`GetTransactionsRequest class

Represents a request for getting transactions.`,displayName:"GetTransactionsRequest",props:{}}}catch{}try{GetUserAccountBalanceHistoryResponse.displayName="GetUserAccountBalanceHistoryResponse",GetUserAccountBalanceHistoryResponse.__docgenInfo={description:"Represents the response for getting user account balance history.",displayName:"GetUserAccountBalanceHistoryResponse",props:{}}}catch{}try{GetUserAccountBalanceHistoryRequest.displayName="GetUserAccountBalanceHistoryRequest",GetUserAccountBalanceHistoryRequest.__docgenInfo={description:"Represents the request for getting user account balance history.",displayName:"GetUserAccountBalanceHistoryRequest",props:{}}}catch{}try{GetUserCategoryMonthlyExpenditureRequest.displayName="GetUserCategoryMonthlyExpenditureRequest",GetUserCategoryMonthlyExpenditureRequest.__docgenInfo={description:"Represents the request for getting user category monthly expenditure.",displayName:"GetUserCategoryMonthlyExpenditureRequest",props:{}}}catch{}try{GetUserCategoryMonthlyIncomeRequest.displayName="GetUserCategoryMonthlyIncomeRequest",GetUserCategoryMonthlyIncomeRequest.__docgenInfo={description:"Represents the request for getting user category monthly income.",displayName:"GetUserCategoryMonthlyIncomeRequest",props:{}}}catch{}try{ResetPasswordResponse.displayName="ResetPasswordResponse",ResetPasswordResponse.__docgenInfo={description:"Represents a response containing a token.",displayName:"ResetPasswordResponse",props:{}}}catch{}try{UpdateUserAccountRequest.displayName="UpdateUserAccountRequest",UpdateUserAccountRequest.__docgenInfo={description:`UpdateUserRequest: Represents the request object invoked against the user
service to update a given user account`,displayName:"UpdateUserAccountRequest",props:{}}}catch{}try{Publication.displayName="Publication",Publication.__docgenInfo={description:`A Publication is a collections of stories based around a common theme. Anyone can create them
As the creator of a publication, you're an editor by default, which means you have the ability to
a) add writers to your publication,
b) edit and publish the stories that are submitted by your writers, and
c) review the metrics for all of the stories that are part of your publication.
As the publication's creator, you'll also have the ability
to appoint new editors (so they can do all of that stuff I just mentioned)

Use Case
- An online magazine, a publication with a fixed publication staff that posts stories around a specific topic
- A community publication, a publication that accepts stories published around Medium
- A company blog, a publication that is created specifically to share company news
- A collection of individual stories by a single author that are parts of a larger whole

Publications can be thought of as a collection of posts or articles, curated and managed by one or more administrators and editors.`,displayName:"Publication",props:{}}}catch{}try{SocialUserProfile.displayName="SocialUserProfile",SocialUserProfile.__docgenInfo={description:`Represents a user's social profile on the platform.

The SocialUserProfile captures various details about a user's presence and activity in the social aspect of the platform. This includes details such as interests (tags), followers and following counts, profile image, and timelines.`,displayName:"SocialUserProfile",props:{}}}catch{}try{SocialAccount.displayName="SocialAccount",SocialAccount.__docgenInfo={description:"Represents a social account in the platform.\n\nA `SocialAccount` is a representation of a user's social presence on the platform. It captures details about followers, following, tags (interests), profile imagery, and more.",displayName:"SocialAccount",props:{}}}catch{}try{UserAccount.displayName="UserAccount",UserAccount.__docgenInfo={description:`Represents a user's account in simfiny's backend.

The \`UserAccount\` class is central to operations within simfiny's backend. An instance of this class captures a user's details and
metadata such as their address, contact information, profile data, account verification status, and more.`,displayName:"UserAccount",props:{}}}catch{}const fe=B.forwardRef(({className:e,...t},n)=>F.jsx("div",{ref:n,className:v("rounded-xl border border-slate-200 bg-white text-slate-950 shadow dark:border-slate-800 dark:bg-slate-950 dark:text-slate-50",e),...t}));fe.displayName="Card";const gn=B.forwardRef(({className:e,...t},n)=>F.jsx("div",{ref:n,className:v("flex flex-col space-y-1.5 p-6",e),...t}));gn.displayName="CardHeader";const fn=B.forwardRef(({className:e,...t},n)=>F.jsx("h3",{ref:n,className:v("font-semibold leading-none tracking-tight",e),...t}));fn.displayName="CardTitle";const In=B.forwardRef(({className:e,...t},n)=>F.jsx("p",{ref:n,className:v("text-sm text-slate-500 dark:text-slate-400",e),...t}));In.displayName="CardDescription";const Nn=B.forwardRef(({className:e,...t},n)=>F.jsx("div",{ref:n,className:v("p-6 pt-0",e),...t}));Nn.displayName="CardContent";const Rn=B.forwardRef(({className:e,...t},n)=>F.jsx("div",{ref:n,className:v("flex items-center p-6 pt-0",e),...t}));Rn.displayName="CardFooter";try{fe.displayName="Card",fe.__docgenInfo={description:"",displayName:"Card",props:{}}}catch{}export{nt as A,Je as B,fe as C,Xe as F,At as R,xt as T,gn as a,fn as b,Br as c,Nn as d,v as e,ke as f,In as g,Rn as h,d as i,p as j,yn as k,qe as l,G as m,me as n,Ke as o,$ as p,Ve as q,De as r,Qr as s,ln as t};
//# sourceMappingURL=card-b76ebb31.js.map
